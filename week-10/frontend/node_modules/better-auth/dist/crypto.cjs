"use strict";var m=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var T=(r,t)=>{for(var e in t)m(r,e,{get:t[e],enumerable:!0})},H=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of B(t))!S.call(r,o)&&o!==e&&m(r,o,{get:()=>t[o],enumerable:!(n=l(t,o))||n.enumerable});return r};var b=r=>H(m({},"__esModule",{value:!0}),r);var K={};T(K,{compareHash:()=>E,constantTimeEqual:()=>i,generateRandomString:()=>D,hashPassword:()=>N,hashToBase64:()=>k,signJWT:()=>U,symmetricDecrypt:()=>q,symmetricEncrypt:()=>O,verifyPassword:()=>P});module.exports=b(K);var p=require("@better-auth/utils/hash"),g=require("@noble/ciphers/chacha"),a=require("@noble/ciphers/utils"),u=require("@noble/ciphers/webcrypto");function i(r,t){let e=new Uint8Array(r),n=new Uint8Array(t);if(e.length!==n.length)return!1;let o=0;for(let c=0;c<e.length;c++)o|=e[c]^n[c];return o===0}var f=require("@better-auth/utils/hash");async function k(r){let t=await(0,f.createHash)("SHA-256").digest(r);return Buffer.from(t).toString("base64")}async function E(r,t){let e=await(0,f.createHash)("SHA-256").digest(typeof r=="string"?new TextEncoder().encode(r):r),n=Buffer.from(t,"base64");return i(e,n)}var d=require("jose");async function U(r,t,e=3600){return await new d.SignJWT(r).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+e).sign(new TextEncoder().encode(t))}var x=require("@noble/hashes/scrypt"),h=require("uncrypto"),y=require("@better-auth/utils/hex"),s={N:16384,r:16,p:1,dkLen:64};async function w(r,t){return await(0,x.scryptAsync)(r.normalize("NFKC"),t,{N:s.N,p:s.p,r:s.r,dkLen:s.dkLen,maxmem:128*s.N*s.r*2})}var N=async r=>{let t=y.hex.encode((0,h.getRandomValues)(new Uint8Array(16))),e=await w(r,t);return`${t}:${y.hex.encode(e)}`},P=async({hash:r,password:t})=>{let[e,n]=r.split(":"),o=await w(t,e);return i(o,new Uint8Array(Buffer.from(n,"hex")))};var A=require("@better-auth/utils/random"),D=(0,A.createRandomStringGenerator)("a-z","0-9","A-Z","-_");var O=async({key:r,data:t})=>{let e=await(0,p.createHash)("SHA-256").digest(r),n=(0,a.utf8ToBytes)(t),o=(0,u.managedNonce)(g.xchacha20poly1305)(new Uint8Array(e));return(0,a.bytesToHex)(o.encrypt(n))},q=async({key:r,data:t})=>{let e=await(0,p.createHash)("SHA-256").digest(r),n=(0,a.hexToBytes)(t),o=(0,u.managedNonce)(g.xchacha20poly1305)(new Uint8Array(e));return new TextDecoder().decode(o.decrypt(n))};0&&(module.exports={compareHash,constantTimeEqual,generateRandomString,hashPassword,hashToBase64,signJWT,symmetricDecrypt,symmetricEncrypt,verifyPassword});
