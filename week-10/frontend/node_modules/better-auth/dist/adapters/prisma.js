import{z as n}from"zod";import{APIError as W}from"better-call";var J=n.object({id:n.string(),providerId:n.string(),accountId:n.string(),userId:n.string(),accessToken:n.string().nullish(),refreshToken:n.string().nullish(),idToken:n.string().nullish(),accessTokenExpiresAt:n.date().nullish(),refreshTokenExpiresAt:n.date().nullish(),scope:n.string().nullish(),password:n.string().nullish(),createdAt:n.date().default(()=>new Date),updatedAt:n.date().default(()=>new Date)}),G=n.object({id:n.string(),email:n.string().transform(e=>e.toLowerCase()),emailVerified:n.boolean().default(!1),name:n.string(),image:n.string().nullish(),createdAt:n.date().default(()=>new Date),updatedAt:n.date().default(()=>new Date)}),z=n.object({id:n.string(),userId:n.string(),expiresAt:n.date(),createdAt:n.date().default(()=>new Date),updatedAt:n.date().default(()=>new Date),token:n.string(),ipAddress:n.string().nullish(),userAgent:n.string().nullish()}),Z=n.object({id:n.string(),value:n.string(),createdAt:n.date().default(()=>new Date),updatedAt:n.date().default(()=>new Date),expiresAt:n.date(),identifier:n.string()});var T=Object.create(null),b=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?T:globalThis),I=new Proxy(T,{get(e,i){return b()[i]??T[i]},has(e,i){let u=b();return i in u||i in T},set(e,i,u){let c=b(!0);return c[i]=u,!0},deleteProperty(e,i){if(!i)return!1;let u=b(!0);return delete u[i],!0},ownKeys(){let e=b(!0);return Object.keys(e)}});function D(e){return e?e!=="false":!1}var N=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var q=N==="test"||D(I.TEST);import{createRandomStringGenerator as S}from"@better-auth/utils/random";var v=e=>S("a-z","A-Z","0-9")(e||32);import{z as ze}from"zod";import{APIError as Qe}from"better-call";var A=class extends Error{constructor(i,u){super(i),this.name="BetterAuthError",this.message=i,this.cause=u,this.stack=""}};import{createHash as Se}from"@better-auth/utils/hash";import{xchacha20poly1305 as Be}from"@noble/ciphers/chacha";import{bytesToHex as Pe,hexToBytes as Ee,utf8ToBytes as Me}from"@noble/ciphers/utils";import{managedNonce as Ce}from"@noble/ciphers/webcrypto";import{createHash as ge}from"@better-auth/utils/hash";import{SignJWT as xe}from"jose";import{scryptAsync as Te}from"@noble/hashes/scrypt";import{getRandomValues as Re}from"uncrypto";import{hex as Oe}from"@better-auth/utils/hex";import{createRandomStringGenerator as B}from"@better-auth/utils/random";var L=B("a-z","0-9","A-Z","-_");var R=["info","success","warn","error","debug"];function P(e,i){return R.indexOf(i)<=R.indexOf(e)}var h={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},E={info:h.fg.blue,success:h.fg.green,warn:h.fg.yellow,error:h.fg.red,debug:h.fg.magenta},M=(e,i)=>{let u=new Date().toISOString();return`${h.dim}${u}${h.reset} ${E[e]}${e.toUpperCase()}${h.reset} ${h.bright}[Better Auth]:${h.reset} ${i}`},O=e=>{let i=e?.disabled!==!0,u=e?.level??"error",c=(l,m,f=[])=>{if(!i||!P(u,l))return;let a=M(l,m);if(!e||typeof e.log!="function"){l==="error"?console.error(a,...f):l==="warn"?console.warn(a,...f):console.log(a,...f);return}e.log(l==="success"?"info":l,m,...f)};return Object.fromEntries(R.map(l=>[l,(...[m,...f])=>c(l,m,f)]))},V=O();var w=e=>{let i=e.plugins?.reduce((s,p)=>{let d=p.schema;if(!d)return s;for(let[t,o]of Object.entries(d))s[t]={fields:{...s[t]?.fields,...o.fields},modelName:o.modelName||t};return s},{}),u=e.rateLimit?.storage==="database",c={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:l,session:m,account:f,...a}=i||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...l?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...m?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...f?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...a,...u?c:{}}};import{z as It}from"zod";import{Kysely as Dt,MssqlDialect as Nt}from"kysely";import{MysqlDialect as St,PostgresDialect as Ut,SqliteDialect as Bt}from"kysely";function k(e,i,u){return u==="update"?e:e==null&&i.defaultValue?typeof i.defaultValue=="function"?i.defaultValue():i.defaultValue:e}var _=(e,i)=>{let u=w(i);function c(a,s){return s==="id"?s:u[a].fields[s].fieldName||s}function l(a){switch(a){case"starts_with":return"startsWith";case"ends_with":return"endsWith";default:return a}}function m(a){return u[a].modelName}let f=i?.advanced?.generateId===!1;return{transformInput(a,s,p){let d=f||p==="update"?{}:{id:i.advanced?.generateId?i.advanced.generateId({model:s}):a.id||v()},t=u[s].fields;for(let o in t){let r=a[o];r===void 0&&(!t[o].defaultValue||p==="update")||(d[t[o].fieldName||o]=k(r,t[o],p))}return d},transformOutput(a,s,p=[]){if(!a)return null;let d=a.id||a._id?p.length===0||p.includes("id")?{id:a.id}:{}:{},t=u[s].fields;for(let o in t){if(p.length&&!p.includes(o))continue;let r=t[o];r&&(d[o]=a[r.fieldName||o])}return d},convertWhereClause(a,s){if(!s)return{};if(s.length===1){let r=s[0];return r?{[c(a,r.field)]:r.operator==="eq"||!r.operator?r.value:{[l(r.operator)]:r.value}}:void 0}let p=s.filter(r=>r.connector==="AND"||!r.connector),d=s.filter(r=>r.connector==="OR"),t=p.map(r=>({[c(a,r.field)]:r.operator==="eq"||!r.operator?r.value:{[l(r.operator)]:r.value}})),o=d.map(r=>({[c(a,r.field)]:{[r.operator||"eq"]:r.value}}));return{...t.length?{AND:t}:{},...o.length?{OR:o}:{}}},convertSelect:(a,s)=>{if(!(!a||!s))return a.reduce((p,d)=>({...p,[c(s,d)]:!0}),{})},getModelName:m,getField:c}},Ir=(e,i)=>u=>{let c=e,{transformInput:l,transformOutput:m,convertWhereClause:f,convertSelect:a,getModelName:s,getField:p}=_(i,u);return{id:"prisma",async create(d){let{model:t,data:o,select:r}=d,y=l(o,t,"create");if(!c[s(t)])throw new A(`Model ${t} does not exist in the database. If you haven't generated the Prisma client, you need to run 'npx prisma generate'`);let g=await c[s(t)].create({data:y,select:a(r,t)});return m(g,t,r)},async findOne(d){let{model:t,where:o,select:r}=d,y=f(t,o);if(!c[s(t)])throw new A(`Model ${t} does not exist in the database. If you haven't generated the Prisma client, you need to run 'npx prisma generate'`);let g=await c[s(t)].findFirst({where:y,select:a(r,t)});return m(g,t,r)},async findMany(d){let{model:t,where:o,limit:r,offset:y,sortBy:g}=d,x=f(t,o);if(!c[s(t)])throw new A(`Model ${t} does not exist in the database. If you haven't generated the Prisma client, you need to run 'npx prisma generate'`);return(await c[s(t)].findMany({where:x,take:r||100,skip:y||0,...g?.field?{orderBy:{[p(t,g.field)]:g.direction==="desc"?"desc":"asc"}}:{}})).map(F=>m(F,t))},async update(d){let{model:t,where:o,update:r}=d;if(!c[s(t)])throw new A(`Model ${t} does not exist in the database. If you haven't generated the Prisma client, you need to run 'npx prisma generate'`);let y=f(t,o),g=l(r,t,"update"),x=await c[s(t)].update({where:y,data:g});return m(x,t)},async updateMany(d){let{model:t,where:o,update:r}=d,y=f(t,o),g=l(r,t,"update"),x=await c[s(t)].updateMany({where:y,data:g});return x?x.count:0},async delete(d){let{model:t,where:o}=d,r=f(t,o);try{await c[s(t)].delete({where:r})}catch{}},async deleteMany(d){let{model:t,where:o}=d,r=f(t,o),y=await c[s(t)].deleteMany({where:r});return y?y.count:0},options:i}};export{Ir as prismaAdapter};
