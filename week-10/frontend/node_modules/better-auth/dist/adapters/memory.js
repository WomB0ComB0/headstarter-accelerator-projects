import{z as r}from"zod";import{APIError as $}from"better-call";var H=r.object({id:r.string(),providerId:r.string(),accountId:r.string(),userId:r.string(),accessToken:r.string().nullish(),refreshToken:r.string().nullish(),idToken:r.string().nullish(),accessTokenExpiresAt:r.date().nullish(),refreshTokenExpiresAt:r.date().nullish(),scope:r.string().nullish(),password:r.string().nullish(),createdAt:r.date().default(()=>new Date),updatedAt:r.date().default(()=>new Date)}),K=r.object({id:r.string(),email:r.string().transform(e=>e.toLowerCase()),emailVerified:r.boolean().default(!1),name:r.string(),image:r.string().nullish(),createdAt:r.date().default(()=>new Date),updatedAt:r.date().default(()=>new Date)}),W=r.object({id:r.string(),userId:r.string(),expiresAt:r.date(),createdAt:r.date().default(()=>new Date),updatedAt:r.date().default(()=>new Date),token:r.string(),ipAddress:r.string().nullish(),userAgent:r.string().nullish()}),J=r.object({id:r.string(),value:r.string(),createdAt:r.date().default(()=>new Date),updatedAt:r.date().default(()=>new Date),expiresAt:r.date(),identifier:r.string()});var h=Object.create(null),y=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?h:globalThis),T=new Proxy(h,{get(e,a){return y()[a]??h[a]},has(e,a){let l=y();return a in l||a in h},set(e,a,l){let u=y(!0);return u[a]=l,!0},deleteProperty(e,a){if(!a)return!1;let l=y(!0);return delete l[a],!0},ownKeys(){let e=y(!0);return Object.keys(e)}});function R(e){return e?e!=="false":!1}var F=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var O=F==="test"||R(T.TEST);import{createRandomStringGenerator as I}from"@better-auth/utils/random";var x=e=>I("a-z","A-Z","0-9")(e||32);import{z as We}from"zod";import{APIError as ze}from"better-call";import{createHash as De}from"@better-auth/utils/hash";import{xchacha20poly1305 as Ne}from"@noble/ciphers/chacha";import{bytesToHex as qe,hexToBytes as Be,utf8ToBytes as Le}from"@noble/ciphers/utils";import{managedNonce as Pe}from"@noble/ciphers/webcrypto";import{createHash as pe}from"@better-auth/utils/hash";import{SignJWT as ge}from"jose";import{scryptAsync as we}from"@noble/hashes/scrypt";import{getRandomValues as ve}from"uncrypto";import{hex as ke}from"@better-auth/utils/hex";import{createRandomStringGenerator as N}from"@better-auth/utils/random";var S=N("a-z","0-9","A-Z","-_");var w=["info","success","warn","error","debug"];function q(e,a){return w.indexOf(a)<=w.indexOf(e)}var p={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},B={info:p.fg.blue,success:p.fg.green,warn:p.fg.yellow,error:p.fg.red,debug:p.fg.magenta},L=(e,a)=>{let l=new Date().toISOString();return`${p.dim}${l}${p.reset} ${B[e]}${e.toUpperCase()}${p.reset} ${p.bright}[Better Auth]:${p.reset} ${a}`},k=e=>{let a=e?.disabled!==!0,l=e?.level??"error",u=(s,f,t=[])=>{if(!a||!q(l,s))return;let i=L(s,f);if(!e||typeof e.log!="function"){s==="error"?console.error(i,...t):s==="warn"?console.warn(i,...t):console.log(i,...t);return}e.log(s==="success"?"info":s,f,...t)};return Object.fromEntries(w.map(s=>[s,(...[f,...t])=>u(s,f,t)]))},E=k();var g=e=>{let a=e.plugins?.reduce((n,d)=>{let c=d.schema;if(!c)return n;for(let[o,m]of Object.entries(c))n[o]={fields:{...n[o]?.fields,...m.fields},modelName:m.modelName||o};return n},{}),l=e.rateLimit?.storage==="database",u={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:s,session:f,account:t,...i}=a||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...s?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...f?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...t?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...i,...l?u:{}}};import{z as Tt}from"zod";import{Kysely as Ft,MssqlDialect as Ot}from"kysely";import{MysqlDialect as Dt,PostgresDialect as Ut,SqliteDialect as Nt}from"kysely";function b(e,a,l){return l==="update"?e:e==null&&a.defaultValue?typeof a.defaultValue=="function"?a.defaultValue():a.defaultValue:e}var M=e=>{let a=g(e);function l(u,s){return s==="id"?s:a[u].fields[s].fieldName||s}return{transformInput(u,s,f){let t=f==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:s}):u.id||x()},i=a[s].fields;for(let n in i){let d=u[n];d===void 0&&!i[n].defaultValue||(t[i[n].fieldName||n]=b(d,i[n],f))}return t},transformOutput(u,s,f=[]){if(!u)return null;let t=u.id||u._id?f.length===0||f.includes("id")?{id:u.id}:{}:{},i=a[s].fields;for(let n in i){if(f.length&&!f.includes(n))continue;let d=i[n];d&&(t[n]=u[d.fieldName||n])}return t},convertWhereClause(u,s,f){return s.filter(t=>u.every(i=>{let{field:n,value:d,operator:c}=i,o=l(f,n);if(c==="in"){if(!Array.isArray(d))throw new Error("Value must be an array");return d.includes(t[o])}else return c==="contains"?t[o].includes(d):c==="starts_with"?t[o].startsWith(d):c==="ends_with"?t[o].endsWith(d):t[o]===d}))},getField:l}},V=e=>a=>{let{transformInput:l,transformOutput:u,convertWhereClause:s,getField:f}=M(a);return{id:"memory",create:async({model:t,data:i})=>{let n=l(i,t,"create");return e[t].push(n),u(n,t)},findOne:async({model:t,where:i,select:n})=>{let d=e[t],o=s(i,d,t)[0]||null;return u(o,t,n)},findMany:async({model:t,where:i,sortBy:n,limit:d,offset:c})=>{let o=e[t];return i&&(o=s(i,o,t)),n&&(o=o.sort((m,v)=>{let A=f(t,n.field);return n.direction==="asc"?m[A]>v[A]?1:-1:m[A]<v[A]?1:-1})),c!==void 0&&(o=o.slice(c)),d!==void 0&&(o=o.slice(0,d)),o.map(m=>u(m,t))},update:async({model:t,where:i,update:n})=>{let d=e[t],c=s(i,d,t);return c.forEach(o=>{Object.assign(o,l(n,t,"update"))}),u(c[0],t)},delete:async({model:t,where:i})=>{let n=e[t],d=s(i,n,t);e[t]=n.filter(c=>!d.includes(c))},deleteMany:async({model:t,where:i})=>{let n=e[t],d=s(i,n,t),c=0;return e[t]=n.filter(o=>d.includes(o)?(c++,!1):!d.includes(o)),c},updateMany(t){let{model:i,where:n,update:d}=t,c=e[i],o=s(n,c,i);return o.forEach(m=>{Object.assign(m,d)}),o[0]||null}}};export{V as memoryAdapter};
