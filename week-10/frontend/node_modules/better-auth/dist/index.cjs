"use strict";var ze=Object.defineProperty;var rn=Object.getOwnPropertyDescriptor;var nn=Object.getOwnPropertyNames;var on=Object.prototype.hasOwnProperty;var sn=(e,t)=>{for(var n in t)ze(e,n,{get:t[n],enumerable:!0})},an=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of nn(t))!on.call(e,i)&&i!==n&&ze(e,i,{get:()=>t[i],enumerable:!(r=rn(t,i))||r.enumerable});return e};var dn=e=>an(ze({},"__esModule",{value:!0}),e);var di={};sn(di,{BetterAuthError:()=>B,HIDE_METADATA:()=>de,MissingDependencyError:()=>We,betterAuth:()=>ai,capitalizeFirstLetter:()=>Mn,createCookieGetter:()=>Le,createLogger:()=>Ue,deleteSessionCookie:()=>z,generateId:()=>H,generateState:()=>Ee,getCookies:()=>Je,levels:()=>Ne,logger:()=>N,parseCookies:()=>mn,parseSetCookieHeader:()=>fn,parseState:()=>tt,setCookieCache:()=>De,setSessionCookie:()=>C,shouldPublishLog:()=>Wt});module.exports=dn(di);var P=require("better-call");var Qe=require("better-call");var ie=require("better-call"),ht=(0,ie.createMiddleware)(async()=>({})),le=(0,ie.createMiddlewareCreator)({use:[ht,(0,ie.createMiddleware)(async()=>({}))]}),E=(0,ie.createEndpointCreator)({use:[ht]});function He(e){return e==="-"||e==="^"||e==="$"||e==="+"||e==="."||e==="("||e===")"||e==="|"||e==="["||e==="]"||e==="{"||e==="}"||e==="*"||e==="?"||e==="\\"?`\\${e}`:e}function cn(e){let t="";for(let n=0;n<e.length;n++)t+=He(e[n]);return t}function yt(e,t=!0){if(Array.isArray(e))return`(?:${e.map(c=>`^${yt(c,t)}$`).join("|")})`;let n="",r="",i=".";t===!0?(n="/",r="[/\\\\]",i="[^/\\\\]"):t&&(n=t,r=cn(n),r.length>1?(r=`(?:${r})`,i=`((?!${r}).)`):i=`[^${r}]`);let o=t?`${r}+?`:"",d=t?`${r}*?`:"",u=t?e.split(n):[e],s="";for(let a=0;a<u.length;a++){let c=u[a],p=u[a+1],m="";if(!(!c&&a>0)){if(t&&(a===u.length-1?m=d:p!=="**"?m=o:m=""),t&&c==="**"){m&&(s+=a===0?"":m,s+=`(?:${i}*?${m})*?`);continue}for(let l=0;l<c.length;l++){let f=c[l];f==="\\"?l<c.length-1&&(s+=He(c[l+1]),l++):f==="?"?s+=i:f==="*"?s+=`${i}*?`:s+=He(f)}s+=m}}return s}function un(e,t){if(typeof t!="string")throw new TypeError(`Sample must be a string, but ${typeof t} given`);return e.test(t)}function we(e,t){if(typeof e!="string"&&!Array.isArray(e))throw new TypeError(`The first argument must be a single pattern string or an array of patterns, but ${typeof e} given`);if((typeof t=="string"||typeof t=="boolean")&&(t={separator:t}),arguments.length===2&&!(typeof t>"u"||typeof t=="object"&&t!==null&&!Array.isArray(t)))throw new TypeError(`The second argument must be an options object or a string/boolean separator, but ${typeof t} given`);if(t=t||{},t.separator==="\\")throw new Error("\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead");let n=yt(e,t.separator),r=new RegExp(`^${n}$`,t.flags),i=un.bind(null,r);return i.options=t,i.pattern=e,i.regexp=r,i}var Se=Object.create(null),be=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?Se:globalThis),j=new Proxy(Se,{get(e,t){return be()[t]??Se[t]},has(e,t){let n=be();return t in n||t in Se},set(e,t,n){let r=be(!0);return r[t]=n,!0},deleteProperty(e,t){if(!t)return!1;let n=be(!0);return delete n[t],!0},ownKeys(){let e=be(!0);return Object.keys(e)}});function ln(e){return e?e!=="false":!1}var _e=typeof process<"u"&&process.env&&process.env.NODE_ENV||"",Ae=_e==="production",Ie=_e==="dev"||_e==="development",wt=_e==="test"||ln(j.TEST);var B=class extends Error{constructor(t,n){super(t),this.name="BetterAuthError",this.message=t,this.cause=n,this.stack=""}},We=class extends B{constructor(t){super(`The package "${t}" is required. Make sure it is installed.`,t)}};function pn(e){try{return new URL(e).pathname!=="/"}catch{throw new B(`Invalid base URL: ${e}. Please provide a valid base URL.`)}}function Ge(e,t="/api/auth"){return pn(e)?e:(t=t.startsWith("/")?t:`/${t}`,`${e.replace(/\/+$/,"")}${t}`)}function Re(e,t){if(e)return Ge(e,t);let n=j.BETTER_AUTH_URL||j.NEXT_PUBLIC_BETTER_AUTH_URL||j.PUBLIC_BETTER_AUTH_URL||j.NUXT_PUBLIC_BETTER_AUTH_URL||j.NUXT_PUBLIC_AUTH_URL||(j.BASE_URL!=="/"?j.BASE_URL:void 0);if(n)return Ge(n,t);if(typeof window<"u"&&window.location)return Ge(window.location.origin,t)}function Pe(e){try{return new URL(e).origin}catch{return null}}function bt(e){try{return new URL(e).protocol}catch{return null}}function Ke(e){return e.includes("://")?new URL(e).host:e}var At=le(async e=>{if(e.request?.method!=="POST")return;let{body:t,query:n,context:r}=e,i=e.headers?.get("origin")||e.headers?.get("referer")||"",o=t?.callbackURL||n?.callbackURL,d=t?.redirectTo,u=n?.currentURL,s=t?.errorCallbackURL,a=t?.newUserCallbackURL,c=r.trustedOrigins,p=e.headers?.has("cookie"),m=(f,g)=>{if(f.startsWith("/"))return!1;if(g.includes("*"))return we(g)(Ke(f));let w=bt(f);return w==="http:"||w==="https:"||!w?g===Pe(f):f.startsWith(g)},l=(f,g)=>{if(!f)return;if(!c.some(A=>m(f,A)||f?.startsWith("/")&&g!=="origin"&&!f.includes(":")))throw e.context.logger.error(`Invalid ${g}: ${f}`),e.context.logger.info(`If it's a valid URL, please add ${f} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${c}`),new Qe.APIError("FORBIDDEN",{message:`Invalid ${g}`})};p&&!e.context.options.advanced?.disableCSRFCheck&&l(i,"origin"),o&&l(o,"callbackURL"),d&&l(d,"redirectURL"),u&&l(u,"currentURL"),s&&l(s,"errorCallbackURL"),a&&l(a,"newUserCallbackURL")}),pe=e=>le(async t=>{let{context:n}=t,r=e(t),i=n.trustedOrigins,o=(u,s)=>u.startsWith("/")?!1:s.includes("*")?we(s)(Ke(u)):u.startsWith(s);r&&((u,s)=>{if(!u)return;if(!i.some(c=>o(u,c)||u?.startsWith("/")&&s!=="origin"&&!u.includes(":")))throw t.context.logger.error(`Invalid ${s}: ${u}`),t.context.logger.info(`If it's a valid URL, please add ${u} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${i}`),new Qe.APIError("FORBIDDEN",{message:`Invalid ${s}`})})(r,"callbackURL")});var L=require("better-call"),I=require("zod");var M=(e,t="ms")=>new Date(Date.now()+(t==="sec"?e*1e3:e));var Rt=require("@better-auth/utils/base64");var oe=(e,t)=>{let n=()=>{switch(t){case"ms":return e;case"s":return e*1e3;case"m":return e*1e3*60;case"h":return e*1e3*60*60;case"d":return e*1e3*60*60*24;case"w":return e*1e3*60*60*24*7;case"y":return e*1e3*60*60*24*365}},r={t:`${e}${t}`,value:e,tFormat:t,toMilliseconds:n,toSeconds:()=>r.toMilliseconds()/1e3,toMinutes:()=>r.toSeconds()/60,toHours:()=>r.toMinutes()/60,toDays:()=>r.toHours()/24,toWeeks:()=>r.toDays()/7,toYears:()=>r.toDays()/365,getDate:()=>new Date(Date.now()+r.toMilliseconds()),add:i=>{let o=typeof i=="string"?ke(i).toMilliseconds():i.toMilliseconds();return oe(r.toMilliseconds()+o,"ms")},subtract:i=>{let o=typeof i=="string"?ke(i).toMilliseconds():i.toMilliseconds();return oe(r.toMilliseconds()-o,"ms")},multiply:i=>oe(r.toMilliseconds()*i,"ms"),divide:i=>oe(r.toMilliseconds()/i,"ms"),equals:i=>{let o=typeof i=="string"?ke(i).toMilliseconds():i.toMilliseconds();return r.toMilliseconds()===o},lessThan:i=>{let o=typeof i=="string"?ke(i).toMilliseconds():i.toMilliseconds();return r.toMilliseconds()<o},greaterThan:i=>{let o=typeof i=="string"?ke(i).toMilliseconds():i.toMilliseconds();return r.toMilliseconds()>o},format:i=>{let o=r.getDate();return i.replace(/YYYY|MM|DD|HH|mm|ss/g,d=>{switch(d){case"YYYY":return o.getFullYear().toString();case"MM":return(o.getMonth()+1).toString().padStart(2,"0");case"DD":return o.getDate().toString().padStart(2,"0");case"HH":return o.getHours().toString().padStart(2,"0");case"mm":return o.getMinutes().toString().padStart(2,"0");case"ss":return o.getSeconds().toString().padStart(2,"0");default:return d}})},fromNow:()=>{let i=r.toMilliseconds();return i<0?r.ago():i<1e3?"in a few seconds":i<6e4?`in ${Math.round(i/1e3)} seconds`:i<36e5?`in ${Math.round(i/6e4)} minutes`:i<864e5?`in ${Math.round(i/36e5)} hours`:i<6048e5?`in ${Math.round(i/864e5)} days`:i<26298e5?`in ${Math.round(i/6048e5)} weeks`:i<315576e5?`in ${Math.round(i/26298e5)} months`:`in ${Math.round(i/315576e5)} years`},ago:()=>{let i=-r.toMilliseconds();return i<0?r.fromNow():i<1e3?"a few seconds ago":i<6e4?`${Math.round(i/1e3)} seconds ago`:i<36e5?`${Math.round(i/6e4)} minutes ago`:i<864e5?`${Math.round(i/36e5)} hours ago`:i<6048e5?`${Math.round(i/864e5)} days ago`:i<26298e5?`${Math.round(i/6048e5)} weeks ago`:i<315576e5?`${Math.round(i/26298e5)} months ago`:`${Math.round(i/315576e5)} years ago`}};return r},ke=e=>{let t=e.match(/^(\d+)(ms|s|m|h|d|w|y)$/);if(!t)throw new Error("Invalid time format");return oe(parseInt(t[1]),t[2])};var kt=require("@better-auth/utils/hmac");function fn(e){let t=new Map;return e.split(", ").forEach(r=>{let i=r.split(";").map(p=>p.trim()),[o,...d]=i,[u,...s]=o.split("="),a=s.join("=");if(!u||a===void 0)return;let c={value:a};d.forEach(p=>{let[m,...l]=p.split("="),f=l.join("="),g=m.trim().toLowerCase();switch(g){case"max-age":c["max-age"]=f?parseInt(f.trim(),10):void 0;break;case"expires":c.expires=f?new Date(f.trim()):void 0;break;case"domain":c.domain=f?f.trim():void 0;break;case"path":c.path=f?f.trim():void 0;break;case"secure":c.secure=!0;break;case"httponly":c.httponly=!0;break;case"samesite":c.samesite=f?f.trim().toLowerCase():void 0;break;default:c[g]=f?f.trim():!0;break}}),t.set(u,c)}),t}function Le(e){let n=(e.advanced?.useSecureCookies!==void 0?e.advanced?.useSecureCookies:e.baseURL!==void 0?!!e.baseURL.startsWith("https://"):Ae)?"__Secure-":"",r=!!e.advanced?.crossSubDomainCookies?.enabled,i=r?e.advanced?.crossSubDomainCookies?.domain||(e.baseURL?new URL(e.baseURL).hostname:void 0):void 0;if(r&&!i)throw new B("baseURL is required when crossSubdomainCookies are enabled");function o(d,u={}){let s=e.advanced?.cookiePrefix||"better-auth",a=e.advanced?.cookies?.[d]?.name||`${s}.${d}`,c=e.advanced?.cookies?.[d]?.attributes;return{name:`${n}${a}`,attributes:{secure:!!n,sameSite:"lax",path:"/",httpOnly:!0,...r?{domain:i}:{},...e.advanced?.defaultCookieAttributes,...u,...c}}}return o}function Je(e){let t=Le(e),n=e.session?.expiresIn||oe(7,"d").toSeconds(),r=t("session_token",{maxAge:n}),i=t("session_data",{maxAge:e.session?.cookieCache?.maxAge||60*5}),o=t("dont_remember");return{sessionToken:{name:r.name,options:r.attributes},sessionData:{name:i.name,options:i.attributes},dontRememberToken:{name:o.name,options:o.attributes}}}async function De(e,t){if(e.context.options.session?.cookieCache?.enabled){let r=Rt.base64Url.encode(JSON.stringify({session:t,expiresAt:M(e.context.authCookies.sessionData.options.maxAge||60,"sec").getTime(),signature:await(0,kt.createHMAC)("SHA-256","base64urlnopad").sign(e.context.secret,JSON.stringify(t))}),{padding:!1});if(r.length>4093)throw new B("Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data");e.setCookie(e.context.authCookies.sessionData.name,r,e.context.authCookies.sessionData.options)}}async function C(e,t,n,r){let i=e.context.authCookies.sessionToken.options,o=n?void 0:e.context.sessionConfig.expiresIn;await e.setSignedCookie(e.context.authCookies.sessionToken.name,t.session.token,e.context.secret,{...i,maxAge:o,...r}),n&&await e.setSignedCookie(e.context.authCookies.dontRememberToken.name,"true",e.context.secret,e.context.authCookies.dontRememberToken.options),await De(e,t),e.context.setNewSession(t),e.context.options.secondaryStorage&&await e.context.secondaryStorage?.set(t.session.token,JSON.stringify({user:t.user,session:t.session}),Math.floor((new Date(t.session.expiresAt).getTime()-Date.now())/1e3))}function z(e){e.setCookie(e.context.authCookies.sessionToken.name,"",{...e.context.authCookies.sessionToken.options,maxAge:0}),e.setCookie(e.context.authCookies.sessionData.name,"",{...e.context.authCookies.sessionData.options,maxAge:0}),e.setCookie(e.context.authCookies.dontRememberToken.name,"",{...e.context.authCookies.dontRememberToken.options,maxAge:0})}function mn(e){let t=e.split("; "),n=new Map;return t.forEach(r=>{let[i,o]=r.split("=");n.set(i,o)}),n}var gn=Object.defineProperty,hn=Object.defineProperties,yn=Object.getOwnPropertyDescriptors,Tt=Object.getOwnPropertySymbols,wn=Object.prototype.hasOwnProperty,bn=Object.prototype.propertyIsEnumerable,Et=(e,t,n)=>t in e?gn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,se=(e,t)=>{for(var n in t||(t={}))wn.call(t,n)&&Et(e,n,t[n]);if(Tt)for(var n of Tt(t))bn.call(t,n)&&Et(e,n,t[n]);return e},ae=(e,t)=>hn(e,yn(t)),An=class extends Error{constructor(e,t,n){super(t||e.toString(),{cause:n}),this.status=e,this.statusText=t,this.error=n}},Rn=async(e,t)=>{var n,r,i,o,d,u;let s=t||{},a={onRequest:[t?.onRequest],onResponse:[t?.onResponse],onSuccess:[t?.onSuccess],onError:[t?.onError],onRetry:[t?.onRetry]};if(!t||!t?.plugins)return{url:e,options:s,hooks:a};for(let c of t?.plugins||[]){if(c.init){let p=await((n=c.init)==null?void 0:n.call(c,e.toString(),t));s=p.options||s,e=p.url}a.onRequest.push((r=c.hooks)==null?void 0:r.onRequest),a.onResponse.push((i=c.hooks)==null?void 0:i.onResponse),a.onSuccess.push((o=c.hooks)==null?void 0:o.onSuccess),a.onError.push((d=c.hooks)==null?void 0:d.onError),a.onRetry.push((u=c.hooks)==null?void 0:u.onRetry)}return{url:e,options:s,hooks:a}},Ut=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(){return this.options.delay}},kn=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(e){return Math.min(this.options.maxDelay,this.options.baseDelay*2**e)}};function Tn(e){if(typeof e=="number")return new Ut({type:"linear",attempts:e,delay:1e3});switch(e.type){case"linear":return new Ut(e);case"exponential":return new kn(e);default:throw new Error("Invalid retry strategy")}}var En=e=>{let t={},n=r=>typeof r=="function"?r():r;if(e?.auth){if(e.auth.type==="Bearer"){let r=n(e.auth.token);if(!r)return t;t.authorization=`Bearer ${r}`}else if(e.auth.type==="Basic"){let r=n(e.auth.username),i=n(e.auth.password);if(!r||!i)return t;t.authorization=`Basic ${btoa(`${r}:${i}`)}`}else if(e.auth.type==="Custom"){let r=n(e.auth.value);if(!r)return t;t.authorization=`${n(e.auth.prefix)} ${r}`}}return t},xt=["get","post","put","patch","delete"];var Un=/^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;function vn(e){let t=e.headers.get("content-type"),n=new Set(["image/svg","application/xml","application/xhtml","application/html"]);if(!t)return"json";let r=t.split(";").shift()||"";return Un.test(r)?"json":n.has(r)||r.startsWith("text/")?"text":"blob"}function On(e){try{return JSON.parse(e),!0}catch{return!1}}function St(e){if(e===void 0)return!1;let t=typeof e;return t==="string"||t==="number"||t==="boolean"||t===null?!0:t!=="object"?!1:Array.isArray(e)?!0:e.buffer?!1:e.constructor&&e.constructor.name==="Object"||typeof e.toJSON=="function"}function vt(e){try{return JSON.parse(e)}catch{return e}}function Ot(e){return typeof e=="function"}function xn(e){if(e?.customFetchImpl)return e.customFetchImpl;if(typeof globalThis<"u"&&Ot(globalThis.fetch))return globalThis.fetch;if(typeof window<"u"&&Ot(window.fetch))return window.fetch;throw new Error("No fetch implementation found")}function Sn(e){let t=new Headers(e?.headers),n=En(e);for(let[r,i]of Object.entries(n||{}))t.set(r,i);if(!t.has("content-type")){let r=_n(e?.body);r&&t.set("content-type",r)}return t}function _n(e){return St(e)?"application/json":null}function In(e){if(!e?.body)return null;let t=new Headers(e?.headers);return St(e.body)&&!t.has("content-type")?JSON.stringify(e.body):e.body}function Pn(e,t){var n;if(t?.method)return t.method.toUpperCase();if(e.startsWith("@")){let r=(n=e.split("@")[1])==null?void 0:n.split("/")[0];return xt.includes(r)?r.toUpperCase():t?.body?"POST":"GET"}return t?.body?"POST":"GET"}function Ln(e,t){let n;return!e?.signal&&e?.timeout&&(n=setTimeout(()=>t?.abort(),e?.timeout)),{abortTimeout:n,clearTimeout:()=>{n&&clearTimeout(n)}}}function Dn(e,t){let{baseURL:n,params:r,query:i}=t||{query:{},params:{},baseURL:""},o=e.startsWith("http")?e.split("/").slice(0,3).join("/"):n;if(!o)throw new TypeError(`Invalid URL ${e}. Are you passing in a relative URL but not setting the baseURL?`);if(e.startsWith("@")){let p=e.toString().split("@")[1].split("/")[0];xt.includes(p)&&(e=e.replace(`@${p}/`,"/"))}o.endsWith("/")||(o+="/");let[d,u]=e.replace(o,"").split("?"),s=new URLSearchParams(u);for(let[p,m]of Object.entries(i||{}))s.set(p,String(m));if(r)if(Array.isArray(r)){let p=d.split("/").filter(m=>m.startsWith(":"));for(let[m,l]of p.entries()){let f=r[m];d=d.replace(l,f)}}else for(let[p,m]of Object.entries(r))d=d.replace(`:${p}`,String(m));d=d.split("/").map(encodeURIComponent).join("/"),d.startsWith("/")&&(d=d.slice(1));let a=s.size>0?`?${s}`.replace(/\+/g,"%20"):"";return new URL(`${d}${a}`,o)}var U=async(e,t)=>{var n,r,i,o,d,u,s,a;let{hooks:c,url:p,options:m}=await Rn(e,t),l=xn(m),f=new AbortController,g=(n=m.signal)!=null?n:f.signal,w=Dn(p,m),A=In(m),R=Sn(m),h=Pn(p,m),y=ae(se({},m),{url:w,headers:R,body:A,method:h,signal:g});for(let V of c.onRequest)if(V){let D=await V(y);D instanceof Object&&(y=D)}("pipeTo"in y&&typeof y.pipeTo=="function"||typeof((r=t?.body)==null?void 0:r.pipe)=="function")&&("duplex"in y||(y.duplex="half"));let{clearTimeout:_}=Ln(m,f),k=await l(y.url,y);_();let xe={response:k,request:y};for(let V of c.onResponse)if(V){let D=await V(ae(se({},xe),{response:(i=t?.hookOptions)!=null&&i.cloneResponse?k.clone():k}));D instanceof Response?k=D:D instanceof Object&&(k=D.response)}if(k.ok){if(!(y.method!=="HEAD"))return{data:"",error:null};let D=vn(k),Z={data:"",response:k,request:y};if(D==="json"||D==="text"){let Y=await k.text(),tn=await((o=y.jsonParser)!=null?o:vt)(Y);Z.data=tn}else Z.data=await k[D]();y?.output&&y.output&&!y.disableValidation&&(Z.data=y.output.parse(Z.data));for(let Y of c.onSuccess)Y&&await Y(ae(se({},Z),{response:(d=t?.hookOptions)!=null&&d.cloneResponse?k.clone():k}));return t?.throw?Z.data:{data:Z.data,error:null}}let Xr=(u=t?.jsonParser)!=null?u:vt,gt=await k.text(),Me=On(gt)?await Xr(gt):{},en={response:k,request:y,error:ae(se({},Me),{status:k.status,statusText:k.statusText})};for(let V of c.onError)V&&await V(ae(se({},en),{response:(s=t?.hookOptions)!=null&&s.cloneResponse?k.clone():k}));if(t?.retry){let V=Tn(t.retry),D=(a=t.retryAttempt)!=null?a:0;if(await V.shouldAttemptRetry(D,k)){for(let Y of c.onRetry)Y&&await Y(xe);let Z=V.getDelay(D);return await new Promise(Y=>setTimeout(Y,Z)),await U(e,ae(se({},t),{retryAttempt:D+1}))}}if(t?.throw)throw new An(k.status,k.statusText,Me);return{data:null,error:ae(se({},Me),{status:k.status,statusText:k.statusText})}};var Vt=require("better-call"),te=require("jose");var _t=require("@better-auth/utils/hash"),It=require("@better-auth/utils/base64");async function Pt(e){let t=await(0,_t.createHash)("SHA-256").digest(e);return It.base64Url.encode(new Uint8Array(t),{padding:!1})}function Ce(e){return{tokenType:e.token_type,accessToken:e.access_token,refreshToken:e.refresh_token,accessTokenExpiresAt:e.expires_in?M(e.expires_in,"sec"):void 0,scopes:e?.scope?typeof e.scope=="string"?e.scope.split(" "):e.scope:[],idToken:e.id_token}}async function O({id:e,options:t,authorizationEndpoint:n,state:r,codeVerifier:i,scopes:o,claims:d,redirectURI:u,duration:s}){let a=new URL(n);if(a.searchParams.set("response_type","code"),a.searchParams.set("client_id",t.clientId),a.searchParams.set("state",r),a.searchParams.set("scope",o.join(" ")),a.searchParams.set("redirect_uri",t.redirectURI||u),i){let c=await Pt(i);a.searchParams.set("code_challenge_method","S256"),a.searchParams.set("code_challenge",c)}if(d){let c=d.reduce((p,m)=>(p[m]=null,p),{});a.searchParams.set("claims",JSON.stringify({id_token:{email:null,email_verified:null,...c}}))}return s&&a.searchParams.set("duration",s),a}var Cn=require("jose");async function v({code:e,codeVerifier:t,redirectURI:n,options:r,tokenEndpoint:i,authentication:o}){let d=new URLSearchParams,u={"content-type":"application/x-www-form-urlencoded",accept:"application/json","user-agent":"better-auth"};if(d.set("grant_type","authorization_code"),d.set("code",e),t&&d.set("code_verifier",t),d.set("redirect_uri",n),o==="basic"){let p=btoa(`${r.clientId}:${r.clientSecret}`);u.authorization=`Basic ${p}`}else d.set("client_id",r.clientId),d.set("client_secret",r.clientSecret);let{data:s,error:a}=await U(i,{method:"POST",body:d,headers:u});if(a)throw a;return Ce(s)}var W=require("zod"),et=require("better-call");var Bn=require("@better-auth/utils/hash"),jn=require("@noble/ciphers/chacha"),Xe=require("@noble/ciphers/utils"),Fn=require("@noble/ciphers/webcrypto");function Ze(e,t){let n=new Uint8Array(e),r=new Uint8Array(t);if(n.length!==r.length)return!1;let i=0;for(let o=0;o<n.length;o++)i|=n[o]^r[o];return i===0}var Nn=require("@better-auth/utils/hash");var Lt=require("jose");async function Dt(e,t,n=3600){return await new Lt.SignJWT(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+n).sign(new TextEncoder().encode(t))}var Ct=require("@noble/hashes/scrypt"),Nt=require("uncrypto"),Ye=require("@better-auth/utils/hex"),fe={N:16384,r:16,p:1,dkLen:64};async function Bt(e,t){return await(0,Ct.scryptAsync)(e.normalize("NFKC"),t,{N:fe.N,p:fe.p,r:fe.r,dkLen:fe.dkLen,maxmem:128*fe.N*fe.r*2})}var jt=async e=>{let t=Ye.hex.encode((0,Nt.getRandomValues)(new Uint8Array(16))),n=await Bt(e,t);return`${t}:${Ye.hex.encode(n)}`},Ft=async({hash:e,password:t})=>{let[n,r]=e.split(":"),i=await Bt(t,n);return Ze(i,new Uint8Array(Buffer.from(r,"hex")))};var qt=require("@better-auth/utils/random"),Te=(0,qt.createRandomStringGenerator)("a-z","0-9","A-Z","-_");async function Ee(e,t){let n=e.body?.callbackURL||(e.query?.currentURL?Pe(e.query?.currentURL):"")||e.context.options.baseURL;if(!n)throw new et.APIError("BAD_REQUEST",{message:"callbackURL is required"});let r=Te(128),i=Te(32),o=JSON.stringify({callbackURL:n,codeVerifier:r,errorURL:e.body?.errorCallbackURL||e.query?.currentURL,newUserURL:e.body?.newUserCallbackURL,link:t,expiresAt:Date.now()+10*60*1e3}),d=new Date;d.setMinutes(d.getMinutes()+10);let u=await e.context.internalAdapter.createVerificationValue({value:o,identifier:i,expiresAt:d});if(!u)throw e.context.logger.error("Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database"),new et.APIError("INTERNAL_SERVER_ERROR",{message:"Unable to create verification"});return{state:u.identifier,codeVerifier:r}}async function tt(e){let t=e.query.state||e.body.state,n=await e.context.internalAdapter.findVerificationValue(t);if(!n)throw e.context.logger.error("State Mismatch. Verification not found",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);let r=W.z.object({callbackURL:W.z.string(),codeVerifier:W.z.string(),errorURL:W.z.string().optional(),newUserURL:W.z.string().optional(),expiresAt:W.z.number(),link:W.z.object({email:W.z.string(),userId:W.z.string()}).optional()}).parse(JSON.parse(n.value));if(r.errorURL||(r.errorURL=`${e.context.baseURL}/error`),r.expiresAt<Date.now())throw await e.context.internalAdapter.deleteVerificationValue(n.id),e.context.logger.error("State expired.",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);return await e.context.internalAdapter.deleteVerificationValue(n.id),r}var $t=e=>{let t="https://appleid.apple.com/auth/token";return{id:"apple",name:"Apple",createAuthorizationURL({state:n,scopes:r,redirectURI:i}){let o=r||["email","name"];return e.scope&&o.push(...e.scope),new URL(`https://appleid.apple.com/auth/authorize?client_id=${e.clientId}&response_type=code&redirect_uri=${e.redirectURI||i}&scope=${o.join(" ")}&state=${n}&response_mode=form_post`)},validateAuthorizationCode:async({code:n,codeVerifier:r,redirectURI:i})=>v({code:n,codeVerifier:r,redirectURI:e.redirectURI||i,options:e,tokenEndpoint:t}),async verifyIdToken(n,r){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(n,r);let i=(0,te.decodeProtectedHeader)(n),{kid:o,alg:d}=i;if(!o||!d)return!1;let u=await qn(o),{payload:s}=await(0,te.jwtVerify)(n,u,{algorithms:[d],issuer:"https://appleid.apple.com",audience:e.appBundleIdentifier||e.clientId,maxTokenAge:"1h"});return["email_verified","is_private_email"].forEach(a=>{s[a]!==void 0&&(s[a]=!!s[a])}),r&&s.nonce!==r?!1:!!s},async getUserInfo(n){if(e.getUserInfo)return e.getUserInfo(n);if(!n.idToken)return null;let r=(0,te.decodeJwt)(n.idToken);if(!r)return null;let i=r.user?`${r.user.name.firstName} ${r.user.name.lastName}`:r.email,o=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:i,emailVerified:!1,email:r.email,...o},data:r}}}},qn=async e=>{let t="https://appleid.apple.com",n="/auth/keys",{data:r}=await U(`${t}${n}`);if(!r?.keys)throw new Vt.APIError("BAD_REQUEST",{message:"Keys not found"});let i=r.keys.find(o=>o.kid===e);if(!i)throw new Error(`JWK with kid ${e} not found`);return await(0,te.importJWK)(i,i.alg)};var Mt=e=>({id:"discord",name:"Discord",createAuthorizationURL({state:t,scopes:n,redirectURI:r}){let i=n||["identify","email"];return e.scope&&i.push(...e.scope),new URL(`https://discord.com/api/oauth2/authorize?scope=${i.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||r)}&state=${t}&prompt=${e.prompt||"none"}`)},validateAuthorizationCode:async({code:t,redirectURI:n})=>v({code:t,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://discord.com/api/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:n,error:r}=await U("https://discord.com/api/users/@me",{headers:{authorization:`Bearer ${t.accessToken}`}});if(r)return null;if(n.avatar===null){let o=n.discriminator==="0"?Number(BigInt(n.id)>>BigInt(22))%6:parseInt(n.discriminator)%5;n.image_url=`https://cdn.discordapp.com/embed/avatars/${o}.png`}else{let o=n.avatar.startsWith("a_")?"gif":"png";n.image_url=`https://cdn.discordapp.com/avatars/${n.id}/${n.avatar}.${o}`}let i=await e.mapProfileToUser?.(n);return{user:{id:n.id,name:n.display_name||n.username||"",email:n.email,emailVerified:n.verified,image:n.image_url,...i},data:n}}});var zt=e=>({id:"facebook",name:"Facebook",async createAuthorizationURL({state:t,scopes:n,redirectURI:r}){let i=n||["email","public_profile"];return e.scope&&i.push(...e.scope),await O({id:"facebook",options:e,authorizationEndpoint:"https://www.facebook.com/v21.0/dialog/oauth",scopes:i,state:t,redirectURI:r})},validateAuthorizationCode:async({code:t,redirectURI:n})=>v({code:t,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://graph.facebook.com/oauth/access_token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let n=["id","name","email","picture",...e?.fields||[]],{data:r,error:i}=await U("https://graph.facebook.com/me?fields="+n.join(","),{auth:{type:"Bearer",token:t.accessToken}});if(i)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.email,image:r.picture.data.url,emailVerified:r.email_verified,...o},data:r}}});var Ht=e=>{let t="https://github.com/login/oauth/access_token";return{id:"github",name:"GitHub",createAuthorizationURL({state:n,scopes:r,codeVerifier:i,redirectURI:o}){let d=r||["user:email"];return e.scope&&d.push(...e.scope),O({id:"github",options:e,authorizationEndpoint:"https://github.com/login/oauth/authorize",scopes:d,state:n,redirectURI:o})},validateAuthorizationCode:async({code:n,redirectURI:r})=>v({code:n,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:t}),async getUserInfo(n){if(e.getUserInfo)return e.getUserInfo(n);let{data:r,error:i}=await U("https://api.github.com/user",{headers:{"User-Agent":"better-auth",authorization:`Bearer ${n.accessToken}`}});if(i)return null;let o=!1,{data:d}=await U("https://api.github.com/user/emails",{headers:{authorization:`Bearer ${n.accessToken}`,"User-Agent":"better-auth"}});d&&(r.email=(d.find(s=>s.primary)??d[0])?.email,o=d.find(s=>s.email===r.email)?.verified??!1);let u=await e.mapProfileToUser?.(r);return{user:{id:r.id.toString(),name:r.name||r.login,email:r.email,image:r.avatar_url,emailVerified:o,...u},data:r}}}};var Gt=require("jose");var Ne=["info","success","warn","error","debug"];function Wt(e,t){return Ne.indexOf(t)<=Ne.indexOf(e)}var G={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},Vn={info:G.fg.blue,success:G.fg.green,warn:G.fg.yellow,error:G.fg.red,debug:G.fg.magenta},$n=(e,t)=>{let n=new Date().toISOString();return`${G.dim}${n}${G.reset} ${Vn[e]}${e.toUpperCase()}${G.reset} ${G.bright}[Better Auth]:${G.reset} ${t}`},Ue=e=>{let t=e?.disabled!==!0,n=e?.level??"error",r=(i,o,d=[])=>{if(!t||!Wt(n,i))return;let u=$n(i,o);if(!e||typeof e.log!="function"){i==="error"?console.error(u,...d):i==="warn"?console.warn(u,...d):console.log(u,...d);return}e.log(i==="success"?"info":i,o,...d)};return Object.fromEntries(Ne.map(i=>[i,(...[o,...d])=>r(i,o,d)]))},N=Ue();var Kt=e=>({id:"google",name:"Google",async createAuthorizationURL({state:t,scopes:n,codeVerifier:r,redirectURI:i}){if(!e.clientId||!e.clientSecret)throw N.error("Client Id and Client Secret is required for Google. Make sure to provide them in the options."),new B("CLIENT_ID_AND_SECRET_REQUIRED");if(!r)throw new B("codeVerifier is required for Google");let o=n||["email","profile","openid"];e.scope&&o.push(...e.scope);let d=await O({id:"google",options:e,authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",scopes:o,state:t,codeVerifier:r,redirectURI:i});return e.accessType&&d.searchParams.set("access_type",e.accessType),e.prompt&&d.searchParams.set("prompt",e.prompt),e.display&&d.searchParams.set("display",e.display),e.hd&&d.searchParams.set("hd",e.hd),d},validateAuthorizationCode:async({code:t,codeVerifier:n,redirectURI:r})=>v({code:t,codeVerifier:n,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://oauth2.googleapis.com/token"}),async verifyIdToken(t,n){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(t,n);let r=`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${t}`,{data:i}=await U(r);return i?i.aud===e.clientId&&i.iss==="https://accounts.google.com":!1},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);if(!t.idToken)return null;let n=(0,Gt.decodeJwt)(t.idToken),r=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:n.name,email:n.email,image:n.picture,emailVerified:n.email_verified,...r},data:n}}});var Qt=require("jose"),Jt=e=>{let t=e.tenantId||"common",n=`https://login.microsoftonline.com/${t}/oauth2/v2.0/authorize`,r=`https://login.microsoftonline.com/${t}/oauth2/v2.0/token`;return{id:"microsoft",name:"Microsoft EntraID",createAuthorizationURL(i){let o=i.scopes||["openid","profile","email","User.Read"];return e.scope&&o.push(...e.scope),O({id:"microsoft",options:e,authorizationEndpoint:n,state:i.state,codeVerifier:i.codeVerifier,scopes:o,redirectURI:i.redirectURI})},validateAuthorizationCode({code:i,codeVerifier:o,redirectURI:d}){return v({code:i,codeVerifier:o,redirectURI:e.redirectURI||d,options:e,tokenEndpoint:r})},async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);if(!i.idToken)return null;let o=(0,Qt.decodeJwt)(i.idToken),d=e.profilePhotoSize||48;await U(`https://graph.microsoft.com/v1.0/me/photos/${d}x${d}/$value`,{headers:{Authorization:`Bearer ${i.accessToken}`},async onResponse(s){if(!(e.disableProfilePhoto||!s.response.ok))try{let c=await s.response.clone().arrayBuffer(),p=Buffer.from(c).toString("base64");o.picture=`data:image/jpeg;base64, ${p}`}catch(a){N.error(a&&typeof a=="object"&&"name"in a?a.name:"",a)}}});let u=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:o.name,email:o.email,image:o.picture,emailVerified:!0,...u},data:o}}}};var Zt=e=>({id:"spotify",name:"Spotify",createAuthorizationURL({state:t,scopes:n,codeVerifier:r,redirectURI:i}){let o=n||["user-read-email"];return e.scope&&o.push(...e.scope),O({id:"spotify",options:e,authorizationEndpoint:"https://accounts.spotify.com/authorize",scopes:o,state:t,codeVerifier:r,redirectURI:i})},validateAuthorizationCode:async({code:t,codeVerifier:n,redirectURI:r})=>v({code:t,codeVerifier:n,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://accounts.spotify.com/api/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:n,error:r}=await U("https://api.spotify.com/v1/me",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(r)return null;let i=await e.mapProfileToUser?.(n);return{user:{id:n.id,name:n.display_name,email:n.email,image:n.images[0]?.url,emailVerified:!1,...i},data:n}}});function Mn(e){return e.charAt(0).toUpperCase()+e.slice(1)}var de={isAction:!1};var Yt=require("@better-auth/utils/random"),H=e=>(0,Yt.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32);var Xt=require("jose"),er=e=>({id:"twitch",name:"Twitch",createAuthorizationURL({state:t,scopes:n,redirectURI:r}){let i=n||["user:read:email","openid"];return e.scope&&i.push(...e.scope),O({id:"twitch",redirectURI:r,options:e,authorizationEndpoint:"https://id.twitch.tv/oauth2/authorize",scopes:i,state:t,claims:e.claims||["email","email_verified","preferred_username","picture"]})},validateAuthorizationCode:async({code:t,redirectURI:n})=>v({code:t,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://id.twitch.tv/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let n=t.idToken;if(!n)return N.error("No idToken found in token"),null;let r=(0,Xt.decodeJwt)(n),i=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.preferred_username,email:r.email,image:r.picture,emailVerified:!1,...i},data:r}}});var tr=e=>({id:"twitter",name:"Twitter",createAuthorizationURL(t){let n=t.scopes||["users.read","tweet.read","offline.access"];return e.scope&&n.push(...e.scope),O({id:"twitter",options:e,authorizationEndpoint:"https://x.com/i/oauth2/authorize",scopes:n,state:t.state,codeVerifier:t.codeVerifier,redirectURI:t.redirectURI})},validateAuthorizationCode:async({code:t,codeVerifier:n,redirectURI:r})=>v({code:t,codeVerifier:n,authentication:"basic",redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://api.x.com/2/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:n,error:r}=await U("https://api.x.com/2/users/me?user.fields=profile_image_url",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(r)return null;let i=await e.mapProfileToUser?.(n);return{user:{id:n.data.id,name:n.data.name,email:n.data.username||null,image:n.data.profile_image_url,emailVerified:n.data.verified||!1,...i},data:n}}});var rr=e=>{let t="https://api.dropboxapi.com/oauth2/token";return{id:"dropbox",name:"Dropbox",createAuthorizationURL:async({state:n,scopes:r,codeVerifier:i,redirectURI:o})=>{let d=r||["account_info.read"];return e.scope&&d.push(...e.scope),await O({id:"dropbox",options:e,authorizationEndpoint:"https://www.dropbox.com/oauth2/authorize",scopes:d,state:n,redirectURI:o,codeVerifier:i})},validateAuthorizationCode:async({code:n,codeVerifier:r,redirectURI:i})=>await v({code:n,codeVerifier:r,redirectURI:e.redirectURI||i,options:e,tokenEndpoint:t}),async getUserInfo(n){if(e.getUserInfo)return e.getUserInfo(n);let{data:r,error:i}=await U("https://api.dropboxapi.com/2/users/get_current_account",{method:"POST",headers:{Authorization:`Bearer ${n.accessToken}`}});if(i)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.account_id,name:r.name?.display_name,email:r.email,emailVerified:r.email_verified||!1,image:r.profile_photo_url,...o},data:r}}}};var nr=e=>{let t="https://www.linkedin.com/oauth/v2/authorization",n="https://www.linkedin.com/oauth/v2/accessToken";return{id:"linkedin",name:"Linkedin",createAuthorizationURL:async({state:r,scopes:i,redirectURI:o})=>{let d=i||["profile","email","openid"];return e.scope&&d.push(...e.scope),await O({id:"linkedin",options:e,authorizationEndpoint:t,scopes:d,state:r,redirectURI:o})},validateAuthorizationCode:async({code:r,redirectURI:i})=>await v({code:r,redirectURI:e.redirectURI||i,options:e,tokenEndpoint:n}),async getUserInfo(r){let{data:i,error:o}=await U("https://api.linkedin.com/v2/userinfo",{method:"GET",headers:{Authorization:`Bearer ${r.accessToken}`}});if(o)return null;let d=await e.mapProfileToUser?.(i);return{user:{id:i.sub,name:i.name,email:i.email,emailVerified:i.email_verified||!1,image:i.picture,...d},data:i}}}};var rt=(e="")=>e.split("://").map(t=>t.replace(/\/{2,}/g,"/")).join("://"),zn=e=>{let t=e||"https://gitlab.com";return{authorizationEndpoint:rt(`${t}/oauth/authorize`),tokenEndpoint:rt(`${t}/oauth/token`),userinfoEndpoint:rt(`${t}/api/v4/user`)}},ir=e=>{let{authorizationEndpoint:t,tokenEndpoint:n,userinfoEndpoint:r}=zn(e.issuer),i="gitlab";return{id:i,name:"Gitlab",createAuthorizationURL:async({state:d,scopes:u,codeVerifier:s,redirectURI:a})=>{let c=u||["read_user"];return e.scope&&c.push(...e.scope),await O({id:i,options:e,authorizationEndpoint:t,scopes:c,state:d,redirectURI:a,codeVerifier:s})},validateAuthorizationCode:async({code:d,redirectURI:u,codeVerifier:s})=>v({code:d,redirectURI:e.redirectURI||u,options:e,codeVerifier:s,tokenEndpoint:n}),async getUserInfo(d){if(e.getUserInfo)return e.getUserInfo(d);let{data:u,error:s}=await U(r,{headers:{authorization:`Bearer ${d.accessToken}`}});if(s||u.state!=="active"||u.locked)return null;let a=await e.mapProfileToUser?.(u);return{user:{id:u.id.toString(),name:u.name??u.username,email:u.email,image:u.avatar_url,emailVerified:!0,...a},data:u}}}};var or=e=>({id:"reddit",name:"Reddit",createAuthorizationURL({state:t,scopes:n,redirectURI:r}){let i=n||["identity"];return e.scope&&i.push(...e.scope),O({id:"reddit",options:e,authorizationEndpoint:"https://www.reddit.com/api/v1/authorize",scopes:i,state:t,redirectURI:r,duration:e.duration})},validateAuthorizationCode:async({code:t,redirectURI:n})=>{let r=new URLSearchParams({grant_type:"authorization_code",code:t,redirect_uri:e.redirectURI||n}),i={"content-type":"application/x-www-form-urlencoded",accept:"text/plain","user-agent":"better-auth",Authorization:`Basic ${Buffer.from(`${e.clientId}:${e.clientSecret}`).toString("base64")}`},{data:o,error:d}=await U("https://www.reddit.com/api/v1/access_token",{method:"POST",headers:i,body:r.toString()});if(d)throw d;return Ce(o)},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:n,error:r}=await U("https://oauth.reddit.com/api/v1/me",{headers:{Authorization:`Bearer ${t.accessToken}`,"User-Agent":"better-auth"}});if(r)return null;let i=await e.mapProfileToUser?.(n);return{user:{id:n.id,name:n.name,email:n.oauth_client_id,emailVerified:n.has_verified_email,image:n.icon_img?.split("?")[0],...i},data:n}}});var sr=require("zod"),nt={apple:$t,discord:Mt,facebook:zt,github:Ht,microsoft:Jt,google:Kt,spotify:Zt,twitch:er,twitter:tr,dropbox:rr,linkedin:nr,gitlab:ir,reddit:or},it=Object.keys(nt),ar=sr.z.enum(it,{description:"OAuth2 provider to use"});var $=require("zod");var ge=require("better-call");var K=require("better-call");var re=require("zod");function me(e){try{return JSON.parse(e)}catch{return null}}var b={USER_NOT_FOUND:"User not found",FAILED_TO_CREATE_USER:"Failed to create user",FAILED_TO_CREATE_SESSION:"Failed to create session",FAILED_TO_UPDATE_USER:"Failed to update user",FAILED_TO_GET_SESSION:"Failed to get session",INVALID_PASSWORD:"Invalid password",INVALID_EMAIL:"Invalid email",INVALID_EMAIL_OR_PASSWORD:"Invalid email or password",SOCIAL_ACCOUNT_ALREADY_LINKED:"Social account already linked",PROVIDER_NOT_FOUND:"Provider not found",INVALID_TOKEN:"invalid token",ID_TOKEN_NOT_SUPPORTED:"id_token not supported",FAILED_TO_GET_USER_INFO:"Failed to get user info",USER_EMAIL_NOT_FOUND:"User email not found",EMAIL_NOT_VERIFIED:"Email not verified",PASSWORD_TOO_SHORT:"Password too short",PASSWORD_TOO_LONG:"Password too long",USER_ALREADY_EXISTS:"User already exists",EMAIL_CAN_NOT_BE_UPDATED:"Email can not be updated",CREDENTIAL_ACCOUNT_NOT_FOUND:"Credential account not found",SESSION_EXPIRED:"Session expired. Re-authenticate to perform this action.",FAILED_TO_UNLINK_LAST_ACCOUNT:"You can't unlink your last account",ACCOUNT_NOT_FOUND:"Account not found"};var dr=require("@better-auth/utils/hmac"),cr=require("@better-auth/utils/base64"),ur=require("@better-auth/utils/binary"),ot=()=>E("/get-session",{method:"GET",query:re.z.optional(re.z.object({disableCookieCache:re.z.boolean({description:"Disable cookie cache and fetch session from database"}).or(re.z.string().transform(e=>e==="true")).optional(),disableRefresh:re.z.boolean({description:"Disable session refresh. Useful for checking session status, without updating the session"}).optional()})),requireHeaders:!0,metadata:{openapi:{description:"Get the current session",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}},user:{type:"object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{try{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)return e.json(null);let n=e.getCookie(e.context.authCookies.sessionData.name),r=n?me(ur.binary.decode(cr.base64.decode(n))):null;if(r&&!await(0,dr.createHMAC)("SHA-256","base64urlnopad").verify(e.context.secret,JSON.stringify(r.session),r.signature))return z(e),e.json(null);let i=await e.getSignedCookie(e.context.authCookies.dontRememberToken.name,e.context.secret);if(r?.session&&e.context.options.session?.cookieCache?.enabled&&!e.query?.disableCookieCache){let c=r.session;if(r.expiresAt<Date.now()||c.session.expiresAt<new Date){let m=e.context.authCookies.sessionData.name;e.setCookie(m,"",{maxAge:0})}else return e.json(c)}let o=await e.context.internalAdapter.findSession(t);if(e.context.session=o,!o||o.session.expiresAt<new Date)return z(e),o&&await e.context.internalAdapter.deleteSession(o.session.token),e.json(null);if(i||e.query?.disableRefresh)return e.json(o);let d=e.context.sessionConfig.expiresIn,u=e.context.sessionConfig.updateAge;if(o.session.expiresAt.valueOf()-d*1e3+u*1e3<=Date.now()){let c=await e.context.internalAdapter.updateSession(o.session.token,{expiresAt:M(e.context.sessionConfig.expiresIn,"sec")});if(!c)return z(e),e.json(null,{status:401});let p=(c.expiresAt.valueOf()-Date.now())/1e3;return await C(e,{session:c,user:o.user},!1,{maxAge:p}),e.json({session:c,user:o.user})}return await De(e,o),e.json(o)}catch(t){throw e.context.logger.error("INTERNAL_SERVER_ERROR",t),new K.APIError("INTERNAL_SERVER_ERROR",{message:b.FAILED_TO_GET_SESSION})}}),ce=async(e,t)=>{if(e.context.session)return e.context.session;let n=await ot()({...e,_flag:"json",headers:e.headers,query:t}).catch(r=>null);return e.context.session=n,n},F=le(async e=>{let t=await ce(e);if(!t?.session)throw new K.APIError("UNAUTHORIZED");return{session:t}}),lr=le(async e=>{let t=await ce(e);if(!t?.session)throw new K.APIError("UNAUTHORIZED");if(e.context.sessionConfig.freshAge===0)return{session:t};let n=e.context.sessionConfig.freshAge,r=t.session.updatedAt?.valueOf()||t.session.createdAt.valueOf();if(!(Date.now()-r<n*1e3))throw new K.APIError("FORBIDDEN",{message:"Session is not fresh"});return{session:t}}),pr=()=>E("/list-sessions",{method:"GET",use:[F],requireHeaders:!0,metadata:{openapi:{description:"List all active sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}}}}}}}}}},async e=>{let n=(await e.context.internalAdapter.listSessions(e.context.session.user.id)).filter(r=>r.expiresAt>new Date);return e.json(n)}),fr=E("/revoke-session",{method:"POST",body:re.z.object({token:re.z.string({description:"The token to revoke"})}),use:[F],requireHeaders:!0,metadata:{openapi:{description:"Revoke a single session",requestBody:{content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}},required:["token"]}}}}}}},async e=>{let t=e.body.token,n=await e.context.internalAdapter.findSession(t);if(!n)throw new K.APIError("BAD_REQUEST",{message:"Session not found"});if(n.session.userId!==e.context.session.user.id)throw new K.APIError("UNAUTHORIZED");try{await e.context.internalAdapter.deleteSession(t)}catch(r){throw e.context.logger.error(r&&typeof r=="object"&&"name"in r?r.name:"",r),new K.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),mr=E("/revoke-sessions",{method:"POST",use:[F],requireHeaders:!0,metadata:{openapi:{description:"Revoke all sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}},required:["status"]}}}}}}}},async e=>{try{await e.context.internalAdapter.deleteSessions(e.context.session.user.id)}catch(t){throw e.context.logger.error(t&&typeof t=="object"&&"name"in t?t.name:"",t),new K.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),gr=E("/revoke-other-sessions",{method:"POST",requireHeaders:!0,use:[F],metadata:{openapi:{description:"Revoke all other sessions for the user except the current one",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.context.session;if(!t.user)throw new K.APIError("UNAUTHORIZED");let i=(await e.context.internalAdapter.listSessions(t.user.id)).filter(o=>o.expiresAt>new Date).filter(o=>o.token!==e.context.session.session.token);return await Promise.all(i.map(o=>e.context.internalAdapter.deleteSession(o.token))),e.json({status:!0})});var hr=require("jose");var yr=require("jose/errors");async function Q(e,t,n,r=3600){return await Dt({email:t.toLowerCase(),updateTo:n},e,r)}async function Hn(e,t){if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new ge.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let n=await Q(e.context.secret,t.email,void 0,e.context.options.emailVerification?.expiresIn),r=`${e.context.baseURL}/verify-email?token=${n}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification.sendVerificationEmail({user:t,url:r,token:n},e.request)}var wr=E("/send-verification-email",{method:"POST",query:$.z.object({currentURL:$.z.string({description:"The URL to use for email verification callback"}).optional()}).optional(),body:$.z.object({email:$.z.string({description:"The email to send the verification email to"}).email(),callbackURL:$.z.string({description:"The URL to use for email verification callback"}).optional()}),metadata:{openapi:{description:"Send a verification email to the user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"The email to send the verification email to"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["email"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new ge.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let{email:t}=e.body,n=await e.context.internalAdapter.findUserByEmail(t);if(!n)throw new ge.APIError("BAD_REQUEST",{message:b.USER_NOT_FOUND});return await Hn(e,n.user),e.json({status:!0})}),br=E("/verify-email",{method:"GET",query:$.z.object({token:$.z.string({description:"The token to verify the email"}),callbackURL:$.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[pe(e=>e.query.callbackURL)],metadata:{openapi:{description:"Verify the email of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}},required:["user","status"]}}}}}}}},async e=>{function t(u){throw e.query.callbackURL?e.query.callbackURL.includes("?")?e.redirect(`${e.query.callbackURL}&error=${u}`):e.redirect(`${e.query.callbackURL}?error=${u}`):new ge.APIError("UNAUTHORIZED",{message:u})}let{token:n}=e.query,r;try{r=await(0,hr.jwtVerify)(n,new TextEncoder().encode(e.context.secret),{algorithms:["HS256"]})}catch(u){return u instanceof yr.JWTExpired?t("token_expired"):t("invalid_token")}let o=$.z.object({email:$.z.string().email(),updateTo:$.z.string().optional()}).parse(r.payload),d=await e.context.internalAdapter.findUserByEmail(o.email);if(!d)return t("user_not_found");if(o.updateTo){let u=await ce(e);if(!u){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}if(u.user.email!==o.email){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}let s=await e.context.internalAdapter.updateUserByEmail(o.email,{email:o.updateTo,emailVerified:!1}),a=await Q(e.context.secret,o.updateTo);if(await e.context.options.emailVerification?.sendVerificationEmail?.({user:s,url:`${e.context.baseURL}/verify-email?token=${a}`,token:a},e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0,user:{id:s.id,email:s.email,name:s.name,image:s.image,emailVerified:s.emailVerified,createdAt:s.createdAt,updatedAt:s.updatedAt}})}if(await e.context.internalAdapter.updateUserByEmail(o.email,{emailVerified:!0}),e.context.options.emailVerification?.autoSignInAfterVerification){let u=await ce(e);if(!u||u.user.email!==o.email){let s=await e.context.internalAdapter.createSession(d.user.id,e.request);if(!s)throw new ge.APIError("INTERNAL_SERVER_ERROR",{message:"Failed to create session"});await C(e,{session:s,user:d.user})}}if(e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0,user:null})});async function Be(e,{userInfo:t,account:n,callbackURL:r}){let i=await e.context.internalAdapter.findOAuthUser(t.email.toLowerCase(),n.accountId,n.providerId).catch(s=>{throw N.error(`Better auth was unable to query your database.
Error: `,s),e.redirect(`${e.context.baseURL}/error?error=internal_server_error`)}),o=i?.user,d=!o;if(i){let s=i.accounts.find(a=>a.providerId===n.providerId);if(s){let a=Object.fromEntries(Object.entries({accessToken:n.accessToken,idToken:n.idToken,refreshToken:n.refreshToken,accessTokenExpiresAt:n.accessTokenExpiresAt,refreshTokenExpiresAt:n.refreshTokenExpiresAt}).filter(([c,p])=>p!==void 0));Object.keys(a).length>0&&await e.context.internalAdapter.updateAccount(s.id,a)}else{if(!e.context.options.account?.accountLinking?.trustedProviders?.includes(n.providerId)&&!t.emailVerified||e.context.options.account?.accountLinking?.enabled===!1)return Ie&&N.warn(`User already exist but account isn't linked to ${n.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`),{error:"account not linked",data:null};try{await e.context.internalAdapter.linkAccount({providerId:n.providerId,accountId:t.id.toString(),userId:i.user.id,accessToken:n.accessToken,idToken:n.idToken,refreshToken:n.refreshToken,accessTokenExpiresAt:n.accessTokenExpiresAt,refreshTokenExpiresAt:n.refreshTokenExpiresAt,scope:n.scope})}catch(p){return N.error("Unable to link account",p),{error:"unable to link account",data:null}}}}else try{if(o=await e.context.internalAdapter.createOAuthUser({...t,email:t.email.toLowerCase(),id:void 0},{accessToken:n.accessToken,idToken:n.idToken,refreshToken:n.refreshToken,accessTokenExpiresAt:n.accessTokenExpiresAt,refreshTokenExpiresAt:n.refreshTokenExpiresAt,scope:n.scope,providerId:n.providerId,accountId:t.id.toString()}).then(s=>s?.user),!t.emailVerified&&o&&e.context.options.emailVerification?.sendOnSignUp){let s=await Q(e.context.secret,o.email,void 0,e.context.options.emailVerification?.expiresIn),a=`${e.context.baseURL}/verify-email?token=${s}&callbackURL=${r}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:o,url:a,token:s},e.request)}}catch(s){return s instanceof st.APIError?{error:s.message,data:null,isRegister:!1}:{error:"unable to create user",data:null,isRegister:!1}}if(!o)return{error:"unable to create user",data:null,isRegister:!1};let u=await e.context.internalAdapter.createSession(o.id,e.request);return u?{data:{session:u,user:o},error:null,isRegister:d}:{error:"unable to create session",data:null,isRegister:!1}}var Ar=E("/sign-in/social",{method:"POST",query:I.z.object({currentURL:I.z.string().optional()}).optional(),body:I.z.object({callbackURL:I.z.string({description:"Callback URL to redirect to after the user has signed in"}).optional(),newUserCallbackURL:I.z.string().optional(),errorCallbackURL:I.z.string({description:"Callback URL to redirect to if an error happens"}).optional(),provider:ar,disableRedirect:I.z.boolean({description:"Disable automatic redirection to the provider. Useful for handling the redirection yourself"}).optional(),idToken:I.z.optional(I.z.object({token:I.z.string({description:"ID token from the provider"}),nonce:I.z.string({description:"Nonce used to generate the token"}).optional(),accessToken:I.z.string({description:"Access token from the provider"}).optional(),refreshToken:I.z.string({description:"Refresh token from the provider"}).optional(),expiresAt:I.z.number({description:"Expiry date of the token"}).optional()}),{description:"ID token from the provider to sign in the user with id token"})}),metadata:{openapi:{description:"Sign in with a social provider",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"string"},user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{let t=e.context.socialProviders.find(o=>o.id===e.body.provider);if(!t)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:b.PROVIDER_NOT_FOUND});if(e.body.idToken){if(!t.verifyIdToken)throw e.context.logger.error("Provider does not support id token verification",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:b.ID_TOKEN_NOT_SUPPORTED});let{token:o,nonce:d}=e.body.idToken;if(!await t.verifyIdToken(o,d))throw e.context.logger.error("Invalid id token",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:b.INVALID_TOKEN});let s=await t.getUserInfo({idToken:o,accessToken:e.body.idToken.accessToken,refreshToken:e.body.idToken.refreshToken});if(!s||!s?.user)throw e.context.logger.error("Failed to get user info",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:b.FAILED_TO_GET_USER_INFO});if(!s.user.email)throw e.context.logger.error("User email not found",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:b.USER_EMAIL_NOT_FOUND});let a=await Be(e,{userInfo:{email:s.user.email,id:s.user.id,name:s.user.name||"",image:s.user.image,emailVerified:s.user.emailVerified||!1},account:{providerId:t.id,accountId:s.user.id,accessToken:e.body.idToken.accessToken}});if(a.error)throw new L.APIError("UNAUTHORIZED",{message:a.error});return await C(e,a.data),e.json({redirect:!1,token:a.data.session.token,url:void 0,user:{id:a.data.user.id,email:a.data.user.email,name:a.data.user.name,image:a.data.user.image,emailVerified:a.data.user.emailVerified,createdAt:a.data.user.createdAt,updatedAt:a.data.user.updatedAt}})}let{codeVerifier:n,state:r}=await Ee(e),i=await t.createAuthorizationURL({state:r,codeVerifier:n,redirectURI:`${e.context.baseURL}/callback/${t.id}`});return e.json({url:i.toString(),redirect:!e.body.disableRedirect})}),Rr=E("/sign-in/email",{method:"POST",body:I.z.object({email:I.z.string({description:"Email of the user"}),password:I.z.string({description:"Password of the user"}),callbackURL:I.z.string({description:"Callback URL to use as a redirect for email verification"}).optional(),rememberMe:I.z.boolean({description:"If this is false, the session will not be remembered. Default is `true`."}).default(!0).optional()}),metadata:{openapi:{description:"Sign in with email and password",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{if(!e.context.options?.emailAndPassword?.enabled)throw e.context.logger.error("Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!"),new L.APIError("BAD_REQUEST",{message:"Email and password is not enabled"});let{email:t,password:n}=e.body;if(!I.z.string().email().safeParse(t).success)throw new L.APIError("BAD_REQUEST",{message:b.INVALID_EMAIL});let i=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!i)throw await e.context.password.hash(n),e.context.logger.error("User not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:b.INVALID_EMAIL_OR_PASSWORD});let o=i.accounts.find(a=>a.providerId==="credential");if(!o)throw e.context.logger.error("Credential account not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:b.INVALID_EMAIL_OR_PASSWORD});let d=o?.password;if(!d)throw e.context.logger.error("Password not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:b.INVALID_EMAIL_OR_PASSWORD});if(!await e.context.password.verify({hash:d,password:n}))throw e.context.logger.error("Invalid password"),new L.APIError("UNAUTHORIZED",{message:b.INVALID_EMAIL_OR_PASSWORD});if(e.context.options?.emailAndPassword?.requireEmailVerification&&!i.user.emailVerified){if(!e.context.options?.emailVerification?.sendVerificationEmail)throw new L.APIError("UNAUTHORIZED",{message:b.EMAIL_NOT_VERIFIED});let a=await Q(e.context.secret,i.user.email,void 0,e.context.options.emailVerification?.expiresIn),c=`${e.context.baseURL}/verify-email?token=${a}&callbackURL=${e.body.callbackURL||"/"}`;throw await e.context.options.emailVerification.sendVerificationEmail({user:i.user,url:c,token:a},e.request),new L.APIError("FORBIDDEN",{message:b.EMAIL_NOT_VERIFIED})}let s=await e.context.internalAdapter.createSession(i.user.id,e.headers,e.body.rememberMe===!1);if(!s)throw e.context.logger.error("Failed to create session"),new L.APIError("UNAUTHORIZED",{message:b.FAILED_TO_CREATE_SESSION});return await C(e,{session:s,user:i.user},e.body.rememberMe===!1),e.json({redirect:!!e.body.callbackURL,token:s.token,url:e.body.callbackURL,user:{id:i.user.id,email:i.user.email,name:i.user.name,image:i.user.image,emailVerified:i.user.emailVerified,createdAt:i.user.createdAt,updatedAt:i.user.updatedAt}})});var he=require("zod");var je=he.z.object({code:he.z.string().optional(),error:he.z.string().optional(),error_description:he.z.string().optional(),state:he.z.string().optional()}),kr=E("/callback/:id",{method:["GET","POST"],body:je.optional(),query:je.optional(),metadata:de},async e=>{let t;try{if(e.method==="GET")t=je.parse(e.query);else if(e.method==="POST")t=je.parse(e.body);else throw new Error("Unsupported method")}catch(h){throw e.context.logger.error("INVALID_CALLBACK_REQUEST",h),e.redirect(`${e.context.baseURL}/error?error=invalid_callback_request`)}let{code:n,error:r,state:i,error_description:o}=t;if(!i)throw e.context.logger.error("State not found",r),e.redirect(`${e.context.baseURL}/error?error=state_not_found`);if(!n)throw e.context.logger.error("Code not found"),e.redirect(`${e.context.baseURL}/error?error=${r||"no_code"}&error_description=${o}`);let d=e.context.socialProviders.find(h=>h.id===e.params.id);if(!d)throw e.context.logger.error("Oauth provider with id",e.params.id,"not found"),e.redirect(`${e.context.baseURL}/error?error=oauth_provider_not_found`);let{codeVerifier:u,callbackURL:s,link:a,errorURL:c,newUserURL:p}=await tt(e),m;try{m=await d.validateAuthorizationCode({code:n,codeVerifier:u,redirectURI:`${e.context.baseURL}/callback/${d.id}`})}catch(h){throw e.context.logger.error("",h),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`)}let l=await d.getUserInfo(m).then(h=>h?.user);function f(h){let y=c||s||`${e.context.baseURL}/error`;throw y.includes("?")?y=`${y}&error=${h}`:y=`${y}?error=${h}`,e.redirect(y)}if(!l)return e.context.logger.error("Unable to get user info"),f("unable_to_get_user_info");if(!l.email)return e.context.logger.error("Provider did not return email. This could be due to misconfiguration in the provider settings."),f("email_not_found");if(!s)throw e.context.logger.error("No callback URL found"),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);if(a){if(a.email!==l.email.toLowerCase())return f("email_doesn't_match");if(!await e.context.internalAdapter.createAccount({userId:a.userId,providerId:d.id,accountId:l.id}))return f("unable_to_link_account");let y;try{y=s.toString()}catch{y=s}throw e.redirect(y)}let g=await Be(e,{userInfo:{...l,email:l.email,name:l.name||l.email},account:{providerId:d.id,accountId:l.id,...m,scope:m.scopes?.join(",")},callbackURL:s});if(g.error)return e.context.logger.error(g.error.split(" ").join("_")),f(g.error.split(" ").join("_"));let{session:w,user:A}=g.data;await C(e,{session:w,user:A});let R;try{R=(g.isRegister&&p||s).toString()}catch{R=g.isRegister&&p||s}throw e.redirect(R)});var Tr=require("better-call");var Er=E("/sign-out",{method:"POST",requireHeaders:!0,metadata:{openapi:{description:"Sign out the current user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{success:{type:"boolean"}}}}}}}}}},async e=>{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)throw z(e),new Tr.APIError("BAD_REQUEST",{message:b.FAILED_TO_GET_SESSION});return await e.context.internalAdapter.deleteSession(t),z(e),e.json({success:!0})});var q=require("zod");var ye=require("better-call");function Ur(e,t,n){let r=t?new URL(t,e.baseURL):new URL(`${e.baseURL}/error`);return n&&Object.entries(n).forEach(([i,o])=>r.searchParams.set(i,o)),r.href}function Wn(e,t,n){let r=new URL(t,e.baseURL);return n&&Object.entries(n).forEach(([i,o])=>r.searchParams.set(i,o)),r.href}var vr=E("/forget-password",{method:"POST",body:q.z.object({email:q.z.string({description:"The email address of the user to send a password reset email to"}).email(),redirectTo:q.z.string({description:"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN"}).optional()}),metadata:{openapi:{description:"Send a password reset email to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.sendResetPassword)throw e.context.logger.error("Reset password isn't enabled.Please pass an emailAndPassword.sendResetPasswordToken function in your auth config!"),new ye.APIError("BAD_REQUEST",{message:"Reset password isn't enabled"});let{email:t,redirectTo:n}=e.body,r=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!r)return e.context.logger.error("Reset Password: User not found",{email:t}),e.json({status:!1},{body:{status:!0}});let i=60*60*1,o=M(e.context.options.emailAndPassword.resetPasswordTokenExpiresIn||i,"sec"),d=H(24);await e.context.internalAdapter.createVerificationValue({value:r.user.id.toString(),identifier:`reset-password:${d}`,expiresAt:o});let u=`${e.context.baseURL}/reset-password/${d}?callbackURL=${n}`;return await e.context.options.emailAndPassword.sendResetPassword({user:r.user,url:u,token:d},e.request),e.json({status:!0})}),Or=E("/reset-password/:token",{method:"GET",query:q.z.object({callbackURL:q.z.string({description:"The URL to redirect the user to reset their password"})}),use:[pe(e=>e.query.callbackURL)],metadata:{openapi:{description:"Redirects the user to the callback URL with the token",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}}}}}}}}}},async e=>{let{token:t}=e.params,{callbackURL:n}=e.query;if(!t||!n)throw e.redirect(Ur(e.context,n,{error:"INVALID_TOKEN"}));let r=await e.context.internalAdapter.findVerificationValue(`reset-password:${t}`);throw!r||r.expiresAt<new Date?e.redirect(Ur(e.context,n,{error:"INVALID_TOKEN"})):e.redirect(Wn(e.context,n,{token:t}))}),xr=E("/reset-password",{query:q.z.optional(q.z.object({token:q.z.string().optional(),currentURL:q.z.string().optional()})),method:"POST",body:q.z.object({newPassword:q.z.string({description:"The new password to set"}),token:q.z.string({description:"The token to reset the password"}).optional()}),metadata:{openapi:{description:"Reset the password for a user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.body.token||e.query?.token||(e.query?.currentURL?new URL(e.query.currentURL).searchParams.get("token"):"");if(!t)throw new ye.APIError("BAD_REQUEST",{message:b.INVALID_TOKEN});let{newPassword:n}=e.body,r=e.context.password?.config.minPasswordLength,i=e.context.password?.config.maxPasswordLength;if(n.length<r)throw new ye.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_SHORT});if(n.length>i)throw new ye.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_LONG});let o=`reset-password:${t}`,d=await e.context.internalAdapter.findVerificationValue(o);if(!d||d.expiresAt<new Date)throw new ye.APIError("BAD_REQUEST",{message:b.INVALID_TOKEN});await e.context.internalAdapter.deleteVerificationValue(d.id);let u=d.value,s=await e.context.password.hash(n);return(await e.context.internalAdapter.findAccounts(u)).find(p=>p.providerId==="credential")?(await e.context.internalAdapter.updatePassword(u,s),e.json({status:!0})):(await e.context.internalAdapter.createAccount({userId:u,providerId:"credential",password:s,accountId:u}),e.json({status:!0}))});var x=require("zod");var S=require("better-call");var T=require("zod"),Sr=require("better-call"),Sa=T.z.object({id:T.z.string(),providerId:T.z.string(),accountId:T.z.string(),userId:T.z.string(),accessToken:T.z.string().nullish(),refreshToken:T.z.string().nullish(),idToken:T.z.string().nullish(),accessTokenExpiresAt:T.z.date().nullish(),refreshTokenExpiresAt:T.z.date().nullish(),scope:T.z.string().nullish(),password:T.z.string().nullish(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date)}),_a=T.z.object({id:T.z.string(),email:T.z.string().transform(e=>e.toLowerCase()),emailVerified:T.z.boolean().default(!1),name:T.z.string(),image:T.z.string().nullish(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date)}),Ia=T.z.object({id:T.z.string(),userId:T.z.string(),expiresAt:T.z.date(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date),token:T.z.string(),ipAddress:T.z.string().nullish(),userAgent:T.z.string().nullish()}),Pa=T.z.object({id:T.z.string(),value:T.z.string(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date),expiresAt:T.z.date(),identifier:T.z.string()});function _r(e,t){let n=t.fields,r={};for(let i in e){let o=n[i];if(!o){r[i]=e[i];continue}o.returned!==!1&&(r[i]=e[i])}return r}function at(e,t){let n={...t==="user"?e.user?.additionalFields:{},...t==="session"?e.session?.additionalFields:{}};for(let r of e.plugins||[])r.schema&&r.schema[t]&&(n={...n,...r.schema[t].fields});return n}function dt(e,t){let n=at(e,"user");return _r(t,{fields:n})}function Fe(e,t){let n=at(e,"session");return _r(t,{fields:n})}function Gn(e,t){let n=t.action||"create",r=t.fields,i={};for(let o in r){if(o in e){if(r[o].input===!1){if(r[o].defaultValue){i[o]=r[o].defaultValue;continue}continue}if(r[o].validator?.input&&e[o]!==void 0){i[o]=r[o].validator.input.parse(e[o]);continue}if(r[o].transform?.input&&e[o]!==void 0){i[o]=r[o].transform?.input(e[o]);continue}i[o]=e[o];continue}if(r[o].defaultValue&&n==="create"){i[o]=r[o].defaultValue;continue}if(r[o].required&&n==="create")throw new Sr.APIError("BAD_REQUEST",{message:`${o} is required`})}return i}function qe(e,t,n){let r=at(e,"user");return Gn(t||{},{fields:r,action:n})}var Ir=()=>E("/update-user",{method:"POST",body:x.z.record(x.z.string(),x.z.any()),use:[F],metadata:{openapi:{description:"Update the current user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"}}}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"}}}}}}}}}},async e=>{let t=e.body;if(t.email)throw new S.APIError("BAD_REQUEST",{message:b.EMAIL_CAN_NOT_BE_UPDATED});let{name:n,image:r,...i}=t,o=e.context.session;if(r===void 0&&n===void 0&&Object.keys(i).length===0)return e.json({status:!0});let d=qe(e.context.options,i,"update"),u=await e.context.internalAdapter.updateUserByEmail(o.user.email,{name:n,image:r,...d});return await C(e,{session:o.session,user:u}),e.json({status:!0})}),Pr=E("/change-password",{method:"POST",body:x.z.object({newPassword:x.z.string({description:"The new password to set"}),currentPassword:x.z.string({description:"The current password"}),revokeOtherSessions:x.z.boolean({description:"Revoke all other sessions"}).optional()}),use:[F],metadata:{openapi:{description:"Change the password of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{description:"The user object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{let{newPassword:t,currentPassword:n,revokeOtherSessions:r}=e.body,i=e.context.session,o=e.context.password.config.minPasswordLength;if(t.length<o)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_SHORT});let d=e.context.password.config.maxPasswordLength;if(t.length>d)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_LONG});let s=(await e.context.internalAdapter.findAccounts(i.user.id)).find(m=>m.providerId==="credential"&&m.password);if(!s||!s.password)throw new S.APIError("BAD_REQUEST",{message:b.CREDENTIAL_ACCOUNT_NOT_FOUND});let a=await e.context.password.hash(t);if(!await e.context.password.verify({hash:s.password,password:n}))throw new S.APIError("BAD_REQUEST",{message:b.INVALID_PASSWORD});await e.context.internalAdapter.updateAccount(s.id,{password:a});let p=null;if(r){await e.context.internalAdapter.deleteSessions(i.user.id);let m=await e.context.internalAdapter.createSession(i.user.id,e.headers);if(!m)throw new S.APIError("INTERNAL_SERVER_ERROR",{message:b.FAILED_TO_GET_SESSION});await C(e,{session:m,user:i.user}),p=m.token}return e.json({token:p,user:{id:i.user.id,email:i.user.email,name:i.user.name,image:i.user.image,emailVerified:i.user.emailVerified,createdAt:i.user.createdAt,updatedAt:i.user.updatedAt}})}),Lr=E("/set-password",{method:"POST",body:x.z.object({newPassword:x.z.string()}),metadata:{SERVER_ONLY:!0},use:[F]},async e=>{let{newPassword:t}=e.body,n=e.context.session,r=e.context.password.config.minPasswordLength;if(t.length<r)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_SHORT});let i=e.context.password.config.maxPasswordLength;if(t.length>i)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_LONG});let d=(await e.context.internalAdapter.findAccounts(n.user.id)).find(s=>s.providerId==="credential"&&s.password),u=await e.context.password.hash(t);if(!d)return await e.context.internalAdapter.linkAccount({userId:n.user.id,providerId:"credential",accountId:n.user.id,password:u}),e.json({status:!0});throw new S.APIError("BAD_REQUEST",{message:"user already has a password"})}),Dr=E("/delete-user",{method:"POST",use:[F],body:x.z.object({callbackURL:x.z.string().optional(),password:x.z.string().optional(),token:x.z.string().optional()}),metadata:{openapi:{description:"Delete the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object"}}}}}}}},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options",{session:e.context.session}),new S.APIError("NOT_FOUND");let t=e.context.session;if(e.body.password){let o=(await e.context.internalAdapter.findAccounts(t.user.id)).find(u=>u.providerId==="credential"&&u.password);if(!o||!o.password)throw new S.APIError("BAD_REQUEST",{message:b.CREDENTIAL_ACCOUNT_NOT_FOUND});if(!await e.context.password.verify({hash:o.password,password:e.body.password}))throw new S.APIError("BAD_REQUEST",{message:b.INVALID_PASSWORD})}else if(e.context.options.session?.freshAge){let i=t.session.createdAt.getTime(),o=e.context.options.session.freshAge;if(Date.now()-i>o)throw new S.APIError("BAD_REQUEST",{message:b.SESSION_EXPIRED})}if(e.body.token)return await ct({...e,query:{token:e.body.token}}),e.json({success:!0,message:"User deleted"});if(e.context.options.user.deleteUser?.sendDeleteAccountVerification){let i=Te(32,"0-9","a-z");await e.context.internalAdapter.createVerificationValue({value:t.user.id,identifier:`delete-account-${i}`,expiresAt:new Date(Date.now()+1e3*60*60*24)});let o=`${e.context.baseURL}/delete-user/callback?token=${i}&callbackURL=${e.body.callbackURL||"/"}`;return await e.context.options.user.deleteUser.sendDeleteAccountVerification({user:t.user,url:o,token:i},e.request),e.json({success:!0,message:"Verification email sent"})}let n=e.context.options.user.deleteUser?.beforeDelete;n&&await n(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),z(e);let r=e.context.options.user.deleteUser?.afterDelete;return r&&await r(t.user,e.request),e.json({success:!0,message:"User deleted"})}),ct=E("/delete-user/callback",{method:"GET",query:x.z.object({token:x.z.string(),callbackURL:x.z.string().optional()}),use:[pe(e=>e.query.callbackURL)]},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options"),new S.APIError("NOT_FOUND");let t=await ce(e);if(!t)throw new S.APIError("NOT_FOUND",{message:b.FAILED_TO_GET_USER_INFO});let n=await e.context.internalAdapter.findVerificationValue(`delete-account-${e.query.token}`);if(!n||n.expiresAt<new Date)throw n&&await e.context.internalAdapter.deleteVerificationValue(n.id),new S.APIError("NOT_FOUND",{message:b.INVALID_TOKEN});if(n.value!==t.user.id)throw new S.APIError("NOT_FOUND",{message:b.INVALID_TOKEN});let r=e.context.options.user.deleteUser?.beforeDelete;r&&await r(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),await e.context.internalAdapter.deleteVerificationValue(n.id),z(e);let i=e.context.options.user.deleteUser?.afterDelete;if(i&&await i(t.user,e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL||"/");return e.json({success:!0,message:"User deleted"})}),Cr=E("/change-email",{method:"POST",query:x.z.object({currentURL:x.z.string().optional()}).optional(),body:x.z.object({newEmail:x.z.string({description:"The new email to set"}).email(),callbackURL:x.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[F],metadata:{openapi:{responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.user?.changeEmail?.enabled)throw e.context.logger.error("Change email is disabled."),new S.APIError("BAD_REQUEST",{message:"Change email is disabled"});if(e.body.newEmail===e.context.session.user.email)throw e.context.logger.error("Email is the same"),new S.APIError("BAD_REQUEST",{message:"Email is the same"});if(await e.context.internalAdapter.findUserByEmail(e.body.newEmail))throw e.context.logger.error("Email already exists"),new S.APIError("BAD_REQUEST",{message:"Couldn't update your email"});if(e.context.session.user.emailVerified!==!0){let i=await e.context.internalAdapter.updateUserByEmail(e.context.session.user.email,{email:e.body.newEmail});return e.json({status:!0})}if(!e.context.options.user.changeEmail.sendChangeEmailVerification)throw e.context.logger.error("Verification email isn't enabled."),new S.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let n=await Q(e.context.secret,e.context.session.user.email,e.body.newEmail,e.context.options.emailVerification?.expiresIn),r=`${e.context.baseURL}/verify-email?token=${n}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;return await e.context.options.user.changeEmail.sendChangeEmailVerification({user:e.context.session.user,newEmail:e.body.newEmail,url:r,token:n},e.request),e.json({status:!0})});var Kn=(e="Unknown")=>`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Error</title>
    <style>
        :root {
            --bg-color: #f8f9fa;
            --text-color: #212529;
            --accent-color: #000000;
            --error-color: #dc3545;
            --border-color: #e9ecef;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            line-height: 1.5;
        }
        .error-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 2.5rem;
            text-align: center;
            max-width: 90%;
            width: 400px;
        }
        h1 {
            color: var(--error-color);
            font-size: 1.75rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        p {
            margin-bottom: 1.5rem;
            color: #495057;
        }
        .btn {
            background-color: var(--accent-color);
            color: #ffffff;
            text-decoration: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: inline-block;
            font-weight: 500;
            border: 2px solid var(--accent-color);
        }
        .btn:hover {
            background-color: #131721;
        }
        .error-code {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
        }
        .icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="error-container">
        <div class="icon">\u26A0\uFE0F</div>
        <h1>Better Auth Error</h1>
        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>
        <a href="/" id="returnLink" class="btn">Return to Application</a>
        <div class="error-code">Error Code: <span id="errorCode">${e}</span></div>
    </div>
</body>
</html>`,Nr=E("/error",{method:"GET",metadata:{...de,openapi:{description:"Displays an error page",responses:{200:{description:"Success",content:{"text/html":{schema:{type:"string"}}}}}}}},async e=>{let t=new URL(e.request?.url||"").searchParams.get("error")||"Unknown";return new Response(Kn(t),{headers:{"Content-Type":"text/html"}})});var Br=E("/ok",{method:"GET",metadata:{...de,openapi:{description:"Check if the API is working",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{ok:{type:"boolean"}}}}}}}}}},async e=>e.json({ok:!0}));var ue=require("zod");var J=require("better-call");var jr=()=>E("/sign-up/email",{method:"POST",query:ue.z.object({currentURL:ue.z.string().optional()}).optional(),body:ue.z.record(ue.z.string(),ue.z.any()),metadata:{openapi:{description:"Sign up a user using email and password",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},email:{type:"string",description:"The email of the user"},password:{type:"string",description:"The password of the user"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["name","email","password"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The id of the user"},email:{type:"string",description:"The email of the user"},name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"},emailVerified:{type:"boolean",description:"If the email is verified"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.enabled)throw new J.APIError("BAD_REQUEST",{message:"Email and password sign up is not enabled"});let t=e.body,{name:n,email:r,password:i,image:o,callbackURL:d,...u}=t;if(!ue.z.string().email().safeParse(r).success)throw new J.APIError("BAD_REQUEST",{message:b.INVALID_EMAIL});let a=e.context.password.config.minPasswordLength;if(i.length<a)throw e.context.logger.error("Password is too short"),new J.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_SHORT});let c=e.context.password.config.maxPasswordLength;if(i.length>c)throw e.context.logger.error("Password is too long"),new J.APIError("BAD_REQUEST",{message:b.PASSWORD_TOO_LONG});if((await e.context.internalAdapter.findUserByEmail(r))?.user)throw e.context.logger.info(`Sign-up attempt for existing email: ${r}`),new J.APIError("UNPROCESSABLE_ENTITY",{message:b.USER_ALREADY_EXISTS});let m=qe(e.context.options,u),l;try{if(l=await e.context.internalAdapter.createUser({email:r.toLowerCase(),name:n,image:o,...m,emailVerified:!1}),!l)throw new J.APIError("BAD_REQUEST",{message:b.FAILED_TO_CREATE_USER})}catch(w){throw Ie&&e.context.logger.error("Failed to create user",w),new J.APIError("UNPROCESSABLE_ENTITY",{message:b.FAILED_TO_CREATE_USER,details:w})}if(!l)throw new J.APIError("UNPROCESSABLE_ENTITY",{message:b.FAILED_TO_CREATE_USER});let f=await e.context.password.hash(i);if(await e.context.internalAdapter.linkAccount({userId:l.id,providerId:"credential",accountId:l.id,password:f}),e.context.options.emailVerification?.sendOnSignUp||e.context.options.emailAndPassword.requireEmailVerification){let w=await Q(e.context.secret,l.email,void 0,e.context.options.emailVerification?.expiresIn),A=`${e.context.baseURL}/verify-email?token=${w}&callbackURL=${t.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:l,url:A,token:w},e.request)}if(!e.context.options.emailAndPassword.autoSignIn||e.context.options.emailAndPassword.requireEmailVerification)return e.json({token:null,user:{id:l.id,email:l.email,name:l.name,image:l.image,emailVerified:l.emailVerified,createdAt:l.createdAt,updatedAt:l.updatedAt}});let g=await e.context.internalAdapter.createSession(l.id,e.request);if(!g)throw new J.APIError("BAD_REQUEST",{message:b.FAILED_TO_CREATE_SESSION});return await C(e,{session:g,user:l}),e.json({token:g.token,user:{id:l.id,email:l.email,name:l.name,image:l.image,emailVerified:l.emailVerified,createdAt:l.createdAt,updatedAt:l.updatedAt}})});var ne=require("zod");var ve=require("better-call");var Fr=E("/list-accounts",{method:"GET",use:[F],metadata:{openapi:{description:"List all accounts linked to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string"},provider:{type:"string"}}}}}}}}}}},async e=>{let t=e.context.session,n=await e.context.internalAdapter.findAccounts(t.user.id);return e.json(n.map(r=>({id:r.id,provider:r.providerId,createdAt:r.createdAt,updatedAt:r.updatedAt,accountId:r.accountId,scopes:r.scope?.split(",")||[]})))}),qr=E("/link-social",{method:"POST",requireHeaders:!0,query:ne.z.object({currentURL:ne.z.string().optional()}).optional(),body:ne.z.object({callbackURL:ne.z.string({description:"The URL to redirect to after the user has signed in"}).optional(),provider:ne.z.enum(it,{description:"The OAuth2 provider to use"})}),use:[F],metadata:{openapi:{description:"Link a social account to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{url:{type:"string"},redirect:{type:"boolean"}},required:["url","redirect"]}}}}}}}},async e=>{let t=e.context.session;if((await e.context.internalAdapter.findAccounts(t.user.id)).find(u=>u.providerId===e.body.provider))throw new ve.APIError("BAD_REQUEST",{message:b.SOCIAL_ACCOUNT_ALREADY_LINKED});let i=e.context.socialProviders.find(u=>u.id===e.body.provider);if(!i)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new ve.APIError("NOT_FOUND",{message:b.PROVIDER_NOT_FOUND});let o=await Ee(e,{userId:t.user.id,email:t.user.email}),d=await i.createAuthorizationURL({state:o.state,codeVerifier:o.codeVerifier,redirectURI:`${e.context.baseURL}/callback/${i.id}`});return e.json({url:d.toString(),redirect:!0})}),Vr=E("/unlink-account",{method:"POST",body:ne.z.object({providerId:ne.z.string()}),use:[lr]},async e=>{let t=await e.context.internalAdapter.findAccounts(e.context.session.user.id);if(t.length===1)throw new ve.APIError("BAD_REQUEST",{message:b.FAILED_TO_UNLINK_LAST_ACCOUNT});if(!t.find(r=>r.providerId===e.body.providerId))throw new ve.APIError("BAD_REQUEST",{message:b.ACCOUNT_NOT_FOUND});return await e.context.internalAdapter.deleteAccount(e.body.providerId,e.context.session.user.id),e.json({status:!0})});function Ve(e,t){if(t.advanced?.ipAddress?.disableIpTracking)return null;let n="127.0.0.1";if(wt)return n;let i=t.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],o=e instanceof Request?e.headers:e;for(let d of i){let u=o.get(d);if(typeof u=="string"){let s=u.split(",")[0].trim();if(s)return s}}return null}function Qn(e,t,n){let r=Date.now(),i=t*1e3;return r-n.lastRequest<i&&n.count>=e}function Jn(e){return new Response(JSON.stringify({message:"Too many requests. Please try again later."}),{status:429,statusText:"Too Many Requests",headers:{"X-Retry-After":e.toString()}})}function Zn(e,t){let n=Date.now(),r=t*1e3;return Math.ceil((e+r-n)/1e3)}function Yn(e,t){let n="rateLimit",r=e.adapter;return{get:async i=>(await r.findMany({model:n,where:[{field:"key",value:i}]}))[0],set:async(i,o,d)=>{try{d?await r.updateMany({model:t??"rateLimit",where:[{field:"key",value:i}],update:{count:o.count,lastRequest:o.lastRequest}}):await r.create({model:t??"rateLimit",data:{key:i,count:o.count,lastRequest:o.lastRequest}})}catch(u){e.logger.error("Error setting rate limit",u)}}}}var $r=new Map;function Xn(e){return e.options.rateLimit?.customStorage?e.options.rateLimit.customStorage:e.rateLimit.storage==="secondary-storage"?{get:async n=>{let r=await e.options.secondaryStorage?.get(n);return r?JSON.parse(r):void 0},set:async(n,r)=>{await e.options.secondaryStorage?.set?.(n,JSON.stringify(r))}}:e.rateLimit.storage==="memory"?{async get(n){return $r.get(n)},async set(n,r,i){$r.set(n,r)}}:Yn(e,e.rateLimit.modelName)}async function Mr(e,t){if(!t.rateLimit.enabled)return;let n=t.baseURL,r=e.url.replace(n,"").split("?")[0],i=t.rateLimit.window,o=t.rateLimit.max,d=Ve(e,t.options)+r,s=ei().find(m=>m.pathMatcher(r));s&&(i=s.window,o=s.max);for(let m of t.options.plugins||[])if(m.rateLimit){let l=m.rateLimit.find(f=>f.pathMatcher(r));if(l){i=l.window,o=l.max;break}}if(t.rateLimit.customRules){let m=Object.keys(t.rateLimit.customRules).find(l=>l.includes("*")?we(l)(r):l===r);if(m){let l=t.rateLimit.customRules[m],f=typeof l=="function"?await l(e):l;f&&(i=f.window,o=f.max)}}let a=Xn(t),c=await a.get(d),p=Date.now();if(!c)await a.set(d,{key:d,count:1,lastRequest:p});else{let m=p-c.lastRequest;if(Qn(o,i,c)){let l=Zn(c.lastRequest,i);return Jn(l)}else m>i*1e3?await a.set(d,{...c,count:1,lastRequest:p},!0):await a.set(d,{...c,count:c.count+1,lastRequest:p},!0)}}function ei(){return[{pathMatcher(t){return t.startsWith("/sign-in")||t.startsWith("/sign-up")||t.startsWith("/change-password")||t.startsWith("/change-email")},window:10,max:3}]}var st=require("better-call");function ut(e,t){let n=t.plugins?.reduce((u,s)=>({...u,...s.endpoints}),{}),r=t.plugins?.map(u=>u.middlewares?.map(s=>{let a=async c=>s.middleware({...c,context:{...e,...c.context}});return a.path=s.path,a.options=s.middleware.options,a.headers=s.middleware.headers,{path:s.path,middleware:a}})).filter(u=>u!==void 0).flat()||[],o={...{signInSocial:Ar,callbackOAuth:kr,getSession:ot(),signOut:Er,signUpEmail:jr(),signInEmail:Rr,forgetPassword:vr,resetPassword:xr,verifyEmail:br,sendVerificationEmail:wr,changeEmail:Cr,changePassword:Pr,setPassword:Lr,updateUser:Ir(),deleteUser:Dr,forgetPasswordCallback:Or,listSessions:pr(),revokeSession:fr,revokeSessions:mr,revokeOtherSessions:gr,linkSocialAccount:qr,listUserAccounts:Fr,deleteUserCallback:ct,unlinkAccount:Vr},...n,ok:Br,error:Nr},d={};for(let[u,s]of Object.entries(o))d[u]=async(a={})=>{s.headers=new Headers;let c={setHeader(h,y){s.headers.set(h,y)},setCookie(h,y,_){(0,P.setCookie)(s.headers,h,y,_)},getCookie(h,y){let k=a.headers?.get("cookie");return(0,P.getCookie)(k||"",h,y)},getSignedCookie(h,y,_){let k=a.headers;return k?(0,P.getSignedCookie)(k,y,h,_):null},async setSignedCookie(h,y,_,k){await(0,P.setSignedCookie)(s.headers,h,y,_,k)},redirect(h){return s.headers.set("Location",h),new P.APIError("FOUND")},responseHeader:s.headers},p=await e,m=null,l={...c,...a,path:s.path,context:{...p,...a.context,session:null,setNewSession:function(h){this.newSession=h,m=h}}},f=t.plugins||[],g=f.map(h=>{if(h.hooks?.before)return h.hooks.before}).filter(h=>h!==void 0).flat(),w=f.map(h=>{if(h.hooks?.after)return h.hooks.after}).filter(h=>h!==void 0).flat();t.hooks?.before&&g.push({matcher:()=>!0,handler:t.hooks.before}),t.hooks?.after&&w.push({matcher:()=>!0,handler:t.hooks.after});for(let h of g){if(!h.matcher(l))continue;let y=await h.handler(l);if(y&&"context"in y){l={...l,...y.context};continue}if(y)return y}let A;try{A=await s(l),m&&(l.context.newSession=m)}catch(h){if(m&&(l.context.newSession=m),h instanceof P.APIError){if(!w?.length)throw h.headers=s.headers,h;l.context.returned=h,l.context.returned.headers=s.headers;for(let y of w||[])if(y.matcher(l))try{let k=await y.handler(l);k&&"response"in k&&(l.context.returned=k.response)}catch(k){if(k instanceof P.APIError){l.context.returned=k;continue}throw k}if(l.context.returned instanceof P.APIError)throw l.context.returned.headers=s.headers,l.context.returned;return l.context.returned}throw h}l.context.returned=A,l.responseHeader=s.headers;for(let h of w)if(h.matcher(l))try{let _=await h.handler(l);if(_)if("responseHeader"in _){let k=_.responseHeader;l.responseHeader=k}else l.context.returned=_}catch(_){if(_ instanceof P.APIError){l.context.returned=_;continue}throw _}let R=l.context.returned;if(R instanceof Response&&s.headers.forEach((h,y)=>{y==="set-cookie"?R.headers.append(y,h):R.headers.set(y,h)}),R instanceof P.APIError)throw R.headers=s.headers,R;return R},d[u].path=s.path,d[u].method=s.method,d[u].options=s.options,d[u].headers=s.headers;return{api:d,middlewares:r}}var zr=(e,t)=>{let{api:n,middlewares:r}=ut(e,t),i=new URL(e.baseURL).pathname;return(0,P.createRouter)(n,{extraContext:e,basePath:i,routerMiddleware:[{path:"/**",middleware:At},...r],async onRequest(o){for(let d of e.options.plugins||[])if(d.onRequest){let u=await d.onRequest(o,e);if(u&&"response"in u)return u.response}return Mr(o,e)},async onResponse(o){for(let d of e.options.plugins||[])if(d.onResponse){let u=await d.onResponse(o,e);if(u)return u.response}return o},onError(o){if(o instanceof P.APIError&&o.status==="FOUND")return;if(t.onAPIError?.throw)throw o;if(t.onAPIError?.onError){t.onAPIError.onError(o,e);return}let d=t.logger?.level,u=d==="error"||d==="warn"||d==="debug"?N:void 0;if(t.logger?.disabled!==!0){if(o&&typeof o=="object"&&"message"in o&&typeof o.message=="string"&&(o.message.includes("no column")||o.message.includes("column")||o.message.includes("relation")||o.message.includes("table")||o.message.includes("does not exist"))){e.logger?.error(o.message);return}o instanceof P.APIError?(o.status==="INTERNAL_SERVER_ERROR"&&e.logger.error(o.status,o),u?.error(o.message)):e.logger?.error(o&&typeof o=="object"&&"name"in o?o.name:"",o)}}})};var Zr=require("defu");function Hr(e,t){let n=t.hooks;async function r(d,u,s){let a=d;for(let m of n||[]){let l=m[u]?.create?.before;if(l){let f=await l(d);if(f===!1)return null;typeof f=="object"&&"data"in f&&(a=f.data)}}let c=s?await s.fn(a):null,p=!s||s.executeMainFn?await e.create({model:u,data:a}):c;for(let m of n||[]){let l=m[u]?.create?.after;l&&await l(p)}return p}async function i(d,u,s,a){let c=d;for(let l of n||[]){let f=l[s]?.update?.before;if(f){let g=await f(d);if(g===!1)return null;c=typeof g=="object"?g.data:g}}let p=a?await a.fn(c):null,m=!a||a.executeMainFn?await e.update({model:s,update:c,where:u}):p;for(let l of n||[]){let f=l[s]?.update?.after;f&&await f(m)}return m}async function o(d,u,s,a){let c=d;for(let l of n||[]){let f=l[s]?.update?.before;if(f){let g=await f(d);if(g===!1)return null;c=typeof g=="object"?g.data:g}}let p=a?await a.fn(c):null,m=!a||a.executeMainFn?await e.updateMany({model:s,update:c,where:u}):p;for(let l of n||[]){let f=l[s]?.update?.after;f&&await f(m)}return m}return{createWithHooks:r,updateWithHooks:i,updateManyWithHooks:o}}var lt=(e,t)=>{let n=t.options,r=n.secondaryStorage,i=n.session?.expiresIn||60*60*24*7,{createWithHooks:o,updateWithHooks:d,updateManyWithHooks:u}=Hr(e,t);return{createOAuthUser:async(s,a)=>{let c=await o({createdAt:new Date,updatedAt:new Date,...s},"user"),p=await o({...a,userId:c.id||s.id,createdAt:new Date,updatedAt:new Date},"account");return{user:c,account:p}},createUser:async s=>await o({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...s,email:s.email.toLowerCase()},"user"),createAccount:async s=>await o({createdAt:new Date,updatedAt:new Date,...s},"account"),listSessions:async s=>{if(r){let c=await r.get(`active-sessions-${s}`);if(!c)return[];let p=me(c)||[],m=Date.now(),l=p.filter(g=>g.expiresAt>m),f=[];for(let g of l){let w=await r.get(g.token);if(w){let A=JSON.parse(w),R=Fe(t.options,{...A.session,expiresAt:new Date(A.session.expiresAt)});f.push(R)}}return f}return await e.findMany({model:"session",where:[{field:"userId",value:s}]})},listUsers:async(s,a,c,p)=>await e.findMany({model:"user",limit:s,offset:a,sortBy:c,where:p}),deleteUser:async s=>{await e.deleteMany({model:"session",where:[{field:"userId",value:s}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:s}]}),await e.delete({model:"user",where:[{field:"id",value:s}]})},createSession:async(s,a,c,p)=>{let m=a instanceof Request?a.headers:a,{id:l,...f}=p||{},g={ipAddress:a&&Ve(a,t.options)||"",userAgent:m?.get("user-agent")||"",...f,expiresAt:c?M(60*60*24,"sec"):M(i,"sec"),userId:s,token:H(32),createdAt:new Date,updatedAt:new Date};return await o(g,"session",r?{fn:async A=>{let R=await r.get(`active-sessions-${s}`),h=[],y=Date.now();return R&&(h=me(R)||[],h=h.filter(_=>_.expiresAt>y)),h.push({token:g.token,expiresAt:y+i*1e3}),await r.set(`active-sessions-${s}`,JSON.stringify(h),i),A},executeMainFn:n.session?.storeSessionInDatabase}:void 0)},findSession:async s=>{if(r){let l=await r.get(s);if(l){let f=JSON.parse(l),g=Fe(t.options,{...f.session,expiresAt:new Date(f.session.expiresAt),createdAt:new Date(f.session.createdAt),updatedAt:new Date(f.session.updatedAt)}),w=dt(t.options,{...f.user,createdAt:new Date(f.user.createdAt),updatedAt:new Date(f.user.updatedAt)});return{session:g,user:w}}}let a=await e.findOne({model:"session",where:[{value:s,field:"token"}]});if(!a)return null;let c=await e.findOne({model:"user",where:[{value:a.userId,field:"id"}]});if(!c)return null;let p=Fe(t.options,a),m=dt(t.options,c);return r&&await r?.set(s,JSON.stringify({session:p,user:m}),p.expiresAt?Math.floor(((p.expiresAt instanceof Date?p.expiresAt.getTime():new Date(p.expiresAt).getTime())-Date.now())/1e3):i),{session:p,user:m}},findSessions:async s=>{if(r){let m=[];for(let l of s){let f=await r.get(l);if(f){let g=JSON.parse(f),w={session:{...g.session,expiresAt:new Date(g.session.expiresAt)},user:{...g.user,createdAt:new Date(g.user.createdAt),updatedAt:new Date(g.user.updatedAt)}};m.push(w)}}return m}let a=await e.findMany({model:"session",where:[{field:"token",value:s,operator:"in"}]}),c=a.map(m=>m.userId);if(!c.length)return[];let p=await e.findMany({model:"user",where:[{field:"id",value:c,operator:"in"}]});return a.map(m=>{let l=p.find(f=>f.id===m.userId);return l?{session:m,user:l}:null})},updateSession:async(s,a)=>await d(a,[{field:"token",value:s}],"session",r?{async fn(p){let m=await r.get(s),l=null;return m?(l={...JSON.parse(m).session,...p},l):null},executeMainFn:n.session?.storeSessionInDatabase}:void 0),deleteSession:async s=>{if(r){await r.delete(s),n.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:s}]});return}await e.delete({model:"session",where:[{field:"token",value:s}]})},deleteAccounts:async s=>{await e.deleteMany({model:"account",where:[{field:"userId",value:s}]})},deleteAccount:async(s,a)=>{await e.delete({model:"account",where:[{field:"providerId",value:s},{field:"userId",value:a}]})},deleteSessions:async s=>{if(r){if(typeof s=="string"){let a=await r.get(`active-sessions-${s}`),c=a?me(a):[];if(!c)return;for(let p of c)await r.delete(p.token)}else for(let a of s)await r.get(a)&&await r.delete(a);n.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]})},findOAuthUser:async(s,a,c)=>{let p=await e.findOne({model:"account",where:[{value:a,field:"accountId"},{value:c,field:"providerId"}]});if(p){let m=await e.findOne({model:"user",where:[{value:p.userId,field:"id"}]});return m?{user:m,accounts:[p]}:null}else{let m=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]});if(m){let l=await e.findMany({model:"account",where:[{value:m.id,field:"userId"}]});return{user:m,accounts:l||[]}}else return null}},findUserByEmail:async(s,a)=>{let c=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]});if(!c)return null;if(a?.includeAccounts){let p=await e.findMany({model:"account",where:[{value:c.id,field:"userId"}]});return{user:c,accounts:p}}return{user:c,accounts:[]}},findUserById:async s=>await e.findOne({model:"user",where:[{field:"id",value:s}]}),linkAccount:async s=>await o({...s,createdAt:new Date,updatedAt:new Date},"account"),updateUser:async(s,a)=>await d(a,[{field:"id",value:s}],"user"),updateUserByEmail:async(s,a)=>await d(a,[{field:"email",value:s}],"user"),updatePassword:async(s,a)=>{await u({password:a},[{field:"userId",value:s},{field:"providerId",value:"credential"}],"account")},findAccounts:async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),findAccount:async s=>await e.findOne({model:"account",where:[{field:"accountId",value:s}]}),findAccountByUserId:async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),updateAccount:async(s,a)=>await d(a,[{field:"id",value:s}],"account"),createVerificationValue:async s=>await o({createdAt:new Date,updatedAt:new Date,...s},"verification"),findVerificationValue:async s=>(await e.findMany({model:"verification",where:[{field:"identifier",value:s}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],deleteVerificationValue:async s=>{await e.delete({model:"verification",where:[{field:"id",value:s}]})},deleteVerificationByIdentifier:async s=>{await e.delete({model:"verification",where:[{field:"identifier",value:s}]})},updateVerificationValue:async(s,a)=>await d(a,[{field:"id",value:s}],"verification")}};var X=e=>{let t=e.plugins?.reduce((s,a)=>{let c=a.schema;if(!c)return s;for(let[p,m]of Object.entries(c))s[p]={fields:{...s[p]?.fields,...m.fields},modelName:m.modelName||p};return s},{}),n=e.rateLimit?.storage==="database",r={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:i,session:o,account:d,...u}=t||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...i?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...o?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...d?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...u,...n?r:{}}};var ti=require("zod");var Oe=require("kysely"),ee=require("kysely");function Wr(e){if(!e)return null;if("dialect"in e)return Wr(e.dialect);if("createDriver"in e){if(e instanceof ee.SqliteDialect)return"sqlite";if(e instanceof ee.MysqlDialect)return"mysql";if(e instanceof ee.PostgresDialect)return"postgres";if(e instanceof Oe.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var pt=async e=>{let t=e.database;if(!t)return{kysely:null,databaseType:null};if("db"in t)return{kysely:t.db,databaseType:t.type};if("dialect"in t)return{kysely:new Oe.Kysely({dialect:t.dialect}),databaseType:t.type};let n,r=Wr(t);return"createDriver"in t&&(n=t),"aggregate"in t&&(n=new ee.SqliteDialect({database:t})),"getConnection"in t&&(n=new ee.MysqlDialect(t)),"connect"in t&&(n=new ee.PostgresDialect({pool:t})),{kysely:n?new Oe.Kysely({dialect:n}):null,databaseType:r}};function $e(e,t,n){return n==="update"?e:e==null&&t.defaultValue?typeof t.defaultValue=="function"?t.defaultValue():t.defaultValue:e}var ri=(e,t,n)=>{let r=X(t);function i(a,c){if(c==="id")return c;let p=r[a].fields[c];return p||console.log("Field not found",a,c),p.fieldName||c}function o(a,c,p){let{type:m="sqlite"}=n||{},l=r[c].fields[p];return l.type==="boolean"&&m==="sqlite"&&a!==null&&a!==void 0?a?1:0:l.type==="date"&&a&&a instanceof Date&&m==="sqlite"?a.toISOString():a}function d(a,c,p){let{type:m="sqlite"}=n||{},l=r[c].fields[p];return l.type==="boolean"&&m==="sqlite"&&a!==null?a===1:l.type==="date"&&a?new Date(a):a}function u(a){return r[a].modelName}let s=t?.advanced?.generateId===!1;return{transformInput(a,c,p){let m=s||p==="update"?{}:{id:t.advanced?.generateId?t.advanced.generateId({model:c}):a.id||H()},l=r[c].fields;for(let f in l){let g=a[f];m[l[f].fieldName||f]=$e(o(g,c,f),l[f],p)}return m},transformOutput(a,c,p=[]){if(!a)return null;let m=a.id?p.length===0||p.includes("id")?{id:a.id}:{}:{},l=r[c].fields;for(let f in l){if(p.length&&!p.includes(f))continue;let g=l[f];g&&(m[f]=d(a[g.fieldName||f],c,f))}return m},convertWhereClause(a,c){if(!c)return{and:null,or:null};let p={and:[],or:[]};return c.forEach(m=>{let{field:l,value:f,operator:g="=",connector:w="AND"}=m,A=i(a,l),R=h=>g.toLowerCase()==="in"?h(A,"in",Array.isArray(f)?f:[f]):g==="contains"?h(A,"like",`%${f}%`):g==="starts_with"?h(A,"like",`${f}%`):g==="ends_with"?h(A,"like",`%${f}`):g==="eq"?h(A,"=",f):g==="ne"?h(A,"<>",f):g==="gt"?h(A,">",f):g==="gte"?h(A,">=",f):g==="lt"?h(A,"<",f):g==="lte"?h(A,"<=",f):h(A,g,f);w==="OR"?p.or.push(R):p.and.push(R)}),{and:p.and.length?p.and:null,or:p.or.length?p.or:null}},async withReturning(a,c,p,m){let l;if(n?.type!=="mysql")l=await c.returningAll().executeTakeFirst();else{await c.execute();let f=a.id?"id":m[0].field?m[0].field:"id",g=a[f]||m[0].value;l=await e.selectFrom(u(p)).selectAll().where(i(p,f),"=",g).executeTakeFirst()}return l},getModelName:u,getField:i}},Gr=(e,t)=>n=>{let{transformInput:r,withReturning:i,transformOutput:o,convertWhereClause:d,getModelName:u,getField:s}=ri(e,n,t);return{id:"kysely",async create(a){let{model:c,data:p,select:m}=a,l=r(p,c,"create"),f=e.insertInto(u(c)).values(l);return o(await i(l,f,c,[]),c,m)},async findOne(a){let{model:c,where:p,select:m}=a,{and:l,or:f}=d(c,p),g=e.selectFrom(u(c)).selectAll();l&&(g=g.where(A=>A.and(l.map(R=>R(A))))),f&&(g=g.where(A=>A.or(f.map(R=>R(A)))));let w=await g.executeTakeFirst();return w?o(w,c,m):null},async findMany(a){let{model:c,where:p,limit:m,offset:l,sortBy:f}=a,{and:g,or:w}=d(c,p),A=e.selectFrom(u(c));g&&(A=A.where(h=>h.and(g.map(y=>y(h))))),w&&(A=A.where(h=>h.or(w.map(y=>y(h))))),A=A.limit(m||100),l&&(A=A.offset(l)),f&&(A=A.orderBy(s(c,f.field),f.direction));let R=await A.selectAll().execute();return R?R.map(h=>o(h,c)):[]},async update(a){let{model:c,where:p,update:m}=a,{and:l,or:f}=d(c,p),g=r(m,c,"update"),w=e.updateTable(u(c)).set(g);return l&&(w=w.where(R=>R.and(l.map(h=>h(R))))),f&&(w=w.where(R=>R.or(f.map(h=>h(R))))),await o(await i(g,w,c,p),c)},async updateMany(a){let{model:c,where:p,update:m}=a,{and:l,or:f}=d(c,p),g=r(m,c,"update"),w=e.updateTable(u(c)).set(g);return l&&(w=w.where(R=>R.and(l.map(h=>h(R))))),f&&(w=w.where(R=>R.or(f.map(h=>h(R))))),(await w.execute()).length},async delete(a){let{model:c,where:p}=a,{and:m,or:l}=d(c,p),f=e.deleteFrom(u(c));m&&(f=f.where(g=>g.and(m.map(w=>w(g))))),l&&(f=f.where(g=>g.or(l.map(w=>w(g))))),await f.execute()},async deleteMany(a){let{model:c,where:p}=a,{and:m,or:l}=d(c,p),f=e.deleteFrom(u(c));return m&&(f=f.where(g=>g.and(m.map(w=>w(g))))),l&&(f=f.where(g=>g.or(l.map(w=>w(g))))),(await f.execute()).length},options:t}};var ni=e=>{let t=X(e);function n(r,i){return i==="id"?i:t[r].fields[i].fieldName||i}return{transformInput(r,i,o){let d=o==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:i}):r.id||H()},u=t[i].fields;for(let s in u){let a=r[s];a===void 0&&!u[s].defaultValue||(d[u[s].fieldName||s]=$e(a,u[s],o))}return d},transformOutput(r,i,o=[]){if(!r)return null;let d=r.id||r._id?o.length===0||o.includes("id")?{id:r.id}:{}:{},u=t[i].fields;for(let s in u){if(o.length&&!o.includes(s))continue;let a=u[s];a&&(d[s]=r[a.fieldName||s])}return d},convertWhereClause(r,i,o){return i.filter(d=>r.every(u=>{let{field:s,value:a,operator:c}=u,p=n(o,s);if(c==="in"){if(!Array.isArray(a))throw new Error("Value must be an array");return a.includes(d[p])}else return c==="contains"?d[p].includes(a):c==="starts_with"?d[p].startsWith(a):c==="ends_with"?d[p].endsWith(a):d[p]===a}))},getField:n}},Kr=e=>t=>{let{transformInput:n,transformOutput:r,convertWhereClause:i,getField:o}=ni(t);return{id:"memory",create:async({model:d,data:u})=>{let s=n(u,d,"create");return e[d].push(s),r(s,d)},findOne:async({model:d,where:u,select:s})=>{let a=e[d],p=i(u,a,d)[0]||null;return r(p,d,s)},findMany:async({model:d,where:u,sortBy:s,limit:a,offset:c})=>{let p=e[d];return u&&(p=i(u,p,d)),s&&(p=p.sort((m,l)=>{let f=o(d,s.field);return s.direction==="asc"?m[f]>l[f]?1:-1:m[f]<l[f]?1:-1})),c!==void 0&&(p=p.slice(c)),a!==void 0&&(p=p.slice(0,a)),p.map(m=>r(m,d))},update:async({model:d,where:u,update:s})=>{let a=e[d],c=i(u,a,d);return c.forEach(p=>{Object.assign(p,n(s,d,"update"))}),r(c[0],d)},delete:async({model:d,where:u})=>{let s=e[d],a=i(u,s,d);e[d]=s.filter(c=>!a.includes(c))},deleteMany:async({model:d,where:u})=>{let s=e[d],a=i(u,s,d),c=0;return e[d]=s.filter(p=>a.includes(p)?(c++,!1):!a.includes(p)),c},updateMany(d){let{model:u,where:s,update:a}=d,c=e[u],p=i(s,c,u);return p.forEach(m=>{Object.assign(m,a)}),p[0]||null}}};async function Qr(e){if(!e.database){let r=X(e),i=Object.keys(r).reduce((o,d)=>(o[d]=[],o),{});return N.warn("No database configuration provided. Using memory adapter in development"),Kr(i)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:t,databaseType:n}=await pt(e);if(!t)throw new B("Failed to initialize database adapter");return Gr(t,{type:n||"sqlite"})(e)}var ft="better-auth-secret-123456789";var mt=require("better-call");async function Jr(e,t){let r=(await t.context.internalAdapter.findAccounts(e))?.find(d=>d.providerId==="credential"),i=r?.password;if(!r||!i||!t.body.password)throw new mt.APIError("BAD_REQUEST",{message:"No password credential found"});if(!await t.context.password.verify({hash:i,password:t.body.password}))throw new mt.APIError("BAD_REQUEST",{message:"Invalid password"});return!0}var Yr=async e=>{let t=await Qr(e),n=e.plugins||[],r=oi(e),i=Ue(e.logger),o=Re(e.baseURL,e.basePath),d=e.secret||j.BETTER_AUTH_SECRET||j.AUTH_SECRET||ft;d===ft&&Ae&&i.error("You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config."),e={...e,secret:d,baseURL:o?new URL(o).origin:"",basePath:e.basePath||"/api/auth",plugins:n.concat(r),emailAndPassword:{...e.emailAndPassword,enabled:e.emailAndPassword?.enabled??!1,autoSignIn:e.emailAndPassword?.autoSignIn??!0}};let u=Je(e),s=X(e),a=Object.keys(e.socialProviders||{}).map(l=>{let f=e.socialProviders?.[l];return f.enabled===!1?null:(f.clientId||i.warn(`Social provider ${l} is missing clientId or clientSecret`),nt[l](f))}).filter(l=>l!==null),c=({model:l,size:f})=>typeof e?.advanced?.generateId=="function"?e.advanced.generateId({model:l,size:f}):H(f),p={appName:e.appName||"Better Auth",socialProviders:a,options:e,tables:s,trustedOrigins:si(e),baseURL:o||"",sessionConfig:{updateAge:e.session?.updateAge!==void 0?e.session.updateAge:24*60*60,expiresIn:e.session?.expiresIn||60*60*24*7,freshAge:e.session?.freshAge===void 0?60*60*24:e.session.freshAge},secret:d,rateLimit:{...e.rateLimit,enabled:e.rateLimit?.enabled??Ae,window:e.rateLimit?.window||10,max:e.rateLimit?.max||100,storage:e.rateLimit?.storage||(e.secondaryStorage?"secondary-storage":"memory")},authCookies:u,logger:i,generateId:c,session:null,secondaryStorage:e.secondaryStorage,password:{hash:e.emailAndPassword?.password?.hash||jt,verify:e.emailAndPassword?.password?.verify||Ft,config:{minPasswordLength:e.emailAndPassword?.minPasswordLength||8,maxPasswordLength:e.emailAndPassword?.maxPasswordLength||128},checkPassword:Jr},setNewSession(l){this.newSession=l},newSession:null,adapter:t,internalAdapter:lt(t,{options:e,hooks:e.databaseHooks?[e.databaseHooks]:[],generateId:c}),createAuthCookie:Le(e)},{context:m}=ii(p);return m};function ii(e){let t=e.options,n=t.plugins||[],r=e,i=[];for(let o of n)if(o.init){let d=o.init(e);typeof d=="object"&&(d.options&&(d.options.databaseHooks&&i.push(d.options.databaseHooks),t=(0,Zr.defu)(t,d.options)),d.context&&(r={...r,...d.context}))}return i.push(t.databaseHooks),r.internalAdapter=lt(e.adapter,{options:t,hooks:i.filter(o=>o!==void 0),generateId:e.generateId}),r.options=t,{context:r}}function oi(e){let t=[];return e.advanced?.crossSubDomainCookies?.enabled,t}function si(e){let t=Re(e.baseURL,e.basePath);if(!t)return[];let n=[new URL(t).origin];e.trustedOrigins&&n.push(...e.trustedOrigins);let r=j.BETTER_AUTH_TRUSTED_ORIGINS;return r&&n.push(...r.split(",")),n}var ai=e=>{let t=Yr(e),{api:n}=ut(t,e),r=e.plugins?.reduce((i,o)=>o.$ERROR_CODES?{...i,...o.$ERROR_CODES}:i,{});return{handler:async i=>{let o=await t,d=o.options.basePath||"/api/auth",u=new URL(i.url);if(!o.options.baseURL){let a=Re(void 0,d)||`${u.origin}${d}`;o.options.baseURL=a,o.baseURL=a}o.trustedOrigins=[...e.trustedOrigins||[],o.baseURL,u.origin];let{handler:s}=zr(o,e);return s(i)},api:n,options:e,$context:t,$Infer:{},$ERROR_CODES:{...r,...b}}};0&&(module.exports={BetterAuthError,HIDE_METADATA,MissingDependencyError,betterAuth,capitalizeFirstLetter,createCookieGetter,createLogger,deleteSessionCookie,generateId,generateState,getCookies,levels,logger,parseCookies,parseSetCookieHeader,parseState,setCookieCache,setSessionCookie,shouldPublishLog});
