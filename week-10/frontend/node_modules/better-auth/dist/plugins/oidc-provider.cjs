"use strict";var Oe=Object.defineProperty;var Gt=Object.getOwnPropertyDescriptor;var Zt=Object.getOwnPropertyNames;var Wt=Object.prototype.hasOwnProperty;var Qt=(e,t)=>{for(var r in t)Oe(e,r,{get:t[r],enumerable:!0})},Jt=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Zt(t))!Wt.call(e,n)&&n!==r&&Oe(e,n,{get:()=>t[n],enumerable:!(o=Gt(t,n))||o.enumerable});return e};var Kt=e=>Jt(Oe({},"__esModule",{value:!0}),e);var ho={};Qt(ho,{oidcProvider:()=>go});module.exports=Kt(ho);var Mt=require("jose"),D=require("zod");var le=require("better-call");var Pe=require("better-call");var te=require("better-call"),Me=(0,te.createMiddleware)(async()=>({})),ne=(0,te.createMiddlewareCreator)({use:[Me,(0,te.createMiddleware)(async()=>({}))]}),h=(0,te.createEndpointCreator)({use:[Me]});function Se(e){return e==="-"||e==="^"||e==="$"||e==="+"||e==="."||e==="("||e===")"||e==="|"||e==="["||e==="]"||e==="{"||e==="}"||e==="*"||e==="?"||e==="\\"?`\\${e}`:e}function Yt(e){let t="";for(let r=0;r<e.length;r++)t+=Se(e[r]);return t}function ze(e,t=!0){if(Array.isArray(e))return`(?:${e.map(l=>`^${ze(l,t)}$`).join("|")})`;let r="",o="",n=".";t===!0?(r="/",o="[/\\\\]",n="[^/\\\\]"):t&&(r=t,o=Yt(r),o.length>1?(o=`(?:${o})`,n=`((?!${o}).)`):n=`[^${o}]`);let i=t?`${o}+?`:"",s=t?`${o}*?`:"",d=t?e.split(r):[e],a="";for(let c=0;c<d.length;c++){let l=d[c],p=d[c+1],u="";if(!(!l&&c>0)){if(t&&(c===d.length-1?u=s:p!=="**"?u=i:u=""),t&&l==="**"){u&&(a+=c===0?"":u,a+=`(?:${n}*?${u})*?`);continue}for(let b=0;b<l.length;b++){let m=l[b];m==="\\"?b<l.length-1&&(a+=Se(l[b+1]),b++):m==="?"?a+=n:m==="*"?a+=`${n}*?`:a+=Se(m)}a+=u}}return a}function Xt(e,t){if(typeof t!="string")throw new TypeError(`Sample must be a string, but ${typeof t} given`);return e.test(t)}function ye(e,t){if(typeof e!="string"&&!Array.isArray(e))throw new TypeError(`The first argument must be a single pattern string or an array of patterns, but ${typeof e} given`);if((typeof t=="string"||typeof t=="boolean")&&(t={separator:t}),arguments.length===2&&!(typeof t>"u"||typeof t=="object"&&t!==null&&!Array.isArray(t)))throw new TypeError(`The second argument must be an options object or a string/boolean separator, but ${typeof t} given`);if(t=t||{},t.separator==="\\")throw new Error("\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead");let r=ze(e,t.separator),o=new RegExp(`^${r}$`,t.flags),n=Xt.bind(null,o);return n.options=t,n.pattern=e,n.regexp=o,n}var be=Object.create(null),fe=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?be:globalThis),He=new Proxy(be,{get(e,t){return fe()[t]??be[t]},has(e,t){let r=fe();return t in r||t in be},set(e,t,r){let o=fe(!0);return o[t]=r,!0},deleteProperty(e,t){if(!t)return!1;let r=fe(!0);return delete r[t],!0},ownKeys(){let e=fe(!0);return Object.keys(e)}});function er(e){return e?e!=="false":!1}var Ie=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var Le=Ie==="dev"||Ie==="development",tr=Ie==="test"||er(He.TEST);var J=class extends Error{constructor(t,r){super(t),this.name="BetterAuthError",this.message=t,this.cause=r,this.stack=""}};function Ae(e){try{return new URL(e).origin}catch{return null}}function Fe(e){try{return new URL(e).protocol}catch{return null}}function xe(e){return e.includes("://")?new URL(e).host:e}var rr=ne(async e=>{if(e.request?.method!=="POST")return;let{body:t,query:r,context:o}=e,n=e.headers?.get("origin")||e.headers?.get("referer")||"",i=t?.callbackURL||r?.callbackURL,s=t?.redirectTo,d=r?.currentURL,a=t?.errorCallbackURL,c=t?.newUserCallbackURL,l=o.trustedOrigins,p=e.headers?.has("cookie"),u=(m,f)=>{if(m.startsWith("/"))return!1;if(f.includes("*"))return ye(f)(xe(m));let z=Fe(m);return z==="http:"||z==="https:"||!z?f===Ae(m):m.startsWith(f)},b=(m,f)=>{if(!m)return;if(!l.some(N=>u(m,N)||m?.startsWith("/")&&f!=="origin"&&!m.includes(":")))throw e.context.logger.error(`Invalid ${f}: ${m}`),e.context.logger.info(`If it's a valid URL, please add ${m} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${l}`),new Pe.APIError("FORBIDDEN",{message:`Invalid ${f}`})};p&&!e.context.options.advanced?.disableCSRFCheck&&b(n,"origin"),i&&b(i,"callbackURL"),s&&b(s,"redirectURL"),d&&b(d,"currentURL"),a&&b(a,"errorCallbackURL"),c&&b(c,"newUserCallbackURL")}),ie=e=>ne(async t=>{let{context:r}=t,o=e(t),n=r.trustedOrigins,i=(d,a)=>d.startsWith("/")?!1:a.includes("*")?ye(a)(xe(d)):d.startsWith(a);o&&((d,a)=>{if(!d)return;if(!n.some(l=>i(d,l)||d?.startsWith("/")&&a!=="origin"&&!d.includes(":")))throw t.context.logger.error(`Invalid ${a}: ${d}`),t.context.logger.info(`If it's a valid URL, please add ${d} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${n}`),new Pe.APIError("FORBIDDEN",{message:`Invalid ${a}`})})(o,"callbackURL")});var L=require("better-call"),T=require("zod");var K=(e,t="ms")=>new Date(Date.now()+(t==="sec"?e*1e3:e));var Ze=require("@better-auth/utils/base64");var We=require("@better-auth/utils/hmac");function Ge(e){let t=new Map;return e.split(", ").forEach(o=>{let n=o.split(";").map(p=>p.trim()),[i,...s]=n,[d,...a]=i.split("="),c=a.join("=");if(!d||c===void 0)return;let l={value:c};s.forEach(p=>{let[u,...b]=p.split("="),m=b.join("="),f=u.trim().toLowerCase();switch(f){case"max-age":l["max-age"]=m?parseInt(m.trim(),10):void 0;break;case"expires":l.expires=m?new Date(m.trim()):void 0;break;case"domain":l.domain=m?m.trim():void 0;break;case"path":l.path=m?m.trim():void 0;break;case"secure":l.secure=!0;break;case"httponly":l.httponly=!0;break;case"samesite":l.samesite=m?m.trim().toLowerCase():void 0;break;default:l[f]=m?m.trim():!0;break}}),t.set(d,l)}),t}async function De(e,t){if(e.context.options.session?.cookieCache?.enabled){let o=Ze.base64Url.encode(JSON.stringify({session:t,expiresAt:K(e.context.authCookies.sessionData.options.maxAge||60,"sec").getTime(),signature:await(0,We.createHMAC)("SHA-256","base64urlnopad").sign(e.context.secret,JSON.stringify(t))}),{padding:!1});if(o.length>4093)throw new J("Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data");e.setCookie(e.context.authCookies.sessionData.name,o,e.context.authCookies.sessionData.options)}}async function $(e,t,r,o){let n=e.context.authCookies.sessionToken.options,i=r?void 0:e.context.sessionConfig.expiresIn;await e.setSignedCookie(e.context.authCookies.sessionToken.name,t.session.token,e.context.secret,{...n,maxAge:i,...o}),r&&await e.setSignedCookie(e.context.authCookies.dontRememberToken.name,"true",e.context.secret,e.context.authCookies.dontRememberToken.options),await De(e,t),e.context.setNewSession(t),e.context.options.secondaryStorage&&await e.context.secondaryStorage?.set(t.session.token,JSON.stringify({user:t.user,session:t.session}),Math.floor((new Date(t.session.expiresAt).getTime()-Date.now())/1e3))}function H(e){e.setCookie(e.context.authCookies.sessionToken.name,"",{...e.context.authCookies.sessionToken.options,maxAge:0}),e.setCookie(e.context.authCookies.sessionData.name,"",{...e.context.authCookies.sessionData.options,maxAge:0}),e.setCookie(e.context.authCookies.dontRememberToken.name,"",{...e.context.authCookies.dontRememberToken.options,maxAge:0})}var or=Object.defineProperty,nr=Object.defineProperties,ir=Object.getOwnPropertyDescriptors,Qe=Object.getOwnPropertySymbols,sr=Object.prototype.hasOwnProperty,ar=Object.prototype.propertyIsEnumerable,Je=(e,t,r)=>t in e?or(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,re=(e,t)=>{for(var r in t||(t={}))sr.call(t,r)&&Je(e,r,t[r]);if(Qe)for(var r of Qe(t))ar.call(t,r)&&Je(e,r,t[r]);return e},oe=(e,t)=>nr(e,ir(t)),dr=class extends Error{constructor(e,t,r){super(t||e.toString(),{cause:r}),this.status=e,this.statusText=t,this.error=r}},cr=async(e,t)=>{var r,o,n,i,s,d;let a=t||{},c={onRequest:[t?.onRequest],onResponse:[t?.onResponse],onSuccess:[t?.onSuccess],onError:[t?.onError],onRetry:[t?.onRetry]};if(!t||!t?.plugins)return{url:e,options:a,hooks:c};for(let l of t?.plugins||[]){if(l.init){let p=await((r=l.init)==null?void 0:r.call(l,e.toString(),t));a=p.options||a,e=p.url}c.onRequest.push((o=l.hooks)==null?void 0:o.onRequest),c.onResponse.push((n=l.hooks)==null?void 0:n.onResponse),c.onSuccess.push((i=l.hooks)==null?void 0:i.onSuccess),c.onError.push((s=l.hooks)==null?void 0:s.onError),c.onRetry.push((d=l.hooks)==null?void 0:d.onRetry)}return{url:e,options:a,hooks:c}},Ke=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(){return this.options.delay}},lr=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(e){return Math.min(this.options.maxDelay,this.options.baseDelay*2**e)}};function ur(e){if(typeof e=="number")return new Ke({type:"linear",attempts:e,delay:1e3});switch(e.type){case"linear":return new Ke(e);case"exponential":return new lr(e);default:throw new Error("Invalid retry strategy")}}var pr=e=>{let t={},r=o=>typeof o=="function"?o():o;if(e?.auth){if(e.auth.type==="Bearer"){let o=r(e.auth.token);if(!o)return t;t.authorization=`Bearer ${o}`}else if(e.auth.type==="Basic"){let o=r(e.auth.username),n=r(e.auth.password);if(!o||!n)return t;t.authorization=`Basic ${btoa(`${o}:${n}`)}`}else if(e.auth.type==="Custom"){let o=r(e.auth.value);if(!o)return t;t.authorization=`${r(e.auth.prefix)} ${o}`}}return t},et=["get","post","put","patch","delete"];var fr=/^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;function mr(e){let t=e.headers.get("content-type"),r=new Set(["image/svg","application/xml","application/xhtml","application/html"]);if(!t)return"json";let o=t.split(";").shift()||"";return fr.test(o)?"json":r.has(o)||o.startsWith("text/")?"text":"blob"}function gr(e){try{return JSON.parse(e),!0}catch{return!1}}function tt(e){if(e===void 0)return!1;let t=typeof e;return t==="string"||t==="number"||t==="boolean"||t===null?!0:t!=="object"?!1:Array.isArray(e)?!0:e.buffer?!1:e.constructor&&e.constructor.name==="Object"||typeof e.toJSON=="function"}function Ye(e){try{return JSON.parse(e)}catch{return e}}function Xe(e){return typeof e=="function"}function hr(e){if(e?.customFetchImpl)return e.customFetchImpl;if(typeof globalThis<"u"&&Xe(globalThis.fetch))return globalThis.fetch;if(typeof window<"u"&&Xe(window.fetch))return window.fetch;throw new Error("No fetch implementation found")}function wr(e){let t=new Headers(e?.headers),r=pr(e);for(let[o,n]of Object.entries(r||{}))t.set(o,n);if(!t.has("content-type")){let o=yr(e?.body);o&&t.set("content-type",o)}return t}function yr(e){return tt(e)?"application/json":null}function br(e){if(!e?.body)return null;let t=new Headers(e?.headers);return tt(e.body)&&!t.has("content-type")?JSON.stringify(e.body):e.body}function Ar(e,t){var r;if(t?.method)return t.method.toUpperCase();if(e.startsWith("@")){let o=(r=e.split("@")[1])==null?void 0:r.split("/")[0];return et.includes(o)?o.toUpperCase():t?.body?"POST":"GET"}return t?.body?"POST":"GET"}function _r(e,t){let r;return!e?.signal&&e?.timeout&&(r=setTimeout(()=>t?.abort(),e?.timeout)),{abortTimeout:r,clearTimeout:()=>{r&&clearTimeout(r)}}}function Rr(e,t){let{baseURL:r,params:o,query:n}=t||{query:{},params:{},baseURL:""},i=e.startsWith("http")?e.split("/").slice(0,3).join("/"):r;if(!i)throw new TypeError(`Invalid URL ${e}. Are you passing in a relative URL but not setting the baseURL?`);if(e.startsWith("@")){let p=e.toString().split("@")[1].split("/")[0];et.includes(p)&&(e=e.replace(`@${p}/`,"/"))}i.endsWith("/")||(i+="/");let[s,d]=e.replace(i,"").split("?"),a=new URLSearchParams(d);for(let[p,u]of Object.entries(n||{}))a.set(p,String(u));if(o)if(Array.isArray(o)){let p=s.split("/").filter(u=>u.startsWith(":"));for(let[u,b]of p.entries()){let m=o[u];s=s.replace(b,m)}}else for(let[p,u]of Object.entries(o))s=s.replace(`:${p}`,String(u));s=s.split("/").map(encodeURIComponent).join("/"),s.startsWith("/")&&(s=s.slice(1));let c=a.size>0?`?${a}`.replace(/\+/g,"%20"):"";return new URL(`${s}${c}`,i)}var R=async(e,t)=>{var r,o,n,i,s,d,a,c;let{hooks:l,url:p,options:u}=await cr(e,t),b=hr(u),m=new AbortController,f=(r=u.signal)!=null?r:m.signal,z=Rr(p,u),N=br(u),Q=wr(u),I=Ar(p,u),_=oe(re({},u),{url:z,headers:Q,body:N,method:I,signal:f});for(let k of l.onRequest)if(k){let S=await k(_);S instanceof Object&&(_=S)}("pipeTo"in _&&typeof _.pipeTo=="function"||typeof((o=t?.body)==null?void 0:o.pipe)=="function")&&("duplex"in _||(_.duplex="half"));let{clearTimeout:he}=_r(u,m),A=await b(_.url,_);he();let ue={response:A,request:_};for(let k of l.onResponse)if(k){let S=await k(oe(re({},ue),{response:(n=t?.hookOptions)!=null&&n.cloneResponse?A.clone():A}));S instanceof Response?A=S:S instanceof Object&&(A=S.response)}if(A.ok){if(!(_.method!=="HEAD"))return{data:"",error:null};let S=mr(A),j={data:"",response:A,request:_};if(S==="json"||S==="text"){let q=await A.text(),Ft=await((i=_.jsonParser)!=null?i:Ye)(q);j.data=Ft}else j.data=await A[S]();_?.output&&_.output&&!_.disableValidation&&(j.data=_.output.parse(j.data));for(let q of l.onSuccess)q&&await q(oe(re({},j),{response:(s=t?.hookOptions)!=null&&s.cloneResponse?A.clone():A}));return t?.throw?j.data:{data:j.data,error:null}}let Te=(d=t?.jsonParser)!=null?d:Ye,we=await A.text(),pe=gr(we)?await Te(we):{},ve={response:A,request:_,error:oe(re({},pe),{status:A.status,statusText:A.statusText})};for(let k of l.onError)k&&await k(oe(re({},ve),{response:(a=t?.hookOptions)!=null&&a.cloneResponse?A.clone():A}));if(t?.retry){let k=ur(t.retry),S=(c=t.retryAttempt)!=null?c:0;if(await k.shouldAttemptRetry(S,A)){for(let q of l.onRetry)q&&await q(ue);let j=k.getDelay(S);return await new Promise(q=>setTimeout(q,j)),await R(e,oe(re({},t),{retryAttempt:S+1}))}}if(t?.throw)throw new dr(A.status,A.statusText,pe);return{data:null,error:oe(re({},pe),{status:A.status,statusText:A.statusText})}};var ct=require("better-call"),Y=require("jose");var rt=require("@better-auth/utils/hash"),ot=require("@better-auth/utils/base64");async function nt(e){let t=await(0,rt.createHash)("SHA-256").digest(e);return ot.base64Url.encode(new Uint8Array(t),{padding:!1})}function _e(e){return{tokenType:e.token_type,accessToken:e.access_token,refreshToken:e.refresh_token,accessTokenExpiresAt:e.expires_in?K(e.expires_in,"sec"):void 0,scopes:e?.scope?typeof e.scope=="string"?e.scope.split(" "):e.scope:[],idToken:e.id_token}}async function E({id:e,options:t,authorizationEndpoint:r,state:o,codeVerifier:n,scopes:i,claims:s,redirectURI:d,duration:a}){let c=new URL(r);if(c.searchParams.set("response_type","code"),c.searchParams.set("client_id",t.clientId),c.searchParams.set("state",o),c.searchParams.set("scope",i.join(" ")),c.searchParams.set("redirect_uri",t.redirectURI||d),n){let l=await nt(n);c.searchParams.set("code_challenge_method","S256"),c.searchParams.set("code_challenge",l)}if(s){let l=s.reduce((p,u)=>(p[u]=null,p),{});c.searchParams.set("claims",JSON.stringify({id_token:{email:null,email_verified:null,...l}}))}return a&&c.searchParams.set("duration",a),c}var kr=require("jose");async function U({code:e,codeVerifier:t,redirectURI:r,options:o,tokenEndpoint:n,authentication:i}){let s=new URLSearchParams,d={"content-type":"application/x-www-form-urlencoded",accept:"application/json","user-agent":"better-auth"};if(s.set("grant_type","authorization_code"),s.set("code",e),t&&s.set("code_verifier",t),s.set("redirect_uri",r),i==="basic"){let p=btoa(`${o.clientId}:${o.clientSecret}`);d.authorization=`Basic ${p}`}else s.set("client_id",o.clientId),s.set("client_secret",o.clientSecret);let{data:a,error:c}=await R(n,{method:"POST",body:s,headers:d});if(c)throw c;return _e(a)}var F=require("zod"),Ne=require("better-call");var Sr=require("@better-auth/utils/hash"),Ir=require("@noble/ciphers/chacha"),Ce=require("@noble/ciphers/utils"),Lr=require("@noble/ciphers/webcrypto");var Er=require("@better-auth/utils/hash");var it=require("jose");async function st(e,t,r=3600){return await new it.SignJWT(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+r).sign(new TextEncoder().encode(t))}var Tr=require("@noble/hashes/scrypt"),vr=require("uncrypto"),Or=require("@better-auth/utils/hex");var at=require("@better-auth/utils/random"),x=(0,at.createRandomStringGenerator)("a-z","0-9","A-Z","-_");async function Re(e,t){let r=e.body?.callbackURL||(e.query?.currentURL?Ae(e.query?.currentURL):"")||e.context.options.baseURL;if(!r)throw new Ne.APIError("BAD_REQUEST",{message:"callbackURL is required"});let o=x(128),n=x(32),i=JSON.stringify({callbackURL:r,codeVerifier:o,errorURL:e.body?.errorCallbackURL||e.query?.currentURL,newUserURL:e.body?.newUserCallbackURL,link:t,expiresAt:Date.now()+10*60*1e3}),s=new Date;s.setMinutes(s.getMinutes()+10);let d=await e.context.internalAdapter.createVerificationValue({value:i,identifier:n,expiresAt:s});if(!d)throw e.context.logger.error("Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database"),new Ne.APIError("INTERNAL_SERVER_ERROR",{message:"Unable to create verification"});return{state:d.identifier,codeVerifier:o}}async function dt(e){let t=e.query.state||e.body.state,r=await e.context.internalAdapter.findVerificationValue(t);if(!r)throw e.context.logger.error("State Mismatch. Verification not found",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);let o=F.z.object({callbackURL:F.z.string(),codeVerifier:F.z.string(),errorURL:F.z.string().optional(),newUserURL:F.z.string().optional(),expiresAt:F.z.number(),link:F.z.object({email:F.z.string(),userId:F.z.string()}).optional()}).parse(JSON.parse(r.value));if(o.errorURL||(o.errorURL=`${e.context.baseURL}/error`),o.expiresAt<Date.now())throw await e.context.internalAdapter.deleteVerificationValue(r.id),e.context.logger.error("State expired.",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);return await e.context.internalAdapter.deleteVerificationValue(r.id),o}var lt=e=>{let t="https://appleid.apple.com/auth/token";return{id:"apple",name:"Apple",createAuthorizationURL({state:r,scopes:o,redirectURI:n}){let i=o||["email","name"];return e.scope&&i.push(...e.scope),new URL(`https://appleid.apple.com/auth/authorize?client_id=${e.clientId}&response_type=code&redirect_uri=${e.redirectURI||n}&scope=${i.join(" ")}&state=${r}&response_mode=form_post`)},validateAuthorizationCode:async({code:r,codeVerifier:o,redirectURI:n})=>U({code:r,codeVerifier:o,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:t}),async verifyIdToken(r,o){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(r,o);let n=(0,Y.decodeProtectedHeader)(r),{kid:i,alg:s}=n;if(!i||!s)return!1;let d=await xr(i),{payload:a}=await(0,Y.jwtVerify)(r,d,{algorithms:[s],issuer:"https://appleid.apple.com",audience:e.appBundleIdentifier||e.clientId,maxTokenAge:"1h"});return["email_verified","is_private_email"].forEach(c=>{a[c]!==void 0&&(a[c]=!!a[c])}),o&&a.nonce!==o?!1:!!a},async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);if(!r.idToken)return null;let o=(0,Y.decodeJwt)(r.idToken);if(!o)return null;let n=o.user?`${o.user.name.firstName} ${o.user.name.lastName}`:o.email,i=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:n,emailVerified:!1,email:o.email,...i},data:o}}}},xr=async e=>{let t="https://appleid.apple.com",r="/auth/keys",{data:o}=await R(`${t}${r}`);if(!o?.keys)throw new ct.APIError("BAD_REQUEST",{message:"Keys not found"});let n=o.keys.find(i=>i.kid===e);if(!n)throw new Error(`JWK with kid ${e} not found`);return await(0,Y.importJWK)(n,n.alg)};var ut=e=>({id:"discord",name:"Discord",createAuthorizationURL({state:t,scopes:r,redirectURI:o}){let n=r||["identify","email"];return e.scope&&n.push(...e.scope),new URL(`https://discord.com/api/oauth2/authorize?scope=${n.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||o)}&state=${t}&prompt=${e.prompt||"none"}`)},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://discord.com/api/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:o}=await R("https://discord.com/api/users/@me",{headers:{authorization:`Bearer ${t.accessToken}`}});if(o)return null;if(r.avatar===null){let i=r.discriminator==="0"?Number(BigInt(r.id)>>BigInt(22))%6:parseInt(r.discriminator)%5;r.image_url=`https://cdn.discordapp.com/embed/avatars/${i}.png`}else{let i=r.avatar.startsWith("a_")?"gif":"png";r.image_url=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.${i}`}let n=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name||r.username||"",email:r.email,emailVerified:r.verified,image:r.image_url,...n},data:r}}});var pt=e=>({id:"facebook",name:"Facebook",async createAuthorizationURL({state:t,scopes:r,redirectURI:o}){let n=r||["email","public_profile"];return e.scope&&n.push(...e.scope),await E({id:"facebook",options:e,authorizationEndpoint:"https://www.facebook.com/v21.0/dialog/oauth",scopes:n,state:t,redirectURI:o})},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://graph.facebook.com/oauth/access_token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let r=["id","name","email","picture",...e?.fields||[]],{data:o,error:n}=await R("https://graph.facebook.com/me?fields="+r.join(","),{auth:{type:"Bearer",token:t.accessToken}});if(n)return null;let i=await e.mapProfileToUser?.(o);return{user:{id:o.id,name:o.name,email:o.email,image:o.picture.data.url,emailVerified:o.email_verified,...i},data:o}}});var ft=e=>{let t="https://github.com/login/oauth/access_token";return{id:"github",name:"GitHub",createAuthorizationURL({state:r,scopes:o,codeVerifier:n,redirectURI:i}){let s=o||["user:email"];return e.scope&&s.push(...e.scope),E({id:"github",options:e,authorizationEndpoint:"https://github.com/login/oauth/authorize",scopes:s,state:r,redirectURI:i})},validateAuthorizationCode:async({code:r,redirectURI:o})=>U({code:r,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:t}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:o,error:n}=await R("https://api.github.com/user",{headers:{"User-Agent":"better-auth",authorization:`Bearer ${r.accessToken}`}});if(n)return null;let i=!1,{data:s}=await R("https://api.github.com/user/emails",{headers:{authorization:`Bearer ${r.accessToken}`,"User-Agent":"better-auth"}});s&&(o.email=(s.find(a=>a.primary)??s[0])?.email,i=s.find(a=>a.email===o.email)?.verified??!1);let d=await e.mapProfileToUser?.(o);return{user:{id:o.id.toString(),name:o.name||o.login,email:o.email,image:o.avatar_url,emailVerified:i,...d},data:o}}}};var mt=require("jose");var je=["info","success","warn","error","debug"];function Pr(e,t){return je.indexOf(t)<=je.indexOf(e)}var G={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},Dr={info:G.fg.blue,success:G.fg.green,warn:G.fg.yellow,error:G.fg.red,debug:G.fg.magenta},Cr=(e,t)=>{let r=new Date().toISOString();return`${G.dim}${r}${G.reset} ${Dr[e]}${e.toUpperCase()}${G.reset} ${G.bright}[Better Auth]:${G.reset} ${t}`},Nr=e=>{let t=e?.disabled!==!0,r=e?.level??"error",o=(n,i,s=[])=>{if(!t||!Pr(r,n))return;let d=Cr(n,i);if(!e||typeof e.log!="function"){n==="error"?console.error(d,...s):n==="warn"?console.warn(d,...s):console.log(d,...s);return}e.log(n==="success"?"info":n,i,...s)};return Object.fromEntries(je.map(n=>[n,(...[i,...s])=>o(n,i,s)]))},B=Nr();var gt=e=>({id:"google",name:"Google",async createAuthorizationURL({state:t,scopes:r,codeVerifier:o,redirectURI:n}){if(!e.clientId||!e.clientSecret)throw B.error("Client Id and Client Secret is required for Google. Make sure to provide them in the options."),new J("CLIENT_ID_AND_SECRET_REQUIRED");if(!o)throw new J("codeVerifier is required for Google");let i=r||["email","profile","openid"];e.scope&&i.push(...e.scope);let s=await E({id:"google",options:e,authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",scopes:i,state:t,codeVerifier:o,redirectURI:n});return e.accessType&&s.searchParams.set("access_type",e.accessType),e.prompt&&s.searchParams.set("prompt",e.prompt),e.display&&s.searchParams.set("display",e.display),e.hd&&s.searchParams.set("hd",e.hd),s},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:o})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:"https://oauth2.googleapis.com/token"}),async verifyIdToken(t,r){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(t,r);let o=`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${t}`,{data:n}=await R(o);return n?n.aud===e.clientId&&n.iss==="https://accounts.google.com":!1},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);if(!t.idToken)return null;let r=(0,mt.decodeJwt)(t.idToken),o=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.name,email:r.email,image:r.picture,emailVerified:r.email_verified,...o},data:r}}});var ht=require("jose"),wt=e=>{let t=e.tenantId||"common",r=`https://login.microsoftonline.com/${t}/oauth2/v2.0/authorize`,o=`https://login.microsoftonline.com/${t}/oauth2/v2.0/token`;return{id:"microsoft",name:"Microsoft EntraID",createAuthorizationURL(n){let i=n.scopes||["openid","profile","email","User.Read"];return e.scope&&i.push(...e.scope),E({id:"microsoft",options:e,authorizationEndpoint:r,state:n.state,codeVerifier:n.codeVerifier,scopes:i,redirectURI:n.redirectURI})},validateAuthorizationCode({code:n,codeVerifier:i,redirectURI:s}){return U({code:n,codeVerifier:i,redirectURI:e.redirectURI||s,options:e,tokenEndpoint:o})},async getUserInfo(n){if(e.getUserInfo)return e.getUserInfo(n);if(!n.idToken)return null;let i=(0,ht.decodeJwt)(n.idToken),s=e.profilePhotoSize||48;await R(`https://graph.microsoft.com/v1.0/me/photos/${s}x${s}/$value`,{headers:{Authorization:`Bearer ${n.accessToken}`},async onResponse(a){if(!(e.disableProfilePhoto||!a.response.ok))try{let l=await a.response.clone().arrayBuffer(),p=Buffer.from(l).toString("base64");i.picture=`data:image/jpeg;base64, ${p}`}catch(c){B.error(c&&typeof c=="object"&&"name"in c?c.name:"",c)}}});let d=await e.mapProfileToUser?.(i);return{user:{id:i.sub,name:i.name,email:i.email,image:i.picture,emailVerified:!0,...d},data:i}}}};var yt=e=>({id:"spotify",name:"Spotify",createAuthorizationURL({state:t,scopes:r,codeVerifier:o,redirectURI:n}){let i=r||["user-read-email"];return e.scope&&i.push(...e.scope),E({id:"spotify",options:e,authorizationEndpoint:"https://accounts.spotify.com/authorize",scopes:i,state:t,codeVerifier:o,redirectURI:n})},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:o})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:"https://accounts.spotify.com/api/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:o}=await R("https://api.spotify.com/v1/me",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(o)return null;let n=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name,email:r.email,image:r.images[0]?.url,emailVerified:!1,...n},data:r}}});var se={isAction:!1};var bt=require("@better-auth/utils/random"),At=e=>(0,bt.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32);var _t=require("jose"),Rt=e=>({id:"twitch",name:"Twitch",createAuthorizationURL({state:t,scopes:r,redirectURI:o}){let n=r||["user:read:email","openid"];return e.scope&&n.push(...e.scope),E({id:"twitch",redirectURI:o,options:e,authorizationEndpoint:"https://id.twitch.tv/oauth2/authorize",scopes:n,state:t,claims:e.claims||["email","email_verified","preferred_username","picture"]})},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://id.twitch.tv/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let r=t.idToken;if(!r)return B.error("No idToken found in token"),null;let o=(0,_t.decodeJwt)(r),n=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:o.preferred_username,email:o.email,image:o.picture,emailVerified:!1,...n},data:o}}});var kt=e=>({id:"twitter",name:"Twitter",createAuthorizationURL(t){let r=t.scopes||["users.read","tweet.read","offline.access"];return e.scope&&r.push(...e.scope),E({id:"twitter",options:e,authorizationEndpoint:"https://x.com/i/oauth2/authorize",scopes:r,state:t.state,codeVerifier:t.codeVerifier,redirectURI:t.redirectURI})},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:o})=>U({code:t,codeVerifier:r,authentication:"basic",redirectURI:e.redirectURI||o,options:e,tokenEndpoint:"https://api.x.com/2/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:o}=await R("https://api.x.com/2/users/me?user.fields=profile_image_url",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(o)return null;let n=await e.mapProfileToUser?.(r);return{user:{id:r.data.id,name:r.data.name,email:r.data.username||null,image:r.data.profile_image_url,emailVerified:r.data.verified||!1,...n},data:r}}});var Ut=e=>{let t="https://api.dropboxapi.com/oauth2/token";return{id:"dropbox",name:"Dropbox",createAuthorizationURL:async({state:r,scopes:o,codeVerifier:n,redirectURI:i})=>{let s=o||["account_info.read"];return e.scope&&s.push(...e.scope),await E({id:"dropbox",options:e,authorizationEndpoint:"https://www.dropbox.com/oauth2/authorize",scopes:s,state:r,redirectURI:i,codeVerifier:n})},validateAuthorizationCode:async({code:r,codeVerifier:o,redirectURI:n})=>await U({code:r,codeVerifier:o,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:t}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:o,error:n}=await R("https://api.dropboxapi.com/2/users/get_current_account",{method:"POST",headers:{Authorization:`Bearer ${r.accessToken}`}});if(n)return null;let i=await e.mapProfileToUser?.(o);return{user:{id:o.account_id,name:o.name?.display_name,email:o.email,emailVerified:o.email_verified||!1,image:o.profile_photo_url,...i},data:o}}}};var Et=e=>{let t="https://www.linkedin.com/oauth/v2/authorization",r="https://www.linkedin.com/oauth/v2/accessToken";return{id:"linkedin",name:"Linkedin",createAuthorizationURL:async({state:o,scopes:n,redirectURI:i})=>{let s=n||["profile","email","openid"];return e.scope&&s.push(...e.scope),await E({id:"linkedin",options:e,authorizationEndpoint:t,scopes:s,state:o,redirectURI:i})},validateAuthorizationCode:async({code:o,redirectURI:n})=>await U({code:o,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:r}),async getUserInfo(o){let{data:n,error:i}=await R("https://api.linkedin.com/v2/userinfo",{method:"GET",headers:{Authorization:`Bearer ${o.accessToken}`}});if(i)return null;let s=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:n.name,email:n.email,emailVerified:n.email_verified||!1,image:n.picture,...s},data:n}}}};var $e=(e="")=>e.split("://").map(t=>t.replace(/\/{2,}/g,"/")).join("://"),jr=e=>{let t=e||"https://gitlab.com";return{authorizationEndpoint:$e(`${t}/oauth/authorize`),tokenEndpoint:$e(`${t}/oauth/token`),userinfoEndpoint:$e(`${t}/api/v4/user`)}},Tt=e=>{let{authorizationEndpoint:t,tokenEndpoint:r,userinfoEndpoint:o}=jr(e.issuer),n="gitlab";return{id:n,name:"Gitlab",createAuthorizationURL:async({state:s,scopes:d,codeVerifier:a,redirectURI:c})=>{let l=d||["read_user"];return e.scope&&l.push(...e.scope),await E({id:n,options:e,authorizationEndpoint:t,scopes:l,state:s,redirectURI:c,codeVerifier:a})},validateAuthorizationCode:async({code:s,redirectURI:d,codeVerifier:a})=>U({code:s,redirectURI:e.redirectURI||d,options:e,codeVerifier:a,tokenEndpoint:r}),async getUserInfo(s){if(e.getUserInfo)return e.getUserInfo(s);let{data:d,error:a}=await R(o,{headers:{authorization:`Bearer ${s.accessToken}`}});if(a||d.state!=="active"||d.locked)return null;let c=await e.mapProfileToUser?.(d);return{user:{id:d.id.toString(),name:d.name??d.username,email:d.email,image:d.avatar_url,emailVerified:!0,...c},data:d}}}};var vt=e=>({id:"reddit",name:"Reddit",createAuthorizationURL({state:t,scopes:r,redirectURI:o}){let n=r||["identity"];return e.scope&&n.push(...e.scope),E({id:"reddit",options:e,authorizationEndpoint:"https://www.reddit.com/api/v1/authorize",scopes:n,state:t,redirectURI:o,duration:e.duration})},validateAuthorizationCode:async({code:t,redirectURI:r})=>{let o=new URLSearchParams({grant_type:"authorization_code",code:t,redirect_uri:e.redirectURI||r}),n={"content-type":"application/x-www-form-urlencoded",accept:"text/plain","user-agent":"better-auth",Authorization:`Basic ${Buffer.from(`${e.clientId}:${e.clientSecret}`).toString("base64")}`},{data:i,error:s}=await R("https://www.reddit.com/api/v1/access_token",{method:"POST",headers:n,body:o.toString()});if(s)throw s;return _e(i)},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:o}=await R("https://oauth.reddit.com/api/v1/me",{headers:{Authorization:`Bearer ${t.accessToken}`,"User-Agent":"better-auth"}});if(o)return null;let n=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.oauth_client_id,emailVerified:r.has_verified_email,image:r.icon_img?.split("?")[0],...n},data:r}}});var Ot=require("zod"),$r={apple:lt,discord:ut,facebook:pt,github:ft,microsoft:wt,google:gt,spotify:yt,twitch:Rt,twitter:kt,dropbox:Ut,linkedin:Et,gitlab:Tt,reddit:vt},Ve=Object.keys($r),St=Ot.z.enum(Ve,{description:"OAuth2 provider to use"});var V=require("zod");var ae=require("better-call");var Z=require("better-call");var X=require("zod");function It(e){try{return JSON.parse(e)}catch{return null}}var g={USER_NOT_FOUND:"User not found",FAILED_TO_CREATE_USER:"Failed to create user",FAILED_TO_CREATE_SESSION:"Failed to create session",FAILED_TO_UPDATE_USER:"Failed to update user",FAILED_TO_GET_SESSION:"Failed to get session",INVALID_PASSWORD:"Invalid password",INVALID_EMAIL:"Invalid email",INVALID_EMAIL_OR_PASSWORD:"Invalid email or password",SOCIAL_ACCOUNT_ALREADY_LINKED:"Social account already linked",PROVIDER_NOT_FOUND:"Provider not found",INVALID_TOKEN:"invalid token",ID_TOKEN_NOT_SUPPORTED:"id_token not supported",FAILED_TO_GET_USER_INFO:"Failed to get user info",USER_EMAIL_NOT_FOUND:"User email not found",EMAIL_NOT_VERIFIED:"Email not verified",PASSWORD_TOO_SHORT:"Password too short",PASSWORD_TOO_LONG:"Password too long",USER_ALREADY_EXISTS:"User already exists",EMAIL_CAN_NOT_BE_UPDATED:"Email can not be updated",CREDENTIAL_ACCOUNT_NOT_FOUND:"Credential account not found",SESSION_EXPIRED:"Session expired. Re-authenticate to perform this action.",FAILED_TO_UNLINK_LAST_ACCOUNT:"You can't unlink your last account",ACCOUNT_NOT_FOUND:"Account not found"};var Lt=require("@better-auth/utils/hmac"),xt=require("@better-auth/utils/base64"),Pt=require("@better-auth/utils/binary"),Dt=()=>h("/get-session",{method:"GET",query:X.z.optional(X.z.object({disableCookieCache:X.z.boolean({description:"Disable cookie cache and fetch session from database"}).or(X.z.string().transform(e=>e==="true")).optional(),disableRefresh:X.z.boolean({description:"Disable session refresh. Useful for checking session status, without updating the session"}).optional()})),requireHeaders:!0,metadata:{openapi:{description:"Get the current session",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}},user:{type:"object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{try{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)return e.json(null);let r=e.getCookie(e.context.authCookies.sessionData.name),o=r?It(Pt.binary.decode(xt.base64.decode(r))):null;if(o&&!await(0,Lt.createHMAC)("SHA-256","base64urlnopad").verify(e.context.secret,JSON.stringify(o.session),o.signature))return H(e),e.json(null);let n=await e.getSignedCookie(e.context.authCookies.dontRememberToken.name,e.context.secret);if(o?.session&&e.context.options.session?.cookieCache?.enabled&&!e.query?.disableCookieCache){let l=o.session;if(o.expiresAt<Date.now()||l.session.expiresAt<new Date){let u=e.context.authCookies.sessionData.name;e.setCookie(u,"",{maxAge:0})}else return e.json(l)}let i=await e.context.internalAdapter.findSession(t);if(e.context.session=i,!i||i.session.expiresAt<new Date)return H(e),i&&await e.context.internalAdapter.deleteSession(i.session.token),e.json(null);if(n||e.query?.disableRefresh)return e.json(i);let s=e.context.sessionConfig.expiresIn,d=e.context.sessionConfig.updateAge;if(i.session.expiresAt.valueOf()-s*1e3+d*1e3<=Date.now()){let l=await e.context.internalAdapter.updateSession(i.session.token,{expiresAt:K(e.context.sessionConfig.expiresIn,"sec")});if(!l)return H(e),e.json(null,{status:401});let p=(l.expiresAt.valueOf()-Date.now())/1e3;return await $(e,{session:l,user:i.user},!1,{maxAge:p}),e.json({session:l,user:i.user})}return await De(e,i),e.json(i)}catch(t){throw e.context.logger.error("INTERNAL_SERVER_ERROR",t),new Z.APIError("INTERNAL_SERVER_ERROR",{message:g.FAILED_TO_GET_SESSION})}}),M=async(e,t)=>{if(e.context.session)return e.context.session;let r=await Dt()({...e,_flag:"json",headers:e.headers,query:t}).catch(o=>null);return e.context.session=r,r},P=ne(async e=>{let t=await M(e);if(!t?.session)throw new Z.APIError("UNAUTHORIZED");return{session:t}}),Ct=ne(async e=>{let t=await M(e);if(!t?.session)throw new Z.APIError("UNAUTHORIZED");if(e.context.sessionConfig.freshAge===0)return{session:t};let r=e.context.sessionConfig.freshAge,o=t.session.updatedAt?.valueOf()||t.session.createdAt.valueOf();if(!(Date.now()-o<r*1e3))throw new Z.APIError("FORBIDDEN",{message:"Session is not fresh"});return{session:t}});var Vr=h("/revoke-session",{method:"POST",body:X.z.object({token:X.z.string({description:"The token to revoke"})}),use:[P],requireHeaders:!0,metadata:{openapi:{description:"Revoke a single session",requestBody:{content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}},required:["token"]}}}}}}},async e=>{let t=e.body.token,r=await e.context.internalAdapter.findSession(t);if(!r)throw new Z.APIError("BAD_REQUEST",{message:"Session not found"});if(r.session.userId!==e.context.session.user.id)throw new Z.APIError("UNAUTHORIZED");try{await e.context.internalAdapter.deleteSession(t)}catch(o){throw e.context.logger.error(o&&typeof o=="object"&&"name"in o?o.name:"",o),new Z.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),qr=h("/revoke-sessions",{method:"POST",use:[P],requireHeaders:!0,metadata:{openapi:{description:"Revoke all sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}},required:["status"]}}}}}}}},async e=>{try{await e.context.internalAdapter.deleteSessions(e.context.session.user.id)}catch(t){throw e.context.logger.error(t&&typeof t=="object"&&"name"in t?t.name:"",t),new Z.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),Br=h("/revoke-other-sessions",{method:"POST",requireHeaders:!0,use:[P],metadata:{openapi:{description:"Revoke all other sessions for the user except the current one",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.context.session;if(!t.user)throw new Z.APIError("UNAUTHORIZED");let n=(await e.context.internalAdapter.listSessions(t.user.id)).filter(i=>i.expiresAt>new Date).filter(i=>i.token!==e.context.session.session.token);return await Promise.all(n.map(i=>e.context.internalAdapter.deleteSession(i.token))),e.json({status:!0})});var Nt=require("jose");var jt=require("jose/errors");async function W(e,t,r,o=3600){return await st({email:t.toLowerCase(),updateTo:r},e,o)}async function Mr(e,t){if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new ae.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await W(e.context.secret,t.email,void 0,e.context.options.emailVerification?.expiresIn),o=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification.sendVerificationEmail({user:t,url:o,token:r},e.request)}var zr=h("/send-verification-email",{method:"POST",query:V.z.object({currentURL:V.z.string({description:"The URL to use for email verification callback"}).optional()}).optional(),body:V.z.object({email:V.z.string({description:"The email to send the verification email to"}).email(),callbackURL:V.z.string({description:"The URL to use for email verification callback"}).optional()}),metadata:{openapi:{description:"Send a verification email to the user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"The email to send the verification email to"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["email"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new ae.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let{email:t}=e.body,r=await e.context.internalAdapter.findUserByEmail(t);if(!r)throw new ae.APIError("BAD_REQUEST",{message:g.USER_NOT_FOUND});return await Mr(e,r.user),e.json({status:!0})}),Hr=h("/verify-email",{method:"GET",query:V.z.object({token:V.z.string({description:"The token to verify the email"}),callbackURL:V.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[ie(e=>e.query.callbackURL)],metadata:{openapi:{description:"Verify the email of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}},required:["user","status"]}}}}}}}},async e=>{function t(d){throw e.query.callbackURL?e.query.callbackURL.includes("?")?e.redirect(`${e.query.callbackURL}&error=${d}`):e.redirect(`${e.query.callbackURL}?error=${d}`):new ae.APIError("UNAUTHORIZED",{message:d})}let{token:r}=e.query,o;try{o=await(0,Nt.jwtVerify)(r,new TextEncoder().encode(e.context.secret),{algorithms:["HS256"]})}catch(d){return d instanceof jt.JWTExpired?t("token_expired"):t("invalid_token")}let i=V.z.object({email:V.z.string().email(),updateTo:V.z.string().optional()}).parse(o.payload),s=await e.context.internalAdapter.findUserByEmail(i.email);if(!s)return t("user_not_found");if(i.updateTo){let d=await M(e);if(!d){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}if(d.user.email!==i.email){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}let a=await e.context.internalAdapter.updateUserByEmail(i.email,{email:i.updateTo,emailVerified:!1}),c=await W(e.context.secret,i.updateTo);if(await e.context.options.emailVerification?.sendVerificationEmail?.({user:a,url:`${e.context.baseURL}/verify-email?token=${c}`,token:c},e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0,user:{id:a.id,email:a.email,name:a.name,image:a.image,emailVerified:a.emailVerified,createdAt:a.createdAt,updatedAt:a.updatedAt}})}if(await e.context.internalAdapter.updateUserByEmail(i.email,{emailVerified:!0}),e.context.options.emailVerification?.autoSignInAfterVerification){let d=await M(e);if(!d||d.user.email!==i.email){let a=await e.context.internalAdapter.createSession(s.user.id,e.request);if(!a)throw new ae.APIError("INTERNAL_SERVER_ERROR",{message:"Failed to create session"});await $(e,{session:a,user:s.user})}}if(e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0,user:null})});async function ke(e,{userInfo:t,account:r,callbackURL:o}){let n=await e.context.internalAdapter.findOAuthUser(t.email.toLowerCase(),r.accountId,r.providerId).catch(a=>{throw B.error(`Better auth was unable to query your database.
Error: `,a),e.redirect(`${e.context.baseURL}/error?error=internal_server_error`)}),i=n?.user,s=!i;if(n){let a=n.accounts.find(c=>c.providerId===r.providerId);if(a){let c=Object.fromEntries(Object.entries({accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}).filter(([l,p])=>p!==void 0));Object.keys(c).length>0&&await e.context.internalAdapter.updateAccount(a.id,c)}else{if(!e.context.options.account?.accountLinking?.trustedProviders?.includes(r.providerId)&&!t.emailVerified||e.context.options.account?.accountLinking?.enabled===!1)return Le&&B.warn(`User already exist but account isn't linked to ${r.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`),{error:"account not linked",data:null};try{await e.context.internalAdapter.linkAccount({providerId:r.providerId,accountId:t.id.toString(),userId:n.user.id,accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope})}catch(p){return B.error("Unable to link account",p),{error:"unable to link account",data:null}}}}else try{if(i=await e.context.internalAdapter.createOAuthUser({...t,email:t.email.toLowerCase(),id:void 0},{accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope,providerId:r.providerId,accountId:t.id.toString()}).then(a=>a?.user),!t.emailVerified&&i&&e.context.options.emailVerification?.sendOnSignUp){let a=await W(e.context.secret,i.email,void 0,e.context.options.emailVerification?.expiresIn),c=`${e.context.baseURL}/verify-email?token=${a}&callbackURL=${o}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:i,url:c,token:a},e.request)}}catch(a){return a instanceof y.APIError?{error:a.message,data:null,isRegister:!1}:{error:"unable to create user",data:null,isRegister:!1}}if(!i)return{error:"unable to create user",data:null,isRegister:!1};let d=await e.context.internalAdapter.createSession(i.id,e.request);return d?{data:{session:d,user:i},error:null,isRegister:s}:{error:"unable to create session",data:null,isRegister:!1}}var Fr=h("/sign-in/social",{method:"POST",query:T.z.object({currentURL:T.z.string().optional()}).optional(),body:T.z.object({callbackURL:T.z.string({description:"Callback URL to redirect to after the user has signed in"}).optional(),newUserCallbackURL:T.z.string().optional(),errorCallbackURL:T.z.string({description:"Callback URL to redirect to if an error happens"}).optional(),provider:St,disableRedirect:T.z.boolean({description:"Disable automatic redirection to the provider. Useful for handling the redirection yourself"}).optional(),idToken:T.z.optional(T.z.object({token:T.z.string({description:"ID token from the provider"}),nonce:T.z.string({description:"Nonce used to generate the token"}).optional(),accessToken:T.z.string({description:"Access token from the provider"}).optional(),refreshToken:T.z.string({description:"Refresh token from the provider"}).optional(),expiresAt:T.z.number({description:"Expiry date of the token"}).optional()}),{description:"ID token from the provider to sign in the user with id token"})}),metadata:{openapi:{description:"Sign in with a social provider",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"string"},user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{let t=e.context.socialProviders.find(i=>i.id===e.body.provider);if(!t)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:g.PROVIDER_NOT_FOUND});if(e.body.idToken){if(!t.verifyIdToken)throw e.context.logger.error("Provider does not support id token verification",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:g.ID_TOKEN_NOT_SUPPORTED});let{token:i,nonce:s}=e.body.idToken;if(!await t.verifyIdToken(i,s))throw e.context.logger.error("Invalid id token",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:g.INVALID_TOKEN});let a=await t.getUserInfo({idToken:i,accessToken:e.body.idToken.accessToken,refreshToken:e.body.idToken.refreshToken});if(!a||!a?.user)throw e.context.logger.error("Failed to get user info",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:g.FAILED_TO_GET_USER_INFO});if(!a.user.email)throw e.context.logger.error("User email not found",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:g.USER_EMAIL_NOT_FOUND});let c=await ke(e,{userInfo:{email:a.user.email,id:a.user.id,name:a.user.name||"",image:a.user.image,emailVerified:a.user.emailVerified||!1},account:{providerId:t.id,accountId:a.user.id,accessToken:e.body.idToken.accessToken}});if(c.error)throw new L.APIError("UNAUTHORIZED",{message:c.error});return await $(e,c.data),e.json({redirect:!1,token:c.data.session.token,url:void 0,user:{id:c.data.user.id,email:c.data.user.email,name:c.data.user.name,image:c.data.user.image,emailVerified:c.data.user.emailVerified,createdAt:c.data.user.createdAt,updatedAt:c.data.user.updatedAt}})}let{codeVerifier:r,state:o}=await Re(e),n=await t.createAuthorizationURL({state:o,codeVerifier:r,redirectURI:`${e.context.baseURL}/callback/${t.id}`});return e.json({url:n.toString(),redirect:!e.body.disableRedirect})}),Gr=h("/sign-in/email",{method:"POST",body:T.z.object({email:T.z.string({description:"Email of the user"}),password:T.z.string({description:"Password of the user"}),callbackURL:T.z.string({description:"Callback URL to use as a redirect for email verification"}).optional(),rememberMe:T.z.boolean({description:"If this is false, the session will not be remembered. Default is `true`."}).default(!0).optional()}),metadata:{openapi:{description:"Sign in with email and password",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{if(!e.context.options?.emailAndPassword?.enabled)throw e.context.logger.error("Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!"),new L.APIError("BAD_REQUEST",{message:"Email and password is not enabled"});let{email:t,password:r}=e.body;if(!T.z.string().email().safeParse(t).success)throw new L.APIError("BAD_REQUEST",{message:g.INVALID_EMAIL});let n=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!n)throw await e.context.password.hash(r),e.context.logger.error("User not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:g.INVALID_EMAIL_OR_PASSWORD});let i=n.accounts.find(c=>c.providerId==="credential");if(!i)throw e.context.logger.error("Credential account not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:g.INVALID_EMAIL_OR_PASSWORD});let s=i?.password;if(!s)throw e.context.logger.error("Password not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:g.INVALID_EMAIL_OR_PASSWORD});if(!await e.context.password.verify({hash:s,password:r}))throw e.context.logger.error("Invalid password"),new L.APIError("UNAUTHORIZED",{message:g.INVALID_EMAIL_OR_PASSWORD});if(e.context.options?.emailAndPassword?.requireEmailVerification&&!n.user.emailVerified){if(!e.context.options?.emailVerification?.sendVerificationEmail)throw new L.APIError("UNAUTHORIZED",{message:g.EMAIL_NOT_VERIFIED});let c=await W(e.context.secret,n.user.email,void 0,e.context.options.emailVerification?.expiresIn),l=`${e.context.baseURL}/verify-email?token=${c}&callbackURL=${e.body.callbackURL||"/"}`;throw await e.context.options.emailVerification.sendVerificationEmail({user:n.user,url:l,token:c},e.request),new L.APIError("FORBIDDEN",{message:g.EMAIL_NOT_VERIFIED})}let a=await e.context.internalAdapter.createSession(n.user.id,e.headers,e.body.rememberMe===!1);if(!a)throw e.context.logger.error("Failed to create session"),new L.APIError("UNAUTHORIZED",{message:g.FAILED_TO_CREATE_SESSION});return await $(e,{session:a,user:n.user},e.body.rememberMe===!1),e.json({redirect:!!e.body.callbackURL,token:a.token,url:e.body.callbackURL,user:{id:n.user.id,email:n.user.email,name:n.user.name,image:n.user.image,emailVerified:n.user.emailVerified,createdAt:n.user.createdAt,updatedAt:n.user.updatedAt}})});var de=require("zod");var Ue=de.z.object({code:de.z.string().optional(),error:de.z.string().optional(),error_description:de.z.string().optional(),state:de.z.string().optional()}),Zr=h("/callback/:id",{method:["GET","POST"],body:Ue.optional(),query:Ue.optional(),metadata:se},async e=>{let t;try{if(e.method==="GET")t=Ue.parse(e.query);else if(e.method==="POST")t=Ue.parse(e.body);else throw new Error("Unsupported method")}catch(I){throw e.context.logger.error("INVALID_CALLBACK_REQUEST",I),e.redirect(`${e.context.baseURL}/error?error=invalid_callback_request`)}let{code:r,error:o,state:n,error_description:i}=t;if(!n)throw e.context.logger.error("State not found",o),e.redirect(`${e.context.baseURL}/error?error=state_not_found`);if(!r)throw e.context.logger.error("Code not found"),e.redirect(`${e.context.baseURL}/error?error=${o||"no_code"}&error_description=${i}`);let s=e.context.socialProviders.find(I=>I.id===e.params.id);if(!s)throw e.context.logger.error("Oauth provider with id",e.params.id,"not found"),e.redirect(`${e.context.baseURL}/error?error=oauth_provider_not_found`);let{codeVerifier:d,callbackURL:a,link:c,errorURL:l,newUserURL:p}=await dt(e),u;try{u=await s.validateAuthorizationCode({code:r,codeVerifier:d,redirectURI:`${e.context.baseURL}/callback/${s.id}`})}catch(I){throw e.context.logger.error("",I),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`)}let b=await s.getUserInfo(u).then(I=>I?.user);function m(I){let _=l||a||`${e.context.baseURL}/error`;throw _.includes("?")?_=`${_}&error=${I}`:_=`${_}?error=${I}`,e.redirect(_)}if(!b)return e.context.logger.error("Unable to get user info"),m("unable_to_get_user_info");if(!b.email)return e.context.logger.error("Provider did not return email. This could be due to misconfiguration in the provider settings."),m("email_not_found");if(!a)throw e.context.logger.error("No callback URL found"),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);if(c){if(c.email!==b.email.toLowerCase())return m("email_doesn't_match");if(!await e.context.internalAdapter.createAccount({userId:c.userId,providerId:s.id,accountId:b.id}))return m("unable_to_link_account");let _;try{_=a.toString()}catch{_=a}throw e.redirect(_)}let f=await ke(e,{userInfo:{...b,email:b.email,name:b.name||b.email},account:{providerId:s.id,accountId:b.id,...u,scope:u.scopes?.join(",")},callbackURL:a});if(f.error)return e.context.logger.error(f.error.split(" ").join("_")),m(f.error.split(" ").join("_"));let{session:z,user:N}=f.data;await $(e,{session:z,user:N});let Q;try{Q=(f.isRegister&&p||a).toString()}catch{Q=f.isRegister&&p||a}throw e.redirect(Q)});var $t=require("better-call");var Wr=h("/sign-out",{method:"POST",requireHeaders:!0,metadata:{openapi:{description:"Sign out the current user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{success:{type:"boolean"}}}}}}}}}},async e=>{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)throw H(e),new $t.APIError("BAD_REQUEST",{message:g.FAILED_TO_GET_SESSION});return await e.context.internalAdapter.deleteSession(t),H(e),e.json({success:!0})});var C=require("zod");var ce=require("better-call");function Vt(e,t,r){let o=t?new URL(t,e.baseURL):new URL(`${e.baseURL}/error`);return r&&Object.entries(r).forEach(([n,i])=>o.searchParams.set(n,i)),o.href}function Qr(e,t,r){let o=new URL(t,e.baseURL);return r&&Object.entries(r).forEach(([n,i])=>o.searchParams.set(n,i)),o.href}var Jr=h("/forget-password",{method:"POST",body:C.z.object({email:C.z.string({description:"The email address of the user to send a password reset email to"}).email(),redirectTo:C.z.string({description:"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN"}).optional()}),metadata:{openapi:{description:"Send a password reset email to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.sendResetPassword)throw e.context.logger.error("Reset password isn't enabled.Please pass an emailAndPassword.sendResetPasswordToken function in your auth config!"),new ce.APIError("BAD_REQUEST",{message:"Reset password isn't enabled"});let{email:t,redirectTo:r}=e.body,o=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!o)return e.context.logger.error("Reset Password: User not found",{email:t}),e.json({status:!1},{body:{status:!0}});let n=60*60*1,i=K(e.context.options.emailAndPassword.resetPasswordTokenExpiresIn||n,"sec"),s=At(24);await e.context.internalAdapter.createVerificationValue({value:o.user.id.toString(),identifier:`reset-password:${s}`,expiresAt:i});let d=`${e.context.baseURL}/reset-password/${s}?callbackURL=${r}`;return await e.context.options.emailAndPassword.sendResetPassword({user:o.user,url:d,token:s},e.request),e.json({status:!0})}),Kr=h("/reset-password/:token",{method:"GET",query:C.z.object({callbackURL:C.z.string({description:"The URL to redirect the user to reset their password"})}),use:[ie(e=>e.query.callbackURL)],metadata:{openapi:{description:"Redirects the user to the callback URL with the token",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}}}}}}}}}},async e=>{let{token:t}=e.params,{callbackURL:r}=e.query;if(!t||!r)throw e.redirect(Vt(e.context,r,{error:"INVALID_TOKEN"}));let o=await e.context.internalAdapter.findVerificationValue(`reset-password:${t}`);throw!o||o.expiresAt<new Date?e.redirect(Vt(e.context,r,{error:"INVALID_TOKEN"})):e.redirect(Qr(e.context,r,{token:t}))}),Yr=h("/reset-password",{query:C.z.optional(C.z.object({token:C.z.string().optional(),currentURL:C.z.string().optional()})),method:"POST",body:C.z.object({newPassword:C.z.string({description:"The new password to set"}),token:C.z.string({description:"The token to reset the password"}).optional()}),metadata:{openapi:{description:"Reset the password for a user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.body.token||e.query?.token||(e.query?.currentURL?new URL(e.query.currentURL).searchParams.get("token"):"");if(!t)throw new ce.APIError("BAD_REQUEST",{message:g.INVALID_TOKEN});let{newPassword:r}=e.body,o=e.context.password?.config.minPasswordLength,n=e.context.password?.config.maxPasswordLength;if(r.length<o)throw new ce.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_SHORT});if(r.length>n)throw new ce.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_LONG});let i=`reset-password:${t}`,s=await e.context.internalAdapter.findVerificationValue(i);if(!s||s.expiresAt<new Date)throw new ce.APIError("BAD_REQUEST",{message:g.INVALID_TOKEN});await e.context.internalAdapter.deleteVerificationValue(s.id);let d=s.value,a=await e.context.password.hash(r);return(await e.context.internalAdapter.findAccounts(d)).find(p=>p.providerId==="credential")?(await e.context.internalAdapter.updatePassword(d,a),e.json({status:!0})):(await e.context.internalAdapter.createAccount({userId:d,providerId:"credential",password:a,accountId:d}),e.json({status:!0}))});var O=require("zod");var v=require("better-call");var w=require("zod"),Xr=require("better-call"),$s=w.z.object({id:w.z.string(),providerId:w.z.string(),accountId:w.z.string(),userId:w.z.string(),accessToken:w.z.string().nullish(),refreshToken:w.z.string().nullish(),idToken:w.z.string().nullish(),accessTokenExpiresAt:w.z.date().nullish(),refreshTokenExpiresAt:w.z.date().nullish(),scope:w.z.string().nullish(),password:w.z.string().nullish(),createdAt:w.z.date().default(()=>new Date),updatedAt:w.z.date().default(()=>new Date)}),Vs=w.z.object({id:w.z.string(),email:w.z.string().transform(e=>e.toLowerCase()),emailVerified:w.z.boolean().default(!1),name:w.z.string(),image:w.z.string().nullish(),createdAt:w.z.date().default(()=>new Date),updatedAt:w.z.date().default(()=>new Date)}),qs=w.z.object({id:w.z.string(),userId:w.z.string(),expiresAt:w.z.date(),createdAt:w.z.date().default(()=>new Date),updatedAt:w.z.date().default(()=>new Date),token:w.z.string(),ipAddress:w.z.string().nullish(),userAgent:w.z.string().nullish()}),Bs=w.z.object({id:w.z.string(),value:w.z.string(),createdAt:w.z.date().default(()=>new Date),updatedAt:w.z.date().default(()=>new Date),expiresAt:w.z.date(),identifier:w.z.string()});var to=h("/change-password",{method:"POST",body:O.z.object({newPassword:O.z.string({description:"The new password to set"}),currentPassword:O.z.string({description:"The current password"}),revokeOtherSessions:O.z.boolean({description:"Revoke all other sessions"}).optional()}),use:[P],metadata:{openapi:{description:"Change the password of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{description:"The user object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{let{newPassword:t,currentPassword:r,revokeOtherSessions:o}=e.body,n=e.context.session,i=e.context.password.config.minPasswordLength;if(t.length<i)throw e.context.logger.error("Password is too short"),new v.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_SHORT});let s=e.context.password.config.maxPasswordLength;if(t.length>s)throw e.context.logger.error("Password is too long"),new v.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_LONG});let a=(await e.context.internalAdapter.findAccounts(n.user.id)).find(u=>u.providerId==="credential"&&u.password);if(!a||!a.password)throw new v.APIError("BAD_REQUEST",{message:g.CREDENTIAL_ACCOUNT_NOT_FOUND});let c=await e.context.password.hash(t);if(!await e.context.password.verify({hash:a.password,password:r}))throw new v.APIError("BAD_REQUEST",{message:g.INVALID_PASSWORD});await e.context.internalAdapter.updateAccount(a.id,{password:c});let p=null;if(o){await e.context.internalAdapter.deleteSessions(n.user.id);let u=await e.context.internalAdapter.createSession(n.user.id,e.headers);if(!u)throw new v.APIError("INTERNAL_SERVER_ERROR",{message:g.FAILED_TO_GET_SESSION});await $(e,{session:u,user:n.user}),p=u.token}return e.json({token:p,user:{id:n.user.id,email:n.user.email,name:n.user.name,image:n.user.image,emailVerified:n.user.emailVerified,createdAt:n.user.createdAt,updatedAt:n.user.updatedAt}})}),ro=h("/set-password",{method:"POST",body:O.z.object({newPassword:O.z.string()}),metadata:{SERVER_ONLY:!0},use:[P]},async e=>{let{newPassword:t}=e.body,r=e.context.session,o=e.context.password.config.minPasswordLength;if(t.length<o)throw e.context.logger.error("Password is too short"),new v.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_SHORT});let n=e.context.password.config.maxPasswordLength;if(t.length>n)throw e.context.logger.error("Password is too long"),new v.APIError("BAD_REQUEST",{message:g.PASSWORD_TOO_LONG});let s=(await e.context.internalAdapter.findAccounts(r.user.id)).find(a=>a.providerId==="credential"&&a.password),d=await e.context.password.hash(t);if(!s)return await e.context.internalAdapter.linkAccount({userId:r.user.id,providerId:"credential",accountId:r.user.id,password:d}),e.json({status:!0});throw new v.APIError("BAD_REQUEST",{message:"user already has a password"})}),oo=h("/delete-user",{method:"POST",use:[P],body:O.z.object({callbackURL:O.z.string().optional(),password:O.z.string().optional(),token:O.z.string().optional()}),metadata:{openapi:{description:"Delete the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object"}}}}}}}},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options",{session:e.context.session}),new v.APIError("NOT_FOUND");let t=e.context.session;if(e.body.password){let i=(await e.context.internalAdapter.findAccounts(t.user.id)).find(d=>d.providerId==="credential"&&d.password);if(!i||!i.password)throw new v.APIError("BAD_REQUEST",{message:g.CREDENTIAL_ACCOUNT_NOT_FOUND});if(!await e.context.password.verify({hash:i.password,password:e.body.password}))throw new v.APIError("BAD_REQUEST",{message:g.INVALID_PASSWORD})}else if(e.context.options.session?.freshAge){let n=t.session.createdAt.getTime(),i=e.context.options.session.freshAge;if(Date.now()-n>i)throw new v.APIError("BAD_REQUEST",{message:g.SESSION_EXPIRED})}if(e.body.token)return await qt({...e,query:{token:e.body.token}}),e.json({success:!0,message:"User deleted"});if(e.context.options.user.deleteUser?.sendDeleteAccountVerification){let n=x(32,"0-9","a-z");await e.context.internalAdapter.createVerificationValue({value:t.user.id,identifier:`delete-account-${n}`,expiresAt:new Date(Date.now()+1e3*60*60*24)});let i=`${e.context.baseURL}/delete-user/callback?token=${n}&callbackURL=${e.body.callbackURL||"/"}`;return await e.context.options.user.deleteUser.sendDeleteAccountVerification({user:t.user,url:i,token:n},e.request),e.json({success:!0,message:"Verification email sent"})}let r=e.context.options.user.deleteUser?.beforeDelete;r&&await r(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),H(e);let o=e.context.options.user.deleteUser?.afterDelete;return o&&await o(t.user,e.request),e.json({success:!0,message:"User deleted"})}),qt=h("/delete-user/callback",{method:"GET",query:O.z.object({token:O.z.string(),callbackURL:O.z.string().optional()}),use:[ie(e=>e.query.callbackURL)]},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options"),new v.APIError("NOT_FOUND");let t=await M(e);if(!t)throw new v.APIError("NOT_FOUND",{message:g.FAILED_TO_GET_USER_INFO});let r=await e.context.internalAdapter.findVerificationValue(`delete-account-${e.query.token}`);if(!r||r.expiresAt<new Date)throw r&&await e.context.internalAdapter.deleteVerificationValue(r.id),new v.APIError("NOT_FOUND",{message:g.INVALID_TOKEN});if(r.value!==t.user.id)throw new v.APIError("NOT_FOUND",{message:g.INVALID_TOKEN});let o=e.context.options.user.deleteUser?.beforeDelete;o&&await o(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),await e.context.internalAdapter.deleteVerificationValue(r.id),H(e);let n=e.context.options.user.deleteUser?.afterDelete;if(n&&await n(t.user,e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL||"/");return e.json({success:!0,message:"User deleted"})}),no=h("/change-email",{method:"POST",query:O.z.object({currentURL:O.z.string().optional()}).optional(),body:O.z.object({newEmail:O.z.string({description:"The new email to set"}).email(),callbackURL:O.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[P],metadata:{openapi:{responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.user?.changeEmail?.enabled)throw e.context.logger.error("Change email is disabled."),new v.APIError("BAD_REQUEST",{message:"Change email is disabled"});if(e.body.newEmail===e.context.session.user.email)throw e.context.logger.error("Email is the same"),new v.APIError("BAD_REQUEST",{message:"Email is the same"});if(await e.context.internalAdapter.findUserByEmail(e.body.newEmail))throw e.context.logger.error("Email already exists"),new v.APIError("BAD_REQUEST",{message:"Couldn't update your email"});if(e.context.session.user.emailVerified!==!0){let n=await e.context.internalAdapter.updateUserByEmail(e.context.session.user.email,{email:e.body.newEmail});return e.json({status:!0})}if(!e.context.options.user.changeEmail.sendChangeEmailVerification)throw e.context.logger.error("Verification email isn't enabled."),new v.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await W(e.context.secret,e.context.session.user.email,e.body.newEmail,e.context.options.emailVerification?.expiresIn),o=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;return await e.context.options.user.changeEmail.sendChangeEmailVerification({user:e.context.session.user,newEmail:e.body.newEmail,url:o,token:r},e.request),e.json({status:!0})});var io=(e="Unknown")=>`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Error</title>
    <style>
        :root {
            --bg-color: #f8f9fa;
            --text-color: #212529;
            --accent-color: #000000;
            --error-color: #dc3545;
            --border-color: #e9ecef;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            line-height: 1.5;
        }
        .error-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 2.5rem;
            text-align: center;
            max-width: 90%;
            width: 400px;
        }
        h1 {
            color: var(--error-color);
            font-size: 1.75rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        p {
            margin-bottom: 1.5rem;
            color: #495057;
        }
        .btn {
            background-color: var(--accent-color);
            color: #ffffff;
            text-decoration: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: inline-block;
            font-weight: 500;
            border: 2px solid var(--accent-color);
        }
        .btn:hover {
            background-color: #131721;
        }
        .error-code {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
        }
        .icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="error-container">
        <div class="icon">\u26A0\uFE0F</div>
        <h1>Better Auth Error</h1>
        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>
        <a href="/" id="returnLink" class="btn">Return to Application</a>
        <div class="error-code">Error Code: <span id="errorCode">${e}</span></div>
    </div>
</body>
</html>`,so=h("/error",{method:"GET",metadata:{...se,openapi:{description:"Displays an error page",responses:{200:{description:"Success",content:{"text/html":{schema:{type:"string"}}}}}}}},async e=>{let t=new URL(e.request?.url||"").searchParams.get("error")||"Unknown";return new Response(io(t),{headers:{"Content-Type":"text/html"}})});var ao=h("/ok",{method:"GET",metadata:{...se,openapi:{description:"Check if the API is working",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{ok:{type:"boolean"}}}}}}}}}},async e=>e.json({ok:!0}));var co=require("zod");var lo=require("better-call");var ee=require("zod");var me=require("better-call");var uo=h("/list-accounts",{method:"GET",use:[P],metadata:{openapi:{description:"List all accounts linked to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string"},provider:{type:"string"}}}}}}}}}}},async e=>{let t=e.context.session,r=await e.context.internalAdapter.findAccounts(t.user.id);return e.json(r.map(o=>({id:o.id,provider:o.providerId,createdAt:o.createdAt,updatedAt:o.updatedAt,accountId:o.accountId,scopes:o.scope?.split(",")||[]})))}),po=h("/link-social",{method:"POST",requireHeaders:!0,query:ee.z.object({currentURL:ee.z.string().optional()}).optional(),body:ee.z.object({callbackURL:ee.z.string({description:"The URL to redirect to after the user has signed in"}).optional(),provider:ee.z.enum(Ve,{description:"The OAuth2 provider to use"})}),use:[P],metadata:{openapi:{description:"Link a social account to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{url:{type:"string"},redirect:{type:"boolean"}},required:["url","redirect"]}}}}}}}},async e=>{let t=e.context.session;if((await e.context.internalAdapter.findAccounts(t.user.id)).find(d=>d.providerId===e.body.provider))throw new me.APIError("BAD_REQUEST",{message:g.SOCIAL_ACCOUNT_ALREADY_LINKED});let n=e.context.socialProviders.find(d=>d.id===e.body.provider);if(!n)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new me.APIError("NOT_FOUND",{message:g.PROVIDER_NOT_FOUND});let i=await Re(e,{userId:t.user.id,email:t.user.email}),s=await n.createAuthorizationURL({state:i.state,codeVerifier:i.codeVerifier,redirectURI:`${e.context.baseURL}/callback/${n.id}`});return e.json({url:s.toString(),redirect:!0})}),fo=h("/unlink-account",{method:"POST",body:ee.z.object({providerId:ee.z.string()}),use:[Ct]},async e=>{let t=await e.context.internalAdapter.findAccounts(e.context.session.user.id);if(t.length===1)throw new me.APIError("BAD_REQUEST",{message:g.FAILED_TO_UNLINK_LAST_ACCOUNT});if(!t.find(o=>o.providerId===e.body.providerId))throw new me.APIError("BAD_REQUEST",{message:g.ACCOUNT_NOT_FOUND});return await e.context.internalAdapter.deleteAccount(e.body.providerId,e.context.session.user.id),e.json({status:!0})});var y=require("better-call");var zt=require("@better-auth/utils");var Bt={oauthApplication:{modelName:"oauthApplication",fields:{name:{type:"string"},icon:{type:"string",required:!1},metadata:{type:"string",required:!1},clientId:{type:"string",unique:!0},clientSecret:{type:"string"},redirectURLs:{type:"string"},type:{type:"string"},disabled:{type:"boolean",required:!1,defaultValue:!1},userId:{type:"string",required:!1},createdAt:{type:"date"},updatedAt:{type:"date"}}},oauthAccessToken:{modelName:"oauthAccessToken",fields:{accessToken:{type:"string",unique:!0},refreshToken:{type:"string",unique:!0},accessTokenExpiresAt:{type:"date"},refreshTokenExpiresAt:{type:"date"},clientId:{type:"string"},userId:{type:"string",required:!1},scopes:{type:"string"},createdAt:{type:"date"},updatedAt:{type:"date"}}},oauthConsent:{modelName:"oauthConsent",fields:{clientId:{type:"string"},userId:{type:"string"},scopes:{type:"string"},createdAt:{type:"date"},updatedAt:{type:"date"},consentGiven:{type:"boolean"}}}};var Ee=require("better-call");function ge(e,t,r){return`${e.includes("?")?"&":"?"}error=${t}&error_description=${r}`}async function qe(e,t){let r={codeExpiresIn:600,defaultScope:"openid",...t,scopes:["openid","profile","email","offline_access",...t?.scopes||[]]};if(!e.request)throw new Ee.APIError("UNAUTHORIZED",{error_description:"request not found",error:"invalid_request"});let o=await M(e);if(!o){await e.setSignedCookie("oidc_login_prompt",JSON.stringify(e.query),e.context.secret,{maxAge:600});let f=e.request.url?.split("?")[1];throw e.redirect(`${t.loginPage}?${f}`)}let n=e.query;if(!n.client_id)throw e.redirect(`${e.context.baseURL}/error?error=invalid_client`);if(!n.response_type)throw e.redirect(ge(`${e.context.baseURL}/error`,"invalid_request","response_type is required"));let i=await e.context.adapter.findOne({model:"oauthApplication",where:[{field:"clientId",value:e.query.client_id}]}).then(f=>f?{...f,redirectURLs:f.redirectURLs.split(","),metadata:f.metadata?JSON.parse(f.metadata):{}}:null);if(!i)throw e.redirect(`${e.context.baseURL}/error?error=invalid_client`);let s=i.redirectURLs.find(f=>f===e.query.redirect_uri);if(!s||!n.redirect_uri)throw new Ee.APIError("BAD_REQUEST",{message:"Invalid redirect URI"});if(i.disabled)throw e.redirect(`${e.context.baseURL}/error?error=client_disabled`);if(n.response_type!=="code")throw e.redirect(`${e.context.baseURL}/error?error=unsupported_response_type`);let d=n.scope?.split(" ").filter(f=>f)||r.defaultScope.split(" "),a=d.filter(f=>!r.scopes.includes(f)||f==="offline_access"&&n.prompt!=="consent");if(a.length)throw e.redirect(ge(n.redirect_uri,"invalid_scope",`The following scopes are invalid: ${a.join(", ")}`));if((!n.code_challenge||!n.code_challenge_method)&&t.requirePKCE)throw e.redirect(ge(n.redirect_uri,"invalid_request","pkce is required"));if(!["s256",t.allowPlainCodeChallengeMethod?"plain":"s256"].includes(n.code_challenge_method?.toLowerCase()||""))throw e.redirect(ge(n.redirect_uri,"invalid_request","invalid code_challenge method"));let c=x(32,"a-z","A-Z","0-9"),l=r.codeExpiresIn*1e3,p=new Date(Date.now()+l);try{await e.context.internalAdapter.createVerificationValue({value:JSON.stringify({clientId:i.clientId,redirectURI:n.redirect_uri,scope:d,userId:o.user.id,authTime:o.session.createdAt.getTime(),requireConsent:n.prompt==="consent",state:n.prompt==="consent"?n.state:null,codeChallenge:n.code_challenge,codeChallengeMethod:n.code_challenge_method}),identifier:c,expiresAt:p})}catch{throw e.redirect(ge(n.redirect_uri,"server_error","An error occurred while processing the request"))}let u=new URL(s);if(u.searchParams.set("code",c),u.searchParams.set("state",e.query.state),n.prompt!=="consent"||await e.context.adapter.findOne({model:"oauthConsent",where:[{field:"clientId",value:i.clientId},{field:"userId",value:o.user.id}]}).then(f=>!!f?.consentGiven))throw e.redirect(u.toString());if(t?.consentPage){await e.setSignedCookie("oidc_consent_prompt",c,e.context.secret,{maxAge:600});let f=`${t.consentPage}?client_id=${i.clientId}&scope=${d.join(" ")}`;throw e.redirect(f)}let m=t?.getConsentHTML;if(!m)throw new Ee.APIError("INTERNAL_SERVER_ERROR",{message:"No consent page provided"});return new Response(m({scopes:d,clientMetadata:i.metadata,clientIcon:i?.icon,clientId:i.clientId,clientName:i.name,code:c}),{headers:{"content-type":"text/html"}})}var Ht=require("@better-auth/utils/hash"),mo=(e,t)=>{let r=e.context.options.baseURL,o=e.context.baseURL;return{issuer:r,authorization_endpoint:`${o}/oauth2/authorize`,token_endpoint:`${o}/oauth2/token`,userInfo_endpoint:`${o}/oauth2/userinfo`,jwks_uri:`${o}/jwks`,registration_endpoint:`${o}/oauth2/register`,scopes_supported:["openid","profile","email","offline_access"],response_types_supported:["code"],response_modes_supported:["query"],grant_types_supported:["authorization_code"],acr_values_supported:["urn:mace:incommon:iap:silver","urn:mace:incommon:iap:bronze"],subject_types_supported:["public"],id_token_signing_alg_values_supported:["RS256","none"],token_endpoint_auth_methods_supported:["client_secret_basic","client_secret_post"],claims_supported:["sub","iss","aud","exp","nbf","iat","jti","email","email_verified","name"],...t?.metadata}},go=e=>{let t={oauthClient:"oauthApplication",oauthAccessToken:"oauthAccessToken",oauthConsent:"oauthConsent"},r={codeExpiresIn:600,defaultScope:"openid",accessTokenExpiresIn:3600,refreshTokenExpiresIn:604800,...e,scopes:["openid","profile","email","offline_access",...e?.scopes||[]]};return{id:"oidc",hooks:{after:[{matcher(){return!0},handler:async o=>{let n=await o.getSignedCookie("oidc_login_prompt",o.context.secret),i=o.context.authCookies.sessionToken.name,s=Ge(o.responseHeader.get("set-cookie")||""),d=s.has(i);if(!n||!d)return;o.setCookie("oidc_login_prompt","",{maxAge:0});let c=s.get(i)?.value?.split(".")[0];if(!c)return;let l=await o.context.internalAdapter.findSession(c);return l?(o.query=JSON.parse(n),o.query.prompt="consent",o.context.session=l,await qe(o,r)):void 0}}]},endpoints:{getOpenIdConfig:h("/.well-known/openid-configuration",{method:"GET"},async o=>mo(o,e)),oAuth2authorize:h("/oauth2/authorize",{method:"GET",query:D.z.record(D.z.string(),D.z.any())},async o=>qe(o,r)),oAuthConsent:h("/oauth2/consent",{method:"POST",body:D.z.object({accept:D.z.boolean()}),use:[P]},async o=>{let n=await o.getSignedCookie("oidc_consent_prompt",o.context.secret);if(!n)throw new y.APIError("UNAUTHORIZED",{error_description:"No consent prompt found",error:"invalid_grant"});let i=await o.context.internalAdapter.findVerificationValue(n);if(!i)throw new y.APIError("UNAUTHORIZED",{error_description:"Invalid code",error:"invalid_grant"});if(i.expiresAt<new Date)throw await o.context.internalAdapter.deleteVerificationValue(i.id),new y.APIError("UNAUTHORIZED",{error_description:"Code expired",error:"invalid_grant"});let s=JSON.parse(i.value);if(!s.requireConsent||!s.state)throw new y.APIError("UNAUTHORIZED",{error_description:"Consent not required",error:"invalid_grant"});if(!o.body.accept)return await o.context.internalAdapter.deleteVerificationValue(i.id),o.json({redirectURI:`${s.redirectURI}?error=access_denied&error_description=User denied access`});let d=x(32,"a-z","A-Z","0-9"),a=r.codeExpiresIn*1e3,c=new Date(Date.now()+a);await o.context.internalAdapter.updateVerificationValue(i.id,{value:JSON.stringify({...s,requireConsent:!1}),identifier:d,expiresAt:c}),await o.context.adapter.create({model:t.oauthConsent,data:{clientId:s.clientId,userId:s.userId,scopes:s.scope.join(" "),consentGiven:!0,createdAt:new Date,updatedAt:new Date}});let l=new URL(s.redirectURI);return l.searchParams.set("code",d),l.searchParams.set("state",s.state),o.json({redirectURI:l.toString()})}),oAuth2token:h("/oauth2/token",{method:"POST",body:D.z.any(),metadata:{isAction:!1}},async o=>{let{body:n}=o;if(!n)throw new y.APIError("BAD_REQUEST",{error_description:"request body not found",error:"invalid_request"});if(n instanceof FormData&&(n=Object.fromEntries(n.entries())),!(n instanceof Object))throw new y.APIError("BAD_REQUEST",{error_description:"request body is not an object",error:"invalid_request"});let{client_id:i,client_secret:s,grant_type:d,code:a,redirect_uri:c,refresh_token:l,code_verifier:p}=n;if(d==="refresh_token"){if(!l)throw new y.APIError("BAD_REQUEST",{error_description:"refresh_token is required",error:"invalid_request"});let k=await o.context.adapter.findOne({model:t.oauthAccessToken,where:[{field:"refreshToken",value:l.toString()}]});if(!k)throw new y.APIError("UNAUTHORIZED",{error_description:"invalid refresh token",error:"invalid_grant"});if(k.clientId!==i?.toString())throw new y.APIError("UNAUTHORIZED",{error_description:"invalid client_id",error:"invalid_client"});if(k.refreshTokenExpiresAt<new Date)throw new y.APIError("UNAUTHORIZED",{error_description:"refresh token expired",error:"invalid_grant"});let S=x(32,"a-z","A-Z"),j=x(32,"a-z","A-Z"),q=new Date(Date.now()+r.accessTokenExpiresIn*1e3),Be=new Date(Date.now()+r.refreshTokenExpiresIn*1e3);return await o.context.adapter.create({model:t.oauthAccessToken,data:{accessToken:S,refreshToken:j,accessTokenExpiresAt:q,refreshTokenExpiresAt:Be,clientId:i.toString(),userId:k.userId,scopes:k.scopes,createdAt:new Date,updatedAt:new Date}}),o.json({access_token:S,token_type:"bearer",expires_in:r.accessTokenExpiresIn,refresh_token:j,scope:k.scopes})}if(!a)throw new y.APIError("BAD_REQUEST",{error_description:"code is required",error:"invalid_request"});if(e.requirePKCE&&!p)throw new y.APIError("BAD_REQUEST",{error_description:"code verifier is missing",error:"invalid_request"});let u=await o.context.internalAdapter.findVerificationValue(a.toString());if(!u)throw new y.APIError("UNAUTHORIZED",{error_description:"invalid code",error:"invalid_grant"});if(u.expiresAt<new Date)throw await o.context.internalAdapter.deleteVerificationValue(u.id),new y.APIError("UNAUTHORIZED",{error_description:"code expired",error:"invalid_grant"});if(await o.context.internalAdapter.deleteVerificationValue(u.id),!i||!s)throw new y.APIError("UNAUTHORIZED",{error_description:"client_id and client_secret are required",error:"invalid_client"});if(!d)throw new y.APIError("BAD_REQUEST",{error_description:"grant_type is required",error:"invalid_request"});if(d!=="authorization_code")throw new y.APIError("BAD_REQUEST",{error_description:"grant_type must be 'authorization_code'",error:"unsupported_grant_type"});if(!c)throw new y.APIError("BAD_REQUEST",{error_description:"redirect_uri is required",error:"invalid_request"});let b=await o.context.adapter.findOne({model:t.oauthClient,where:[{field:"clientId",value:i.toString()}]}).then(k=>k?{...k,redirectURLs:k.redirectURLs.split(","),metadata:k.metadata?JSON.parse(k.metadata):{}}:null);if(!b)throw new y.APIError("UNAUTHORIZED",{error_description:"invalid client_id",error:"invalid_client"});if(b.disabled)throw new y.APIError("UNAUTHORIZED",{error_description:"client is disabled",error:"invalid_client"});if(!(b.clientSecret===s.toString()))throw new y.APIError("UNAUTHORIZED",{error_description:"invalid client_secret",error:"invalid_client"});let f=JSON.parse(u.value);if(f.clientId!==i.toString())throw new y.APIError("UNAUTHORIZED",{error_description:"invalid client_id",error:"invalid_client"});if(f.redirectURI!==c.toString())throw new y.APIError("UNAUTHORIZED",{error_description:"invalid redirect_uri",error:"invalid_client"});if(f.codeChallenge&&!p)throw new y.APIError("BAD_REQUEST",{error_description:"code verifier is missing",error:"invalid_request"});if((f.codeChallengeMethod==="plain"?p:await(0,Ht.createHash)("SHA-256","base64urlnopad").digest(p))!==f.codeChallenge)throw new y.APIError("UNAUTHORIZED",{error_description:"code verification failed",error:"invalid_request"});let N=f.scope;await o.context.internalAdapter.deleteVerificationValue(a.toString());let Q=x(32,"a-z","A-Z"),I=x(32,"A-Z","a-z"),_=new Date(Date.now()+r.accessTokenExpiresIn*1e3),he=new Date(Date.now()+r.refreshTokenExpiresIn*1e3);await o.context.adapter.create({model:t.oauthAccessToken,data:{accessToken:Q,refreshToken:I,accessTokenExpiresAt:_,refreshTokenExpiresAt:he,clientId:i.toString(),userId:f.userId,scopes:N.join(" "),createdAt:new Date,updatedAt:new Date}});let A=await o.context.internalAdapter.findUserById(f.userId);if(!A)throw new y.APIError("UNAUTHORIZED",{error_description:"user not found",error:"invalid_grant"});let ue={alg:"HS256",key:await zt.subtle.generateKey({name:"HMAC",hash:"SHA-256"},!0,["sign","verify"])},Te={given_name:A.name.split(" ")[0],family_name:A.name.split(" ")[1],name:A.name,profile:A.image,updated_at:A.updatedAt.toISOString()},we={email:A.email,email_verified:A.emailVerified},pe={...N.includes("profile")?Te:{},...N.includes("email")?we:{}},ve=await new Mt.SignJWT({sub:A.id,aud:i.toString(),iat:Date.now(),auth_time:o.context.session?.session.createdAt.getTime(),nonce:n.nonce,acr:"urn:mace:incommon:iap:silver",...pe}).setProtectedHeader({alg:ue.alg}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+r.accessTokenExpiresIn).sign(ue.key);return o.json({access_token:Q,token_type:"Bearer",expires_in:r.accessTokenExpiresIn,refresh_token:N.includes("offline_access")?I:void 0,scope:N.join(" "),id_token:N.includes("openid")?ve:void 0},{headers:{"Cache-Control":"no-store",Pragma:"no-cache"}})}),oAuth2userInfo:h("/oauth2/userinfo",{method:"GET",metadata:{isAction:!1}},async o=>{if(!o.request)throw new y.APIError("UNAUTHORIZED",{error_description:"request not found",error:"invalid_request"});let n=o.request.headers.get("authorization");if(!n)throw new y.APIError("UNAUTHORIZED",{error_description:"authorization header not found",error:"invalid_request"});let i=n.replace("Bearer ",""),s=await o.context.adapter.findOne({model:t.oauthAccessToken,where:[{field:"accessToken",value:i}]});if(!s)throw new y.APIError("UNAUTHORIZED",{error_description:"invalid access token",error:"invalid_token"});if(s.accessTokenExpiresAt<new Date)throw new y.APIError("UNAUTHORIZED",{error_description:"The Access Token expired",error:"invalid_token"});let d=await o.context.internalAdapter.findUserById(s.userId);if(!d)throw new y.APIError("UNAUTHORIZED",{error_description:"user not found",error:"invalid_token"});let a=s.scopes.split(" "),c={email:a.includes("email")?d.email:void 0,name:a.includes("profile")?d.name:void 0,picture:a.includes("profile")?d.image:void 0,given_name:a.includes("profile")?d.name.split(" ")[0]:void 0,family_name:a.includes("profile")?d.name.split(" ")[1]:void 0,email_verified:a.includes("email")?d.emailVerified:void 0};return o.json(c)}),registerOAuthApplication:h("/oauth2/register",{method:"POST",body:D.z.object({name:D.z.string(),icon:D.z.string().optional(),metadata:D.z.record(D.z.any()).optional(),redirectURLs:D.z.array(D.z.string())})},async o=>{let n=o.body,i=await M(o);if(!i&&!e.allowDynamicClientRegistration)throw new y.APIError("UNAUTHORIZED",{message:"Unauthorized"});let s=e.generateClientId?.()||x(32,"a-z","A-Z"),d=e.generateClientSecret?.()||x(32,"a-z","A-Z"),a=await o.context.adapter.create({model:t.oauthClient,data:{name:n.name,icon:n.icon,metadata:n.metadata?JSON.stringify(n.metadata):null,clientId:s,clientSecret:d,redirectURLs:n.redirectURLs.join(","),type:"web",authenticationScheme:"client_secret",disabled:!1,userId:i?.session.userId,createdAt:new Date,updatedAt:new Date}});return o.json({...a,redirectURLs:a.redirectURLs.split(","),metadata:a.metadata?JSON.parse(a.metadata):null})}),getOAuthClient:h("/oauth2/client/:id",{method:"GET",use:[P]},async o=>{let n=await o.context.adapter.findOne({model:t.oauthClient,where:[{field:"clientId",value:o.params.id}]});if(!n)throw new y.APIError("NOT_FOUND",{error_description:"client not found",error:"not_found"});return o.json({clientId:n.clientId,name:n.name,icon:n.icon})})},schema:Bt}};0&&(module.exports={oidcProvider});
