{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["import { fileURLToPath, pathToFileURL } from 'node:url'\n\nimport { compileEliminateDeadCode, compileStartOutput } from './compilers'\n\nimport type { Plugin } from 'vite'\n\nconst debug = Boolean(process.env.TSR_VITE_DEBUG)\n\nexport type TanStackStartViteOptions = {\n  env: 'server' | 'client'\n}\n\nconst transformFuncs = [\n  'createServerFn',\n  'createMiddleware',\n  'serverOnly',\n  'clientOnly',\n  'createIsomorphicFn',\n]\nconst tokenRegex = new RegExp(transformFuncs.join('|'))\nconst eitherFuncRegex = new RegExp(\n  `(function ${transformFuncs.join('|function ')})`,\n)\n\nexport function TanStackStartViteServerFn(\n  opts: TanStackStartViteOptions,\n): Plugin {\n  let ROOT: string = process.cwd()\n\n  return {\n    name: 'vite-plugin-tanstack-start-create-server-fn',\n    enforce: 'pre',\n    configResolved: (config) => {\n      ROOT = config.root\n    },\n    transform(code, id) {\n      const url = pathToFileURL(id)\n      url.searchParams.delete('v')\n      id = fileURLToPath(url).replace(/\\\\/g, '/')\n\n      const includesToken = tokenRegex.test(code)\n      const includesEitherFunc = eitherFuncRegex.test(code)\n\n      if (\n        !includesToken ||\n        includesEitherFunc\n        // /node_modules/.test(id)\n      ) {\n        return null\n      }\n\n      if (code.includes('@react-refresh')) {\n        throw new Error(\n          `We detected that the '@vitejs/plugin-react' was passed before '@tanstack/start-vite-plugin'. Please make sure that '@tanstack/router-vite-plugin' is passed before '@vitejs/plugin-react' and try again: \ne.g.\n\nplugins: [\n  TanStackStartVite(), // Place this before viteReact()\n  viteReact(),\n]\n`,\n        )\n      }\n\n      const compiled = compileStartOutput({\n        code,\n        root: ROOT,\n        filename: id,\n        env: opts.env,\n      })\n\n      if (debug) console.info('')\n      if (debug) console.info('Compiled createServerFn Output')\n      if (debug) console.info('')\n      if (debug) console.info(compiled.code)\n      if (debug) console.info('')\n      if (debug) console.info('')\n      if (debug) console.info('')\n\n      return compiled\n    },\n  }\n}\n\nexport function TanStackStartViteDeadCodeElimination(\n  opts: TanStackStartViteOptions,\n): Plugin {\n  let ROOT: string = process.cwd()\n\n  return {\n    name: 'vite-plugin-tanstack-start-dead-code-elimination',\n    enforce: 'post',\n    configResolved: (config) => {\n      ROOT = config.root\n    },\n    transform(code, id) {\n      const url = pathToFileURL(id)\n      url.searchParams.delete('v')\n      id = fileURLToPath(url).replace(/\\\\/g, '/')\n\n      if (transformFuncs.some((fn) => code.includes(fn))) {\n        if (debug) console.info('Handling dead code elimination: ', id)\n\n        if (debug) console.info('')\n        if (debug) console.info('Dead Code Elimination Input:')\n        if (debug) console.info('')\n        if (debug) console.info(code)\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n\n        const compiled = compileEliminateDeadCode({\n          code,\n          root: ROOT,\n          filename: id,\n          env: opts.env,\n        })\n\n        if (debug) console.info('')\n        if (debug) console.info('Dead Code Elimination Output:')\n        if (debug) console.info('')\n        if (debug) console.info(compiled.code)\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n\n        return compiled\n      }\n\n      return null\n    },\n  }\n}\n"],"names":["pathToFileURL","fileURLToPath","compileStartOutput","compileEliminateDeadCode"],"mappings":"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"}